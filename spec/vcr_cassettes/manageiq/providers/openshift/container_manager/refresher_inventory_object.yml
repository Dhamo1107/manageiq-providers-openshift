---
http_interactions:
- request:
    method: get
    uri: https://host.example.com:8443/api/v1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.4.2p198
      Authorization:
      - Bearer theToken
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Thu, 23 Aug 2018 06:21:26 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"kind":"APIResourceList","groupVersion":"v1","resources":[{"name":"bindings","singularName":"","namespaced":true,"kind":"Binding","verbs":["create"]},{"name":"componentstatuses","singularName":"","namespaced":false,"kind":"ComponentStatus","verbs":["get","list"],"shortNames":["cs"]},{"name":"configmaps","singularName":"","namespaced":true,"kind":"ConfigMap","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["cm"]},{"name":"endpoints","singularName":"","namespaced":true,"kind":"Endpoints","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["ep"]},{"name":"events","singularName":"","namespaced":true,"kind":"Event","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["ev"]},{"name":"limitranges","singularName":"","namespaced":true,"kind":"LimitRange","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["limits"]},{"name":"namespaces","singularName":"","namespaced":false,"kind":"Namespace","verbs":["create","delete","get","list","patch","update","watch"],"shortNames":["ns"]},{"name":"namespaces/finalize","singularName":"","namespaced":false,"kind":"Namespace","verbs":["update"]},{"name":"namespaces/status","singularName":"","namespaced":false,"kind":"Namespace","verbs":["get","patch","update"]},{"name":"nodes","singularName":"","namespaced":false,"kind":"Node","verbs":["create","delete","deletecollection","get","list","patch","proxy","update","watch"],"shortNames":["no"]},{"name":"nodes/proxy","singularName":"","namespaced":false,"kind":"Node","verbs":[]},{"name":"nodes/status","singularName":"","namespaced":false,"kind":"Node","verbs":["get","patch","update"]},{"name":"persistentvolumeclaims","singularName":"","namespaced":true,"kind":"PersistentVolumeClaim","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["pvc"]},{"name":"persistentvolumeclaims/status","singularName":"","namespaced":true,"kind":"PersistentVolumeClaim","verbs":["get","patch","update"]},{"name":"persistentvolumes","singularName":"","namespaced":false,"kind":"PersistentVolume","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["pv"]},{"name":"persistentvolumes/status","singularName":"","namespaced":false,"kind":"PersistentVolume","verbs":["get","patch","update"]},{"name":"pods","singularName":"","namespaced":true,"kind":"Pod","verbs":["create","delete","deletecollection","get","list","patch","proxy","update","watch"],"shortNames":["po"],"categories":["all"]},{"name":"pods/attach","singularName":"","namespaced":true,"kind":"Pod","verbs":[]},{"name":"pods/binding","singularName":"","namespaced":true,"kind":"Binding","verbs":["create"]},{"name":"pods/eviction","singularName":"","namespaced":true,"group":"policy","version":"v1beta1","kind":"Eviction","verbs":["create"]},{"name":"pods/exec","singularName":"","namespaced":true,"kind":"Pod","verbs":[]},{"name":"pods/log","singularName":"","namespaced":true,"kind":"Pod","verbs":["get"]},{"name":"pods/portforward","singularName":"","namespaced":true,"kind":"Pod","verbs":[]},{"name":"pods/proxy","singularName":"","namespaced":true,"kind":"Pod","verbs":[]},{"name":"pods/status","singularName":"","namespaced":true,"kind":"Pod","verbs":["get","patch","update"]},{"name":"podtemplates","singularName":"","namespaced":true,"kind":"PodTemplate","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"replicationcontrollers","singularName":"","namespaced":true,"kind":"ReplicationController","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["rc"],"categories":["all"]},{"name":"replicationcontrollers/scale","singularName":"","namespaced":true,"group":"autoscaling","version":"v1","kind":"Scale","verbs":["get","patch","update"]},{"name":"replicationcontrollers/status","singularName":"","namespaced":true,"kind":"ReplicationController","verbs":["get","patch","update"]},{"name":"resourcequotas","singularName":"","namespaced":true,"kind":"ResourceQuota","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["quota"]},{"name":"resourcequotas/status","singularName":"","namespaced":true,"kind":"ResourceQuota","verbs":["get","patch","update"]},{"name":"secrets","singularName":"","namespaced":true,"kind":"Secret","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"securitycontextconstraints","singularName":"","namespaced":false,"kind":"SecurityContextConstraints","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["scc"]},{"name":"serviceaccounts","singularName":"","namespaced":true,"kind":"ServiceAccount","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["sa"]},{"name":"services","singularName":"","namespaced":true,"kind":"Service","verbs":["create","delete","get","list","patch","proxy","update","watch"],"shortNames":["svc"],"categories":["all"]},{"name":"services/proxy","singularName":"","namespaced":true,"kind":"Service","verbs":[]},{"name":"services/status","singularName":"","namespaced":true,"kind":"Service","verbs":["get","patch","update"]}]}

        '
    http_version:
  recorded_at: Thu, 23 Aug 2018 06:21:27 GMT
- request:
    method: get
    uri: https://host.example.com:8443/api/v1/namespaces
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.4.2p198
      Authorization:
      - Bearer theToken
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Thu, 23 Aug 2018 06:21:27 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"kind":"NamespaceList","apiVersion":"v1","metadata":{"selfLink":"/api/v1/namespaces","resourceVersion":"36309833"},"items":[{"metadata":{"name":"cfme","selfLink":"/api/v1/namespaces/cfme","uid":"5147d409-853d-11e8-ba7e-d094660d31fb","resourceVersion":"21558883","creationTimestamp":"2018-07-11T19:05:03Z","annotations":{"openshift.io/description":"","openshift.io/display-name":"","openshift.io/requester":"admin","openshift.io/sa.scc.mcs":"s0:c16,c15","openshift.io/sa.scc.supplemental-groups":"1000270000/10000","openshift.io/sa.scc.uid-range":"1000270000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"customer-logging","selfLink":"/api/v1/namespaces/customer-logging","uid":"2ce0acfd-5f91-11e8-ba7e-d094660d31fb","resourceVersion":"5289460","creationTimestamp":"2018-05-24T20:29:36Z","annotations":{"openshift.io/description":"","openshift.io/display-name":"","openshift.io/requester":"admin","openshift.io/sa.scc.mcs":"s0:c16,c10","openshift.io/sa.scc.supplemental-groups":"1000260000/10000","openshift.io/sa.scc.uid-range":"1000260000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"default","selfLink":"/api/v1/namespaces/default","uid":"ff7a9498-0d10-11e8-906a-d094660d31fb","resourceVersion":"1686527","creationTimestamp":"2018-02-08T20:45:29Z","annotations":{"openshift.io/node-selector":"","openshift.io/sa.initialized-roles":"true","openshift.io/sa.scc.mcs":"s0:c6,c0","openshift.io/sa.scc.supplemental-groups":"1000030000/10000","openshift.io/sa.scc.uid-range":"1000030000/10000"}},"spec":{"finalizers":["kubernetes","openshift.io/origin"]},"status":{"phase":"Active"}},{"metadata":{"name":"insights","selfLink":"/api/v1/namespaces/insights","uid":"c6e14e3e-9f33-11e8-ba7e-d094660d31fb","resourceVersion":"32769871","creationTimestamp":"2018-08-13T20:02:16Z","annotations":{"openshift.io/description":"Insights","openshift.io/display-name":"Insights","openshift.io/requester":"admin","openshift.io/sa.scc.mcs":"s0:c11,c0","openshift.io/sa.scc.supplemental-groups":"1000110000/10000","openshift.io/sa.scc.uid-range":"1000110000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"jason-test-cd","selfLink":"/api/v1/namespaces/jason-test-cd","uid":"171cfaa3-9ce6-11e8-ba7e-d094660d31fb","resourceVersion":"31636563","creationTimestamp":"2018-08-10T21:41:07Z","annotations":{"openshift.io/description":"","openshift.io/display-name":"jason-test-cd","openshift.io/requester":"admin","openshift.io/sa.scc.mcs":"s0:c18,c2","openshift.io/sa.scc.supplemental-groups":"1000310000/10000","openshift.io/sa.scc.uid-range":"1000310000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"kube-public","selfLink":"/api/v1/namespaces/kube-public","uid":"ffe8aefa-0d10-11e8-906a-d094660d31fb","resourceVersion":"1686528","creationTimestamp":"2018-02-08T20:45:29Z","annotations":{"openshift.io/sa.scc.mcs":"s0:c3,c2","openshift.io/sa.scc.supplemental-groups":"1000010000/10000","openshift.io/sa.scc.uid-range":"1000010000/10000"}},"spec":{"finalizers":["kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"kube-service-catalog","selfLink":"/api/v1/namespaces/kube-service-catalog","uid":"3f03875b-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1689730","creationTimestamp":"2018-05-16T20:46:45Z","annotations":{"openshift.io/description":"","openshift.io/display-name":"","openshift.io/node-selector":"","openshift.io/sa.scc.mcs":"s0:c10,c0","openshift.io/sa.scc.supplemental-groups":"1000090000/10000","openshift.io/sa.scc.uid-range":"1000090000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"kube-system","selfLink":"/api/v1/namespaces/kube-system","uid":"ffe8433d-0d10-11e8-906a-d094660d31fb","resourceVersion":"1689838","creationTimestamp":"2018-02-08T20:45:29Z","annotations":{"openshift.io/sa.scc.mcs":"s0:c1,c0","openshift.io/sa.scc.supplemental-groups":"1000000000/10000","openshift.io/sa.scc.uid-range":"1000000000/10000"}},"spec":{"finalizers":["kubernetes","openshift.io/origin"]},"status":{"phase":"Active"}},{"metadata":{"name":"logging","selfLink":"/api/v1/namespaces/logging","uid":"df27da98-0d11-11e8-906a-d094660d31fb","resourceVersion":"1686530","creationTimestamp":"2018-02-08T20:51:44Z","annotations":{"openshift.io/description":"","openshift.io/display-name":"","openshift.io/node-selector":"","openshift.io/sa.scc.mcs":"s0:c8,c2","openshift.io/sa.scc.supplemental-groups":"1000060000/10000","openshift.io/sa.scc.uid-range":"1000060000/10000","quota.openshift.io/cluster-resource-override-enabled":"false"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"management-infra","selfLink":"/api/v1/namespaces/management-infra","uid":"1fbf2d40-0d11-11e8-906a-d094660d31fb","resourceVersion":"1686531","creationTimestamp":"2018-02-08T20:46:23Z","annotations":{"openshift.io/description":"Management
        Infrastructure","openshift.io/display-name":"","openshift.io/sa.scc.mcs":"s0:c7,c4","openshift.io/sa.scc.supplemental-groups":"1000050000/10000","openshift.io/sa.scc.uid-range":"1000050000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"miq-demo","selfLink":"/api/v1/namespaces/miq-demo","uid":"4066eae3-a16e-11e8-ba7e-d094660d31fb","resourceVersion":"33818507","creationTimestamp":"2018-08-16T16:05:53Z","annotations":{"openshift.io/description":"","openshift.io/display-name":"","openshift.io/requester":"admin","openshift.io/sa.scc.mcs":"s0:c11,c5","openshift.io/sa.scc.supplemental-groups":"1000120000/10000","openshift.io/sa.scc.uid-range":"1000120000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"openshift","selfLink":"/api/v1/namespaces/openshift","uid":"00754321-0d11-11e8-906a-d094660d31fb","resourceVersion":"1686534","creationTimestamp":"2018-02-08T20:45:30Z","annotations":{"openshift.io/sa.initialized-roles":"true","openshift.io/sa.scc.mcs":"s0:c6,c5","openshift.io/sa.scc.supplemental-groups":"1000040000/10000","openshift.io/sa.scc.uid-range":"1000040000/10000"}},"spec":{"finalizers":["kubernetes","openshift.io/origin"]},"status":{"phase":"Active"}},{"metadata":{"name":"openshift-ansible-service-broker","selfLink":"/api/v1/namespaces/openshift-ansible-service-broker","uid":"5c6f75ea-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1689955","creationTimestamp":"2018-05-16T20:47:34Z","annotations":{"openshift.io/description":"","openshift.io/display-name":"","openshift.io/sa.scc.mcs":"s0:c10,c5","openshift.io/sa.scc.supplemental-groups":"1000100000/10000","openshift.io/sa.scc.uid-range":"1000100000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra","uid":"003fe885-0d11-11e8-906a-d094660d31fb","resourceVersion":"1686535","creationTimestamp":"2018-02-08T20:45:30Z","annotations":{"openshift.io/node-selector":"","openshift.io/sa.initialized-roles":"true","openshift.io/sa.scc.mcs":"s0:c5,c0","openshift.io/sa.scc.supplemental-groups":"1000020000/10000","openshift.io/sa.scc.uid-range":"1000020000/10000"}},"spec":{"finalizers":["kubernetes","openshift.io/origin"]},"status":{"phase":"Active"}},{"metadata":{"name":"openshift-management","selfLink":"/api/v1/namespaces/openshift-management","uid":"9c1c04a6-5ea1-11e8-ba7e-d094660d31fb","resourceVersion":"4842423","creationTimestamp":"2018-05-23T15:54:43Z","annotations":{"openshift.io/description":"","openshift.io/display-name":"CloudForms
        Management Engine","openshift.io/sa.scc.mcs":"s0:c16,c5","openshift.io/sa.scc.supplemental-groups":"1000250000/10000","openshift.io/sa.scc.uid-range":"1000250000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"openshift-node","selfLink":"/api/v1/namespaces/openshift-node","uid":"2d6a2a37-5887-11e8-a306-d094660d31fb","resourceVersion":"1686536","creationTimestamp":"2018-05-15T21:30:24Z","annotations":{"openshift.io/sa.scc.mcs":"s0:c8,c7","openshift.io/sa.scc.supplemental-groups":"1000070000/10000","openshift.io/sa.scc.uid-range":"1000070000/10000"}},"spec":{"finalizers":["kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"openshift-template-service-broker","selfLink":"/api/v1/namespaces/openshift-template-service-broker","uid":"68dae6dd-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1690098","creationTimestamp":"2018-05-16T20:47:55Z","annotations":{"openshift.io/description":"","openshift.io/display-name":"","openshift.io/node-selector":"","openshift.io/sa.scc.mcs":"s0:c12,c9","openshift.io/sa.scc.supplemental-groups":"1000150000/10000","openshift.io/sa.scc.uid-range":"1000150000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}},{"metadata":{"name":"openshift-web-console","selfLink":"/api/v1/namespaces/openshift-web-console","uid":"f65f960f-5949-11e8-ba7e-d094660d31fb","resourceVersion":"1689220","creationTimestamp":"2018-05-16T20:44:43Z","annotations":{"openshift.io/description":"","openshift.io/display-name":"","openshift.io/node-selector":"","openshift.io/sa.scc.mcs":"s0:c9,c4","openshift.io/sa.scc.supplemental-groups":"1000080000/10000","openshift.io/sa.scc.uid-range":"1000080000/10000"}},"spec":{"finalizers":["openshift.io/origin","kubernetes"]},"status":{"phase":"Active"}}]}

        '
    http_version:
  recorded_at: Thu, 23 Aug 2018 06:21:28 GMT
- request:
    method: get
    uri: https://host.example.com:8443/api/v1/pods
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.4.2p198
      Authorization:
      - Bearer theToken
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Thu, 23 Aug 2018 06:21:28 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"kind":"PodList","apiVersion":"v1","metadata":{"selfLink":"/api/v1/pods","resourceVersion":"36309833"},"items":[{"metadata":{"name":"cloudforms-0","generateName":"cloudforms-","namespace":"cfme","selfLink":"/api/v1/namespaces/cfme/pods/cloudforms-0","uid":"a1c6b8af-853e-11e8-ba7e-d094660d31fb","resourceVersion":"21563641","creationTimestamp":"2018-07-11T19:14:28Z","labels":{"controller-revision-hash":"cloudforms-778b6ff9cb","name":"cloudforms","statefulset.kubernetes.io/pod-name":"cloudforms-0"},"annotations":{"openshift.io/scc":"anyuid"},"ownerReferences":[{"apiVersion":"apps/v1beta1","kind":"StatefulSet","name":"cloudforms","uid":"a1c471eb-853e-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"cloudforms-server","persistentVolumeClaim":{"claimName":"cloudforms-server-cloudforms-0"}},{"name":"cfme-orchestrator-token-vc7xz","secret":{"secretName":"cfme-orchestrator-token-vc7xz","defaultMode":420}}],"containers":[{"name":"cloudforms","image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-app-ui:latest","ports":[{"containerPort":80,"protocol":"TCP"}],"env":[{"name":"ALLOW_INSECURE_SESSION","value":"true"},{"name":"APPLICATION_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"name":"cloudforms-secrets","key":"admin-password"}}},{"name":"DATABASE_REGION","value":"0"},{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"name":"cloudforms-secrets","key":"database-url"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"name":"cloudforms-secrets","key":"v2-key"}}}],"resources":{"limits":{"memory":"16Gi"},"requests":{"cpu":"1","memory":"6Gi"}},"volumeMounts":[{"name":"cloudforms-server","mountPath":"/persistent"},{"name":"cfme-orchestrator-token-vc7xz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":80},"initialDelaySeconds":200,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"lifecycle":{"preStop":{"exec":{"command":["/opt/rh/cfme-container-scripts/sync-pv-data"]}}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":90,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"cfme-orchestrator","serviceAccount":"cfme-orchestrator","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c15"}},"imagePullSecrets":[{"name":"cfme-orchestrator-dockercfg-744mr"}],"hostname":"cloudforms-0","subdomain":"cloudforms","schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:14:28Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:17:53Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:14:28Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.37","startTime":"2018-07-11T19:14:28Z","containerStatuses":[{"name":"cloudforms","state":{"running":{"startedAt":"2018-07-11T19:14:32Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-app-ui:latest","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-app-ui@sha256:c8c2873d14704be7e1117ae12b368bc63b0417577f23be2477ed063cca123ed7","containerID":"docker://e3f8dbe14b6c885fbf0e1a56367f874026c3da0a94cbe3403f04a6d48b846763"}],"qosClass":"Burstable"}},{"metadata":{"name":"httpd-1-xj9w5","generateName":"httpd-1-","namespace":"cfme","selfLink":"/api/v1/namespaces/cfme/pods/httpd-1-xj9w5","uid":"a8fd7568-853e-11e8-ba7e-d094660d31fb","resourceVersion":"21562971","creationTimestamp":"2018-07-11T19:14:40Z","labels":{"app":"cloudforms","deployment":"httpd-1","deploymentconfig":"httpd","name":"httpd"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"httpd","openshift.io/deployment.name":"httpd-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"anyuid"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"httpd-1","uid":"a27c12e2-853e-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"httpd-config","configMap":{"name":"httpd-configs","defaultMode":420}},{"name":"httpd-auth-config","configMap":{"name":"httpd-auth-configs","defaultMode":420}},{"name":"cfme-httpd-token-pdbbb","secret":{"secretName":"cfme-httpd-token-pdbbb","defaultMode":420}}],"containers":[{"name":"httpd","image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-httpd:latest","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"APPLICATION_DOMAIN"},{"name":"HTTPD_AUTH_TYPE","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-type"}}},{"name":"HTTPD_AUTH_KERBEROS_REALMS","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-kerberos-realms"}}},{"name":"HTTPD_AUTH_OIDC_PROVIDER_METADATA_URL","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-oidc-provider-metadata-url","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_ID","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-oidc-client-id","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_SECRET","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-oidc-client-secret","optional":true}}}],"resources":{"limits":{"memory":"8Gi"},"requests":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"httpd-config","mountPath":"/etc/httpd/conf.d"},{"name":"httpd-auth-config","mountPath":"/etc/httpd/auth-conf.d"},{"name":"cfme-httpd-token-pdbbb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["pidof","httpd"]},"initialDelaySeconds":15,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":80},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"lifecycle":{"postStart":{"exec":{"command":["/usr/bin/save-container-environment"]}}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"cfme-httpd","serviceAccount":"cfme-httpd","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c15"}},"imagePullSecrets":[{"name":"cfme-httpd-dockercfg-94pdq"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:14:40Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:14:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:14:40Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.42","startTime":"2018-07-11T19:14:40Z","containerStatuses":[{"name":"httpd","state":{"running":{"startedAt":"2018-07-11T19:14:46Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-httpd:latest","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-httpd@sha256:8064ba05f9383626268f1bbf3d79a910170afd9c13c160335f02b3451c509d05","containerID":"docker://3331ee76639659494cad4cae825c8032c08b03b8cd54701a9e2b851c8f30180a"}],"qosClass":"Burstable"}},{"metadata":{"name":"memcached-1-jvwr6","generateName":"memcached-1-","namespace":"cfme","selfLink":"/api/v1/namespaces/cfme/pods/memcached-1-jvwr6","uid":"aab575e1-853e-11e8-ba7e-d094660d31fb","resourceVersion":"21562977","creationTimestamp":"2018-07-11T19:14:43Z","labels":{"app":"cloudforms","deployment":"memcached-1","deploymentconfig":"memcached","name":"memcached"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"memcached","openshift.io/deployment.name":"memcached-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"memcached-1","uid":"a24643ca-853e-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"default-token-r7z6f","secret":{"secretName":"default-token-r7z6f","defaultMode":420}}],"containers":[{"name":"memcached","image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-memcached:latest","ports":[{"containerPort":11211,"protocol":"TCP"}],"env":[{"name":"MEMCACHED_MAX_MEMORY","value":"64"},{"name":"MEMCACHED_MAX_CONNECTIONS","value":"1024"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","value":"1m"}],"resources":{"limits":{"memory":"256Mi"},"requests":{"cpu":"200m","memory":"64Mi"}},"volumeMounts":[{"name":"default-token-r7z6f","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"tcpSocket":{"port":11211},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":11211},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000270000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c15"},"fsGroup":1000270000},"imagePullSecrets":[{"name":"default-dockercfg-wfv76"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:14:43Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:14:57Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:14:43Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.43","startTime":"2018-07-11T19:14:43Z","containerStatuses":[{"name":"memcached","state":{"running":{"startedAt":"2018-07-11T19:14:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-memcached:latest","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-memcached@sha256:9007e9b55974f217e39b983410f45c08c2948efa0ed37fadb438df031361c725","containerID":"docker://14417fdab2766a6911ea0260dae554442c617b3bcd95f3252fbb9598e205ce65"}],"qosClass":"Burstable"}},{"metadata":{"name":"postgresql-1-6h6kz","generateName":"postgresql-1-","namespace":"cfme","selfLink":"/api/v1/namespaces/cfme/pods/postgresql-1-6h6kz","uid":"a8fd70c4-853e-11e8-ba7e-d094660d31fb","resourceVersion":"21563020","creationTimestamp":"2018-07-11T19:14:40Z","labels":{"app":"cloudforms","deployment":"postgresql-1","deploymentconfig":"postgresql","name":"postgresql"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"postgresql","openshift.io/deployment.name":"postgresql-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"postgresql-1","uid":"a25ef628-853e-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"cfme-pgdb-volume","persistentVolumeClaim":{"claimName":"cloudforms-postgresql"}},{"name":"cfme-pg-configs","configMap":{"name":"postgresql-configs","defaultMode":420}},{"name":"default-token-r7z6f","secret":{"secretName":"default-token-r7z6f","defaultMode":420}}],"containers":[{"name":"postgresql","image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-postgresql:latest","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","value":"root"},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"cloudforms-secrets","key":"pg-password"}}},{"name":"POSTGRESQL_DATABASE","value":"vmdb_production"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"1000"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"1GB"}],"resources":{"limits":{"memory":"8Gi"},"requests":{"cpu":"500m","memory":"4Gi"}},"volumeMounts":[{"name":"cfme-pgdb-volume","mountPath":"/var/lib/pgsql/data"},{"name":"cfme-pg-configs","mountPath":"/opt/app-root/src/postgresql-cfg/"},{"name":"default-token-r7z6f","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":60,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000270000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c15"},"fsGroup":1000270000},"imagePullSecrets":[{"name":"default-dockercfg-wfv76"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:14:40Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:15:03Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-07-11T19:14:40Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.41","startTime":"2018-07-11T19:14:40Z","containerStatuses":[{"name":"postgresql","state":{"running":{"startedAt":"2018-07-11T19:14:48Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-postgresql:latest","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-postgresql@sha256:6f6e2d6837dbdb3aa8116f87a3076c747a3cbc48e02f37953f16370bb07ebb16","containerID":"docker://6de07f7c735de74c34e9724602ab5f2caa47b38f475bdc1dd2386534c600dd5f"}],"qosClass":"Burstable"}},{"metadata":{"name":"redis-1-94zxb","generateName":"redis-1-","namespace":"customer-logging","selfLink":"/api/v1/namespaces/customer-logging/pods/redis-1-94zxb","uid":"a8aea5f4-5f91-11e8-ba7e-d094660d31fb","resourceVersion":"5290639","creationTimestamp":"2018-05-24T20:33:03Z","labels":{"app":"elastic-log-ripper","deployment":"redis-1","deploymentconfig":"redis","name":"redis"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"redis","openshift.io/deployment.name":"redis-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"redis-1","uid":"9e2e46b3-5f91-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"default-token-n2wzs","secret":{"secretName":"default-token-n2wzs","defaultMode":420}}],"containers":[{"name":"redis","image":"manageiq/redis:latest","ports":[{"containerPort":6379,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"default-token-n2wzs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000260000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c10"},"fsGroup":1000260000},"imagePullSecrets":[{"name":"default-dockercfg-ck286"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T20:33:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T20:33:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T20:33:03Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.102","startTime":"2018-05-24T20:33:04Z","containerStatuses":[{"name":"redis","state":{"running":{"startedAt":"2018-05-24T20:33:39Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/manageiq/redis:latest","imageID":"docker-pullable://docker.io/manageiq/redis@sha256:38b5bec89f06555687ef616aeeabdea890fbf29b8d3eda677730fe77f05c094a","containerID":"docker://d095a91265e6745a25a541ef8c54c21239e4812fbd597320f20f3b6bf906ff7e"}],"qosClass":"BestEffort"}},{"metadata":{"name":"sidekiq-ui-1-d7w8k","generateName":"sidekiq-ui-1-","namespace":"customer-logging","selfLink":"/api/v1/namespaces/customer-logging/pods/sidekiq-ui-1-d7w8k","uid":"a4b4c23e-5f91-11e8-ba7e-d094660d31fb","resourceVersion":"5290612","creationTimestamp":"2018-05-24T20:32:57Z","labels":{"app":"elastic-log-ripper","deployment":"sidekiq-ui-1","deploymentconfig":"sidekiq-ui","name":"sidekiq-ui"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"sidekiq-ui","openshift.io/deployment.name":"sidekiq-ui-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"sidekiq-ui-1","uid":"9e29e97b-5f91-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"default-token-n2wzs","secret":{"secretName":"default-token-n2wzs","defaultMode":420}}],"containers":[{"name":"sidekiq-ui","image":"bdunne/elastic_log_ripper:latest","command":["bin/sidekiq-ui"],"ports":[{"containerPort":9292,"protocol":"TCP"}],"env":[{"name":"REDIS_URL","value":"redis://redis:6379/1"}],"resources":{},"volumeMounts":[{"name":"default-token-n2wzs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000260000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c10"},"fsGroup":1000260000},"imagePullSecrets":[{"name":"default-dockercfg-ck286"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T20:33:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T20:33:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T20:32:57Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.101","startTime":"2018-05-24T20:33:04Z","containerStatuses":[{"name":"sidekiq-ui","state":{"running":{"startedAt":"2018-05-24T20:33:34Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/bdunne/elastic_log_ripper:latest","imageID":"docker-pullable://docker.io/bdunne/elastic_log_ripper@sha256:04230dd4680acdbbc6680cf1b2ca254190744eb515fa0225c6ad9c411efc962a","containerID":"docker://9d5b5e9f32b5b34c67daafad867c7f587756c359b70eb07ebaa8164c63660615"}],"qosClass":"BestEffort"}},{"metadata":{"name":"sidekiq-worker-3-bjc2n","generateName":"sidekiq-worker-3-","namespace":"customer-logging","selfLink":"/api/v1/namespaces/customer-logging/pods/sidekiq-worker-3-bjc2n","uid":"66c372d4-5f96-11e8-ba7e-d094660d31fb","resourceVersion":"5299118","creationTimestamp":"2018-05-24T21:07:00Z","labels":{"app":"elastic-log-ripper","deployment":"sidekiq-worker-3","deploymentconfig":"sidekiq-worker","name":"sidekiq-worker"},"annotations":{"openshift.io/deployment-config.latest-version":"3","openshift.io/deployment-config.name":"sidekiq-worker","openshift.io/deployment.name":"sidekiq-worker-3","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"sidekiq-worker-3","uid":"4cf63a17-5f96-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"app-data","persistentVolumeClaim":{"claimName":"app-data"}},{"name":"default-token-n2wzs","secret":{"secretName":"default-token-n2wzs","defaultMode":420}}],"containers":[{"name":"sidekiq-worker","image":"bdunne/elastic_log_ripper:latest","command":["bin/sidekiq-worker"],"env":[{"name":"APP_ENV","value":"production"},{"name":"ELASTICSEARCH_URL","value":"http://customer-elasticsearch.cloudforms.lab.eng.rdu2.redhat.com:9200/"},{"name":"REDIS_URL","value":"redis://redis:6379/1"}],"resources":{},"volumeMounts":[{"name":"app-data","mountPath":"/opt/elastic_log_ripper/data"},{"name":"default-token-n2wzs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["pgrep","sidekiq-worker"]},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["pgrep","sidekiq-worker"]},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000260000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c10"},"fsGroup":1000260000},"imagePullSecrets":[{"name":"default-dockercfg-ck286"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T21:07:00Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T21:07:30Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T21:07:00Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.106","startTime":"2018-05-24T21:07:00Z","containerStatuses":[{"name":"sidekiq-worker","state":{"running":{"startedAt":"2018-05-24T21:07:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/bdunne/elastic_log_ripper:latest","imageID":"docker-pullable://docker.io/bdunne/elastic_log_ripper@sha256:fa0470ebcd46589f6d7a8746f3669012c015364f7961a12c10135cafef3530ba","containerID":"docker://22c7c3f4680bd46b36e75f30f59a2009da1801d20f335179761fbc194279a625"}],"qosClass":"BestEffort"}},{"metadata":{"name":"sinatra-1-nvlc6","generateName":"sinatra-1-","namespace":"customer-logging","selfLink":"/api/v1/namespaces/customer-logging/pods/sinatra-1-nvlc6","uid":"a8b3a675-5f91-11e8-ba7e-d094660d31fb","resourceVersion":"5290683","creationTimestamp":"2018-05-24T20:33:04Z","labels":{"app":"elastic-log-ripper","deployment":"sinatra-1","deploymentconfig":"sinatra","name":"sinatra"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"sinatra","openshift.io/deployment.name":"sinatra-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"sinatra-1","uid":"9e27473d-5f91-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"app-data","persistentVolumeClaim":{"claimName":"app-data"}},{"name":"default-token-n2wzs","secret":{"secretName":"default-token-n2wzs","defaultMode":420}}],"containers":[{"name":"sinatra","image":"bdunne/elastic_log_ripper:latest","command":["bin/sinatra"],"ports":[{"containerPort":4567,"protocol":"TCP"}],"env":[{"name":"APP_ENV","value":"production"},{"name":"ELASTICSEARCH_URL","value":"http://customer-elasticsearch.cloudforms.lab.eng.rdu2.redhat.com:9200/"},{"name":"REDIS_URL","value":"redis://redis:6379/1"}],"resources":{},"volumeMounts":[{"name":"app-data","mountPath":"/opt/elastic_log_ripper/data"},{"name":"default-token-n2wzs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"httpGet":{"path":"/ping","port":4567,"scheme":"HTTP"},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/ping","port":4567,"scheme":"HTTP"},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000260000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c10"},"fsGroup":1000260000},"imagePullSecrets":[{"name":"default-dockercfg-ck286"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T20:33:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T20:33:55Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-24T20:33:04Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.100","startTime":"2018-05-24T20:33:04Z","containerStatuses":[{"name":"sinatra","state":{"running":{"startedAt":"2018-05-24T20:33:33Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/bdunne/elastic_log_ripper:latest","imageID":"docker-pullable://docker.io/bdunne/elastic_log_ripper@sha256:04230dd4680acdbbc6680cf1b2ca254190744eb515fa0225c6ad9c411efc962a","containerID":"docker://0a0c98c75fbce15151891f0cf6c131485acaea192db82d7b32c8ebf50023c415"}],"qosClass":"BestEffort"}},{"metadata":{"name":"docker-registry-3-jlmvd","generateName":"docker-registry-3-","namespace":"default","selfLink":"/api/v1/namespaces/default/pods/docker-registry-3-jlmvd","uid":"fd185102-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1691424","creationTimestamp":"2018-05-16T20:52:04Z","labels":{"deployment":"docker-registry-3","deploymentconfig":"docker-registry","docker-registry":"default"},"annotations":{"openshift.io/deployment-config.latest-version":"3","openshift.io/deployment-config.name":"docker-registry","openshift.io/deployment.name":"docker-registry-3","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"docker-registry-3","uid":"3aee1b94-594a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"registry-storage","emptyDir":{}},{"name":"registry-token-c8wk7","secret":{"secretName":"registry-token-c8wk7","defaultMode":420}}],"containers":[{"name":"registry","image":"openshift3/ose-docker-registry:v3.9.25","ports":[{"containerPort":5000,"protocol":"TCP"}],"env":[{"name":"REGISTRY_HTTP_ADDR","value":":5000"},{"name":"REGISTRY_HTTP_NET","value":"tcp"},{"name":"REGISTRY_HTTP_SECRET","value":"uZMh6WrOjX5MQOrM4ouiRGoUppHb7crdDLbGwpff8Ck="},{"name":"REGISTRY_MIDDLEWARE_REPOSITORY_OPENSHIFT_ENFORCEQUOTA","value":"false"}],"resources":{"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"name":"registry-storage","mountPath":"/registry"},{"name":"registry-token-c8wk7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"httpGet":{"path":"/healthz","port":5000,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":5,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/healthz","port":5000,"scheme":"HTTP"},"timeoutSeconds":5,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"privileged":false,"runAsUser":1000030000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"registry","serviceAccount":"registry","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c6,c0"},"fsGroup":1000030000},"imagePullSecrets":[{"name":"registry-dockercfg-135c0"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:12Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:04Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.11","startTime":"2018-05-16T20:52:04Z","containerStatuses":[{"name":"registry","state":{"running":{"startedAt":"2018-05-16T20:52:08Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/openshift3/ose-docker-registry:v3.9.25","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/openshift3/ose-docker-registry@sha256:486c7ea0be1c3396b69b959407eb614c41007af1f41d0dfca98721d4058ed106","containerID":"docker://6b22717a4366d548c9cfa91a8ebb6c2c3c8b9b5696d90f75381482d525982839"}],"qosClass":"Burstable"}},{"metadata":{"name":"router-4-qxn7r","generateName":"router-4-","namespace":"default","selfLink":"/api/v1/namespaces/default/pods/router-4-qxn7r","uid":"ebb84b74-5ea3-11e8-ba7e-d094660d31fb","resourceVersion":"4846110","creationTimestamp":"2018-05-23T16:11:16Z","labels":{"deployment":"router-4","deploymentconfig":"router","router":"router"},"annotations":{"openshift.io/deployment-config.latest-version":"4","openshift.io/deployment-config.name":"router","openshift.io/deployment.name":"router-4","openshift.io/scc":"hostnetwork"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"router-4","uid":"106d27b7-594a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"server-certificate","secret":{"secretName":"router-certs","defaultMode":420}},{"name":"router-token-0twp6","secret":{"secretName":"router-token-0twp6","defaultMode":420}}],"containers":[{"name":"router","image":"openshift3/ose-haproxy-router:v3.9.25","ports":[{"hostPort":80,"containerPort":80,"protocol":"TCP"},{"hostPort":443,"containerPort":443,"protocol":"TCP"},{"name":"stats","hostPort":1936,"containerPort":1936,"protocol":"TCP"}],"env":[{"name":"DEFAULT_CERTIFICATE_DIR","value":"/etc/pki/tls/private"},{"name":"DEFAULT_CERTIFICATE_PATH","value":"/etc/pki/tls/private/tls.crt"},{"name":"ROUTER_CIPHERS"},{"name":"ROUTER_EXTERNAL_HOST_HOSTNAME"},{"name":"ROUTER_EXTERNAL_HOST_HTTPS_VSERVER"},{"name":"ROUTER_EXTERNAL_HOST_HTTP_VSERVER"},{"name":"ROUTER_EXTERNAL_HOST_INSECURE","value":"false"},{"name":"ROUTER_EXTERNAL_HOST_INTERNAL_ADDRESS"},{"name":"ROUTER_EXTERNAL_HOST_PARTITION_PATH"},{"name":"ROUTER_EXTERNAL_HOST_PASSWORD"},{"name":"ROUTER_EXTERNAL_HOST_PRIVKEY","value":"/etc/secret-volume/router.pem"},{"name":"ROUTER_EXTERNAL_HOST_USERNAME"},{"name":"ROUTER_EXTERNAL_HOST_VXLAN_GW_CIDR"},{"name":"ROUTER_LISTEN_ADDR","value":"0.0.0.0:1936"},{"name":"ROUTER_METRICS_TYPE","value":"haproxy"},{"name":"ROUTER_SERVICE_HTTPS_PORT","value":"443"},{"name":"ROUTER_SERVICE_HTTP_PORT","value":"80"},{"name":"ROUTER_SERVICE_NAME","value":"router"},{"name":"ROUTER_SERVICE_NAMESPACE","value":"default"},{"name":"ROUTER_SUBDOMAIN"},{"name":"STATS_PASSWORD","value":"4WokH57Hg0"},{"name":"STATS_PORT","value":"1936"},{"name":"STATS_USERNAME","value":"admin"}],"resources":{"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"name":"server-certificate","readOnly":true,"mountPath":"/etc/pki/tls/private"},{"name":"router-token-0twp6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"httpGet":{"path":"/healthz","port":1936,"host":"localhost","scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/healthz","port":1936,"host":"localhost","scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000030000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"region":"infra"},"serviceAccountName":"router","serviceAccount":"router","nodeName":"host.example.com","hostNetwork":true,"securityContext":{"seLinuxOptions":{"level":"s0:c6,c0"},"supplementalGroups":[1000030000],"fsGroup":1000030000},"imagePullSecrets":[{"name":"router-dockercfg-h3pd7"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T16:11:17Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T16:11:37Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T16:11:17Z"}],"hostIP":"10.8.96.54","podIP":"10.8.96.54","startTime":"2018-05-23T16:11:17Z","containerStatuses":[{"name":"router","state":{"running":{"startedAt":"2018-05-23T16:11:18Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/openshift3/ose-haproxy-router:v3.9.25","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/openshift3/ose-haproxy-router@sha256:5bd44db8a4138c9a3ac2b3462a54a7bbef5bb6f16eb57f124d2c2525b966e228","containerID":"docker://74697275d72d1232eb5cbf96ec4ae257ef14fd528ac3c206327f05098bd52a19"}],"qosClass":"Burstable"}},{"metadata":{"name":"router-5-deploy","namespace":"default","selfLink":"/api/v1/namespaces/default/pods/router-5-deploy","uid":"8172a609-5ea2-11e8-ba7e-d094660d31fb","resourceVersion":"4845998","creationTimestamp":"2018-05-23T16:01:08Z","labels":{"openshift.io/deployer-pod-for.name":"router-5"},"annotations":{"openshift.io/deployment-config.name":"router","openshift.io/deployment.name":"router-5","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"router-5","uid":"8170c2f4-5ea2-11e8-ba7e-d094660d31fb"}]},"spec":{"volumes":[{"name":"deployer-token-4dnqx","secret":{"secretName":"deployer-token-4dnqx","defaultMode":420}}],"containers":[{"name":"deployment","image":"openshift3/ose-deployer:v3.9.25","env":[{"name":"KUBERNETES_MASTER","value":"https://host.example.com:8443"},{"name":"OPENSHIFT_MASTER","value":"https://host.example.com:8443"},{"name":"BEARER_TOKEN_FILE","value":"/var/run/secrets/kubernetes.io/serviceaccount/token"},{"name":"OPENSHIFT_CA_DATA","value":"-----BEGIN
        CERTIFICATE-----\nMIIC6jCCAdKgAwIBAgIBATANBgkqhkiG9w0BAQsFADAmMSQwIgYDVQQDDBtvcGVu\nc2hpZnQtc2lnbmVyQDE1MTgxMjI2NjUwHhcNMTgwMjA4MjA0NDI1WhcNMjMwMjA3\nMjA0NDI2WjAmMSQwIgYDVQQDDBtvcGVuc2hpZnQtc2lnbmVyQDE1MTgxMjI2NjUw\nggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDqjjGiVYbN6ByuO+clKRPW\n7uawULZ7ooNNrzyJmV7SMcEYoslnXkpHstocgpa2uZlaJitTNu+yGGcai02Ugam8\nuJBhhniNwSJfnvMCVPbeBE/jVrlfRTXEBCh0H47nRAh8slwWPlwntJoHXoQZWSP3\nqEDip6qXY++0/NCoSLWX8JgCeEaFTBptnRbmPhj0sBMzW/vse5O6EduH4ciPLegk\nnNN0NNBvR8sLHJuFlphibQkH/X0+awsJf/uBl59cLwWfqWjmjx75rAzj9g7laLGV\ngdLq9tffXVnOl4lMJo1iaHgj6KNwbKNhJkCYSYhljaomNGwHGf+creCBdvJqODbT\nAgMBAAGjIzAhMA4GA1UdDwEB/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MA0GCSqG\nSIb3DQEBCwUAA4IBAQCyY2KXaWwwSVnqw+/bHaJsRso28A157Chvy33dydJTqmoA\nFe5E+WtVZTpcYVqLrsttxNAX79srIUn1p9+PTy4YBIqjKeWfNPZf6yYlyrecwB8s\nFTVnVkC4knduappXQmrdZ/97gAK4p13Yfu8fIXNzCW/aJvwYgzKU38jGSQN7oU4e\nqqfAQp3yr19QRRMykKS/dDB9rUNghvAhvo3Q35GvatKxrwK7XYG5kMxZYjzJEy/2\n+yT51y7PUo5IxTAD3DXET4Xm7tqD2srnVQVv1zcFKxjjs2fbvnyv5Kyf957Cu5zN\nusVBeZo+MoUFEsWVStm6Lw1JRqrncG/nWUHTIvpr\n-----END
        CERTIFICATE-----\n"},{"name":"OPENSHIFT_DEPLOYMENT_NAME","value":"router-5"},{"name":"OPENSHIFT_DEPLOYMENT_NAMESPACE","value":"default"}],"resources":{},"volumeMounts":[{"name":"deployer-token-4dnqx","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000030000}}],"restartPolicy":"Never","terminationGracePeriodSeconds":10,"activeDeadlineSeconds":21600,"dnsPolicy":"ClusterFirst","nodeSelector":{"region":"infra"},"serviceAccountName":"deployer","serviceAccount":"deployer","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c6,c0"},"fsGroup":1000030000},"imagePullSecrets":[{"name":"deployer-dockercfg-38p6h"}],"schedulerName":"default-scheduler"},"status":{"phase":"Failed","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T16:01:08Z"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-23T16:11:16Z","reason":"ContainersNotReady","message":"containers
        with unready status: [deployment]"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T16:01:08Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.39","startTime":"2018-05-23T16:01:08Z","containerStatuses":[{"name":"deployment","state":{"terminated":{"exitCode":1,"reason":"Error","startedAt":"2018-05-23T16:01:12Z","finishedAt":"2018-05-23T16:11:16Z","containerID":"docker://dfee0534bbcae4454ae51f7ae64468575372bf7878d33972dc08667dac913139"}},"lastState":{},"ready":false,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/openshift3/ose-deployer:v3.9.25","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/openshift3/ose-deployer@sha256:7323516c4105fc6aeb7c2743a44f08c2214b6a18cecaa9940bb80e1e23b9c64a","containerID":"docker://dfee0534bbcae4454ae51f7ae64468575372bf7878d33972dc08667dac913139"}],"qosClass":"BestEffort"}},{"metadata":{"name":"httpd-1-5vwth","generateName":"httpd-1-","namespace":"insights","selfLink":"/api/v1/namespaces/insights/pods/httpd-1-5vwth","uid":"3d952eb4-9f3a-11e8-ba7e-d094660d31fb","resourceVersion":"32781859","creationTimestamp":"2018-08-13T20:48:32Z","labels":{"app":"manageiq","deployment":"httpd-1","deploymentconfig":"httpd","name":"httpd"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"httpd","openshift.io/deployment.name":"httpd-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"anyuid"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"httpd-1","uid":"335965c4-9f3a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"httpd-config","configMap":{"name":"httpd-configs","defaultMode":420}},{"name":"httpd-auth-config","configMap":{"name":"httpd-auth-configs","defaultMode":420}},{"name":"miq-httpd-token-rjxsg","secret":{"secretName":"miq-httpd-token-rjxsg","defaultMode":420}}],"containers":[{"name":"httpd","image":"docker.io/manageiq/httpd:latest","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"APPLICATION_DOMAIN"},{"name":"HTTPD_AUTH_TYPE","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-type"}}},{"name":"HTTPD_AUTH_KERBEROS_REALMS","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-kerberos-realms"}}},{"name":"HTTPD_AUTH_OIDC_PROVIDER_METADATA_URL","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-oidc-provider-metadata-url","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_ID","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-oidc-client-id","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_SECRET","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-oidc-client-secret","optional":true}}}],"resources":{},"volumeMounts":[{"name":"httpd-config","mountPath":"/etc/httpd/conf.d"},{"name":"httpd-auth-config","mountPath":"/etc/httpd/auth-conf.d"},{"name":"miq-httpd-token-rjxsg","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["pidof","httpd"]},"initialDelaySeconds":15,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":80},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"lifecycle":{"postStart":{"exec":{"command":["/usr/bin/save-container-environment"]}}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"miq-httpd","serviceAccount":"miq-httpd","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c0"}},"imagePullSecrets":[{"name":"miq-httpd-dockercfg-l7mdj"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:48:32Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:48:48Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:48:32Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.83","startTime":"2018-08-13T20:48:32Z","containerStatuses":[{"name":"httpd","state":{"running":{"startedAt":"2018-08-13T20:48:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/manageiq/httpd:latest","imageID":"docker-pullable://docker.io/manageiq/httpd@sha256:2185aac86a9f127316497a904fe317186fb8ab4676d45ec137974aa277aa3b73","containerID":"docker://6386b00587a410108ac92e08e4d64d4d2b28a0b2050f7f398283427c1e26fd24"}],"qosClass":"BestEffort"}},{"metadata":{"name":"manageiq-0","generateName":"manageiq-","namespace":"insights","selfLink":"/api/v1/namespaces/insights/pods/manageiq-0","uid":"331830bc-9f3a-11e8-ba7e-d094660d31fb","resourceVersion":"32782622","creationTimestamp":"2018-08-13T20:48:14Z","labels":{"controller-revision-hash":"manageiq-675d87f7c","name":"manageiq","statefulset.kubernetes.io/pod-name":"manageiq-0"},"annotations":{"openshift.io/scc":"anyuid"},"ownerReferences":[{"apiVersion":"apps/v1beta1","kind":"StatefulSet","name":"manageiq","uid":"331593ab-9f3a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"manageiq-server","persistentVolumeClaim":{"claimName":"manageiq-server-manageiq-0"}},{"name":"miq-orchestrator-token-qlg96","secret":{"secretName":"miq-orchestrator-token-qlg96","defaultMode":420}}],"containers":[{"name":"manageiq","image":"docker.io/carbonin/manageiq-pods:frontend-latest-hammer","ports":[{"containerPort":80,"protocol":"TCP"}],"env":[{"name":"ALLOW_INSECURE_SESSION","value":"true"},{"name":"APPLICATION_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"admin-password"}}},{"name":"DATABASE_REGION","value":"0"},{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"database-url"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"v2-key"}}}],"resources":{},"volumeMounts":[{"name":"manageiq-server","mountPath":"/persistent"},{"name":"miq-orchestrator-token-qlg96","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":80},"initialDelaySeconds":200,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"lifecycle":{"preStop":{"exec":{"command":["/opt/manageiq/container-scripts/sync-pv-data"]}}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":90,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"miq-orchestrator","serviceAccount":"miq-orchestrator","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c0"}},"imagePullSecrets":[{"name":"miq-orchestrator-dockercfg-9rvgb"}],"hostname":"manageiq-0","subdomain":"manageiq","schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:48:14Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:51:52Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:48:14Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.77","startTime":"2018-08-13T20:48:14Z","containerStatuses":[{"name":"manageiq","state":{"running":{"startedAt":"2018-08-13T20:48:18Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/carbonin/manageiq-pods:frontend-latest-hammer","imageID":"docker-pullable://docker.io/carbonin/manageiq-pods@sha256:78edb45e68d1c6afb5146e2a1809222ff341d4036b4ee8674b8b3e75fc235a10","containerID":"docker://51bbd66eadbdc713dddb6900f55410395771bda0c64b2a3cf398a4bd8f71d97b"}],"qosClass":"BestEffort"}},{"metadata":{"name":"memcached-1-fp4jb","generateName":"memcached-1-","namespace":"insights","selfLink":"/api/v1/namespaces/insights/pods/memcached-1-fp4jb","uid":"3dacd49e-9f3a-11e8-ba7e-d094660d31fb","resourceVersion":"32781876","creationTimestamp":"2018-08-13T20:48:32Z","labels":{"app":"manageiq","deployment":"memcached-1","deploymentconfig":"memcached","name":"memcached"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"memcached","openshift.io/deployment.name":"memcached-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"memcached-1","uid":"33332b2b-9f3a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"default-token-qkvt9","secret":{"secretName":"default-token-qkvt9","defaultMode":420}}],"containers":[{"name":"memcached","image":"docker.io/manageiq/memcached:latest","ports":[{"containerPort":11211,"protocol":"TCP"}],"env":[{"name":"MEMCACHED_MAX_MEMORY","value":"64"},{"name":"MEMCACHED_MAX_CONNECTIONS","value":"1024"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","value":"1m"}],"resources":{},"volumeMounts":[{"name":"default-token-qkvt9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"tcpSocket":{"port":11211},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":11211},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000110000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c0"},"fsGroup":1000110000},"imagePullSecrets":[{"name":"default-dockercfg-zxr27"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:48:32Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:48:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:48:32Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.82","startTime":"2018-08-13T20:48:32Z","containerStatuses":[{"name":"memcached","state":{"running":{"startedAt":"2018-08-13T20:48:41Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/manageiq/memcached:latest","imageID":"docker-pullable://docker.io/manageiq/memcached@sha256:d7699ee38e4ee0d3daaa17a9beae28373db67dcbdc2ba4c5c495bd862616c535","containerID":"docker://5c3b1d919c4a58480a2ac46f798d60032b0ce7b0007ae9710467e23e8fd4bd2d"}],"qosClass":"BestEffort"}},{"metadata":{"name":"postgresql-1-qkgkf","generateName":"postgresql-1-","namespace":"insights","selfLink":"/api/v1/namespaces/insights/pods/postgresql-1-qkgkf","uid":"3d952f58-9f3a-11e8-ba7e-d094660d31fb","resourceVersion":"32781916","creationTimestamp":"2018-08-13T20:48:32Z","labels":{"app":"manageiq","deployment":"postgresql-1","deploymentconfig":"postgresql","name":"postgresql"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"postgresql","openshift.io/deployment.name":"postgresql-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"postgresql-1","uid":"3342dcf7-9f3a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"miq-pgdb-volume","persistentVolumeClaim":{"claimName":"manageiq-postgresql"}},{"name":"miq-pg-configs","configMap":{"name":"postgresql-configs","defaultMode":420}},{"name":"default-token-qkvt9","secret":{"secretName":"default-token-qkvt9","defaultMode":420}}],"containers":[{"name":"postgresql","image":"docker.io/manageiq/postgresql:latest","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","value":"root"},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"pg-password"}}},{"name":"POSTGRESQL_DATABASE","value":"vmdb_production"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"1000"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"1GB"}],"resources":{},"volumeMounts":[{"name":"miq-pgdb-volume","mountPath":"/var/lib/pgsql/data"},{"name":"miq-pg-configs","mountPath":"/opt/app-root/src/postgresql-cfg/"},{"name":"default-token-qkvt9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":60,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000110000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c0"},"fsGroup":1000110000},"imagePullSecrets":[{"name":"default-dockercfg-zxr27"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:48:32Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:49:02Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:48:32Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.81","startTime":"2018-08-13T20:48:32Z","containerStatuses":[{"name":"postgresql","state":{"running":{"startedAt":"2018-08-13T20:48:42Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/manageiq/postgresql:latest","imageID":"docker-pullable://docker.io/manageiq/postgresql@sha256:5443d018fb34a15169b1f520a157f9a5d460446b40b16f602ed6a1871a366aa5","containerID":"docker://284e9284f647f25ae721c60c09658a303cc4eb5bf5d7006663479ac3a6dab153"}],"qosClass":"BestEffort"}},{"metadata":{"name":"service-catalog-api-5-mrdkg","generateName":"service-catalog-api-5-","namespace":"insights","selfLink":"/api/v1/namespaces/insights/pods/service-catalog-api-5-mrdkg","uid":"4b56c9c7-a63f-11e8-ba7e-d094660d31fb","resourceVersion":"36140803","creationTimestamp":"2018-08-22T19:12:21Z","labels":{"deployment":"service-catalog-api-5","deploymentconfig":"service-catalog-api","name":"service-catalog-api"},"annotations":{"openshift.io/deployment-config.latest-version":"5","openshift.io/deployment-config.name":"service-catalog-api","openshift.io/deployment.name":"service-catalog-api-5","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"service-catalog-api-5","uid":"47ca0dad-a63f-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"default-token-qkvt9","secret":{"secretName":"default-token-qkvt9","defaultMode":420}}],"containers":[{"name":"service-catalog-api","image":"docker.io/fryguy9/insights-api-service_catalog:latest","ports":[{"containerPort":3000,"protocol":"TCP"}],"env":[{"name":"DATABASE_USER","value":"root"},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"pg-password"}}},{"name":"DATABASE_NAME","value":"api_demo_production"},{"name":"DATABASE_HOST","value":"postgresql"},{"name":"DATABASE_PORT","value":"5432"},{"name":"MANAGEIQ_USER","value":"admin"},{"name":"MANAGEIQ_HOST","value":"manageiq"},{"name":"MANAGEIQ_PORT","value":"80"},{"name":"MANAGEIQ_PASSWORD","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"admin-password"}}}],"resources":{},"volumeMounts":[{"name":"default-token-qkvt9","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"tcpSocket":{"port":3000},"initialDelaySeconds":60,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000110000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c0"},"fsGroup":1000110000},"imagePullSecrets":[{"name":"default-dockercfg-zxr27"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-22T19:12:21Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-22T19:13:30Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-22T19:12:21Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.161","startTime":"2018-08-22T19:12:21Z","containerStatuses":[{"name":"service-catalog-api","state":{"running":{"startedAt":"2018-08-22T19:12:27Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/fryguy9/insights-api-service_catalog:latest","imageID":"docker-pullable://docker.io/fryguy9/insights-api-service_catalog@sha256:dcf106b4e88ae6334364add43e0ed22423fe57e8f2d94ec0558f1550a261adf9","containerID":"docker://543a1f846415294d6732c4e1a2ca9b6bdc40bb63c4c28b67e1e8e968bd869f4f"}],"qosClass":"BestEffort"}},{"metadata":{"name":"service-catalog-ui-4-w9k8n","generateName":"service-catalog-ui-4-","namespace":"insights","selfLink":"/api/v1/namespaces/insights/pods/service-catalog-ui-4-w9k8n","uid":"b8cc545f-a644-11e8-ba7e-d094660d31fb","resourceVersion":"36151130","creationTimestamp":"2018-08-22T19:51:12Z","labels":{"deployment":"service-catalog-ui-4","deploymentconfig":"service-catalog-ui","name":"service-catalog-ui"},"annotations":{"openshift.io/deployment-config.latest-version":"4","openshift.io/deployment-config.name":"service-catalog-ui","openshift.io/deployment.name":"service-catalog-ui-4","openshift.io/scc":"anyuid"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"service-catalog-ui-4","uid":"b5aba441-a644-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"miq-anyuid-token-5hdnb","secret":{"secretName":"miq-anyuid-token-5hdnb","defaultMode":420}}],"containers":[{"name":"service-catalog-ui","image":"docker.io/fryguy9/insights-ui-service_catalog:latest","ports":[{"containerPort":8002,"protocol":"TCP"}],"env":[{"name":"API_HOST","value":"service-catalog-api-insights.10.8.96.54.nip.io"},{"name":"API_PORT","value":"443"}],"resources":{},"volumeMounts":[{"name":"miq-anyuid-token-5hdnb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"tcpSocket":{"port":8002},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["MKNOD"]}}},{"name":"insights-proxy","image":"docker.io/fryguy9/insights-proxy:latest","ports":[{"containerPort":443,"protocol":"TCP"}],"env":[{"name":"PLATFORM","value":"linux"},{"name":"LINUX","value":"true"},{"name":"SPANDX_HOST","value":"service-catalog-ui-insights.10.8.96.54.nip.io"},{"name":"SSL","value":"false"},{"name":"SPANDX_PORT","value":"443"}],"resources":{},"volumeMounts":[{"name":"miq-anyuid-token-5hdnb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"tcpSocket":{"port":443},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"miq-anyuid","serviceAccount":"miq-anyuid","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c0"}},"imagePullSecrets":[{"name":"miq-anyuid-dockercfg-2skqg"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-22T19:51:12Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-22T19:51:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-22T19:51:12Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.165","startTime":"2018-08-22T19:51:12Z","containerStatuses":[{"name":"insights-proxy","state":{"running":{"startedAt":"2018-08-22T19:51:27Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/fryguy9/insights-proxy:latest","imageID":"docker-pullable://docker.io/fryguy9/insights-proxy@sha256:0259f2ea3071fe441eef727d303beda3de648ea876c45f29da3449e60f27e33a","containerID":"docker://d5dc9a29307a046dad6319814d60d31e172479a00f18ae668fc388cd95d41d16"},{"name":"service-catalog-ui","state":{"running":{"startedAt":"2018-08-22T19:51:19Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/fryguy9/insights-ui-service_catalog:latest","imageID":"docker-pullable://docker.io/fryguy9/insights-ui-service_catalog@sha256:0af47bfd7900876c01fb66a6d8164ab8e890bcd254da2187b5469f8ef495f313","containerID":"docker://9fe03024bcf1d1687bdbd7b1d1403a2a7f395bf31f0328360f4d45a97c632523"}],"qosClass":"BestEffort"}},{"metadata":{"name":"jason-test-cd-4-2gbjm","generateName":"jason-test-cd-4-","namespace":"jason-test-cd","selfLink":"/api/v1/namespaces/jason-test-cd/pods/jason-test-cd-4-2gbjm","uid":"a2c938c5-9f37-11e8-ba7e-d094660d31fb","resourceVersion":"32777194","creationTimestamp":"2018-08-13T20:29:53Z","labels":{"deployment":"jason-test-cd-4","deploymentconfig":"jason-test-cd","name":"jason-test-cd"},"annotations":{"openshift.io/deployment-config.latest-version":"4","openshift.io/deployment-config.name":"jason-test-cd","openshift.io/deployment.name":"jason-test-cd-4","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"jason-test-cd-4","uid":"9bb08ae5-9f37-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"default-token-w677z","secret":{"secretName":"default-token-w677z","defaultMode":420}}],"containers":[{"name":"jason-test-cd","image":"fryguy9/jason-test-cd@sha256:d4e806b5b80004f9cd5abda173a4d7a96fbecb2f7aa6841b3f37f1c1da42e4bd","resources":{},"volumeMounts":[{"name":"default-token-w677z","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000310000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c18,c2"},"fsGroup":1000310000},"imagePullSecrets":[{"name":"default-dockercfg-kbfwd"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:29:53Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:30:01Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:29:53Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.73","startTime":"2018-08-13T20:29:53Z","containerStatuses":[{"name":"jason-test-cd","state":{"running":{"startedAt":"2018-08-13T20:30:00Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/fryguy9/jason-test-cd@sha256:d4e806b5b80004f9cd5abda173a4d7a96fbecb2f7aa6841b3f37f1c1da42e4bd","imageID":"docker-pullable://docker.io/fryguy9/jason-test-cd@sha256:d4e806b5b80004f9cd5abda173a4d7a96fbecb2f7aa6841b3f37f1c1da42e4bd","containerID":"docker://119ccfef825c3b021037dd873fd31d5b51cc07cd3b49e22d06b05c843438c90a"}],"qosClass":"BestEffort"}},{"metadata":{"name":"apiserver-d9kx7","generateName":"apiserver-","namespace":"kube-service-catalog","selfLink":"/api/v1/namespaces/kube-service-catalog/pods/apiserver-d9kx7","uid":"521634bf-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1689939","creationTimestamp":"2018-05-16T20:47:17Z","labels":{"app":"apiserver","controller-revision-hash":"1638918296","pod-template-generation":"1"},"annotations":{"ca_hash":"b9dda28681ac7c5607011e146f167c80b02ed3fb","openshift.io/scc":"hostmount-anyuid"},"ownerReferences":[{"apiVersion":"extensions/v1beta1","kind":"DaemonSet","name":"apiserver","uid":"4e9b6911-594a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"apiserver-ssl","secret":{"secretName":"apiserver-ssl","items":[{"key":"tls.crt","path":"apiserver.crt"},{"key":"tls.key","path":"apiserver.key"}],"defaultMode":420}},{"name":"etcd-host-cert","hostPath":{"path":"/etc/origin/master","type":""}},{"name":"data-dir","emptyDir":{}},{"name":"service-catalog-apiserver-token-6h8p5","secret":{"secretName":"service-catalog-apiserver-token-6h8p5","defaultMode":420}}],"containers":[{"name":"apiserver","image":"registry.access.redhat.com/openshift3/ose-service-catalog:v3.9.25","command":["/usr/bin/service-catalog"],"args":["apiserver","--storage-type","etcd","--secure-port","6443","--etcd-servers","https://host.example.com:2379","--etcd-cafile","/etc/origin/master/master.etcd-ca.crt","--etcd-certfile","/etc/origin/master/master.etcd-client.crt","--etcd-keyfile","/etc/origin/master/master.etcd-client.key","-v","10","--cors-allowed-origins","localhost","--admission-control","KubernetesNamespaceLifecycle,DefaultServicePlan,ServiceBindingsLifecycle,ServicePlanChangeValidator,BrokerAuthSarCheck","--feature-gates","OriginatingIdentity=true"],"ports":[{"containerPort":6443,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"apiserver-ssl","readOnly":true,"mountPath":"/var/run/kubernetes-service-catalog"},{"name":"etcd-host-cert","readOnly":true,"mountPath":"/etc/origin/master"},{"name":"service-catalog-apiserver-token-6h8p5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"openshift-infra":"apiserver"},"serviceAccountName":"service-catalog-apiserver","serviceAccount":"service-catalog-apiserver","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c10,c0"}},"imagePullSecrets":[{"name":"service-catalog-apiserver-dockercfg-rp549"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:47:17Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:47:26Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:47:26Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.9","startTime":"2018-05-16T20:47:17Z","containerStatuses":[{"name":"apiserver","state":{"running":{"startedAt":"2018-05-16T20:47:26Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-service-catalog:v3.9.25","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-service-catalog@sha256:a1bd94f4e67f69bc1188b873d2b5e06a6242cf7e3c03ceae2dee3b580c2b85a3","containerID":"docker://eba05b3b32dcd06f51d0b3ba41fad7183c0b835b063919167532c56e61ef7777"}],"qosClass":"BestEffort"}},{"metadata":{"name":"controller-manager-dzqzz","generateName":"controller-manager-","namespace":"kube-service-catalog","selfLink":"/api/v1/namespaces/kube-service-catalog/pods/controller-manager-dzqzz","uid":"521631e5-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1689933","creationTimestamp":"2018-05-16T20:47:17Z","labels":{"app":"controller-manager","controller-revision-hash":"2771746763","pod-template-generation":"1"},"annotations":{"openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"extensions/v1beta1","kind":"DaemonSet","name":"controller-manager","uid":"51725289-594a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"service-catalog-ssl","secret":{"secretName":"apiserver-ssl","items":[{"key":"tls.crt","path":"apiserver.crt"}],"defaultMode":420}},{"name":"service-catalog-controller-token-jxq9x","secret":{"secretName":"service-catalog-controller-token-jxq9x","defaultMode":420}}],"containers":[{"name":"controller-manager","image":"registry.access.redhat.com/openshift3/ose-service-catalog:v3.9.25","command":["/usr/bin/service-catalog"],"args":["controller-manager","--port","8080","-v","5","--leader-election-namespace","kube-service-catalog","--broker-relist-interval","5m","--feature-gates","OriginatingIdentity=true"],"ports":[{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"K8S_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}}],"resources":{},"volumeMounts":[{"name":"service-catalog-ssl","readOnly":true,"mountPath":"/var/run/kubernetes-service-catalog"},{"name":"service-catalog-controller-token-jxq9x","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000090000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"openshift-infra":"apiserver"},"serviceAccountName":"service-catalog-controller","serviceAccount":"service-catalog-controller","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c10,c0"},"fsGroup":1000090000},"imagePullSecrets":[{"name":"service-catalog-controller-dockercfg-kxt4m"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:47:17Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:47:25Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:47:25Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.8","startTime":"2018-05-16T20:47:17Z","containerStatuses":[{"name":"controller-manager","state":{"running":{"startedAt":"2018-05-16T20:47:24Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-service-catalog:v3.9.25","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-service-catalog@sha256:a1bd94f4e67f69bc1188b873d2b5e06a6242cf7e3c03ceae2dee3b580c2b85a3","containerID":"docker://4d8a6da180ae575bd3459e91c3ea974c6f3c7303925c6727db60db0b70220354"}],"qosClass":"BestEffort"}},{"metadata":{"name":"logging-curator-1-wgd7x","generateName":"logging-curator-1-","namespace":"logging","selfLink":"/api/v1/namespaces/logging/pods/logging-curator-1-wgd7x","uid":"fd16633e-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1691547","creationTimestamp":"2018-05-16T20:52:04Z","labels":{"component":"curator","deployment":"logging-curator-1","deploymentconfig":"logging-curator","logging-infra":"curator","provider":"openshift"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"logging-curator","openshift.io/deployment.name":"logging-curator-1","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"logging-curator-1","uid":"828eb89f-0dab-11e8-a8e8-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"certs","secret":{"secretName":"logging-curator","defaultMode":420}},{"name":"config","configMap":{"name":"logging-curator","defaultMode":420}},{"name":"aggregated-logging-curator-token-hx2pm","secret":{"secretName":"aggregated-logging-curator-token-hx2pm","defaultMode":420}}],"containers":[{"name":"curator","image":"registry.access.redhat.com/openshift3/logging-curator:v3.6","env":[{"name":"K8S_HOST_URL","value":"https://kubernetes.default.svc.cluster.local"},{"name":"ES_HOST","value":"logging-es"},{"name":"ES_PORT","value":"9200"},{"name":"ES_CLIENT_CERT","value":"/etc/curator/keys/cert"},{"name":"ES_CLIENT_KEY","value":"/etc/curator/keys/key"},{"name":"ES_CA","value":"/etc/curator/keys/ca"},{"name":"CURATOR_DEFAULT_DAYS","value":"30"},{"name":"CURATOR_RUN_HOUR","value":"0"},{"name":"CURATOR_RUN_MINUTE","value":"0"},{"name":"CURATOR_RUN_TIMEZONE","value":"UTC"},{"name":"CURATOR_SCRIPT_LOG_LEVEL","value":"INFO"},{"name":"CURATOR_LOG_LEVEL","value":"ERROR"}],"resources":{"limits":{"memory":"256Mi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"name":"certs","readOnly":true,"mountPath":"/etc/curator/keys"},{"name":"config","readOnly":true,"mountPath":"/etc/curator/settings"},{"name":"aggregated-logging-curator-token-hx2pm","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000060000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"aggregated-logging-curator","serviceAccount":"aggregated-logging-curator","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c8,c2"},"fsGroup":1000060000},"imagePullSecrets":[{"name":"aggregated-logging-curator-dockercfg-lhgdq"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:27Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:04Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.12","startTime":"2018-05-16T20:52:04Z","containerStatuses":[{"name":"curator","state":{"running":{"startedAt":"2018-05-16T20:52:16Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.access.redhat.com/openshift3/logging-curator:v3.6","imageID":"docker-pullable://registry.access.redhat.com/openshift3/logging-curator@sha256:e66037cfa15d11538af4b68ddfb3c2930b195b872510f32dde66e5320d50a624","containerID":"docker://3314c07a783d7136cd946beb713b7266f3e2fb8831253f13f08893b1aa29d77a"}],"qosClass":"Burstable"}},{"metadata":{"name":"logging-es-data-master-dt25s0by-1-mzrlq","generateName":"logging-es-data-master-dt25s0by-1-","namespace":"logging","selfLink":"/api/v1/namespaces/logging/pods/logging-es-data-master-dt25s0by-1-mzrlq","uid":"fd1655b4-594a-11e8-ba7e-d094660d31fb","resourceVersion":"2099802","creationTimestamp":"2018-05-16T20:52:04Z","labels":{"component":"es","deployment":"logging-es-data-master-dt25s0by-1","deploymentconfig":"logging-es-data-master-dt25s0by","logging-infra":"elasticsearch","provider":"openshift"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"logging-es-data-master-dt25s0by","openshift.io/deployment.name":"logging-es-data-master-dt25s0by-1","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"logging-es-data-master-dt25s0by-1","uid":"73cf9593-0dab-11e8-a8e8-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"elasticsearch","secret":{"secretName":"logging-elasticsearch","defaultMode":420}},{"name":"elasticsearch-config","configMap":{"name":"logging-elasticsearch","defaultMode":420}},{"name":"elasticsearch-storage","emptyDir":{}},{"name":"aggregated-logging-elasticsearch-token-0qzh2","secret":{"secretName":"aggregated-logging-elasticsearch-token-0qzh2","defaultMode":420}}],"containers":[{"name":"elasticsearch","image":"registry.access.redhat.com/openshift3/logging-elasticsearch:v3.6","ports":[{"name":"restapi","containerPort":9200,"protocol":"TCP"},{"name":"cluster","containerPort":9300,"protocol":"TCP"}],"env":[{"name":"DC_NAME","value":"logging-es-data-master-dt25s0by"},{"name":"NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"KUBERNETES_TRUST_CERT","value":"true"},{"name":"SERVICE_DNS","value":"logging-es-cluster"},{"name":"CLUSTER_NAME","value":"logging-es"},{"name":"INSTANCE_RAM","value":"8Gi"},{"name":"HEAP_DUMP_LOCATION","value":"/elasticsearch/persistent/heapdump.hprof"},{"name":"NODE_QUORUM","value":"1"},{"name":"RECOVER_EXPECTED_NODES","value":"1"},{"name":"RECOVER_AFTER_TIME","value":"5m"},{"name":"READINESS_PROBE_TIMEOUT","value":"30"},{"name":"POD_LABEL","value":"component=es"},{"name":"IS_MASTER","value":"true"},{"name":"HAS_DATA","value":"true"}],"resources":{"limits":{"memory":"8Gi"},"requests":{"cpu":"1","memory":"8Gi"}},"volumeMounts":[{"name":"elasticsearch","readOnly":true,"mountPath":"/etc/elasticsearch/secret"},{"name":"elasticsearch-config","readOnly":true,"mountPath":"/usr/share/java/elasticsearch/config"},{"name":"elasticsearch-storage","mountPath":"/elasticsearch/persistent"},{"name":"aggregated-logging-elasticsearch-token-0qzh2","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"exec":{"command":["/usr/share/java/elasticsearch/probe/readiness.sh"]},"initialDelaySeconds":10,"timeoutSeconds":30,"periodSeconds":5,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000060000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"aggregated-logging-elasticsearch","serviceAccount":"aggregated-logging-elasticsearch","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c8,c2"},"supplementalGroups":[65534],"fsGroup":1000060000},"imagePullSecrets":[{"name":"aggregated-logging-elasticsearch-dockercfg-ct1zm"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:04Z"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-17T19:22:50Z","reason":"ContainersNotReady","message":"containers
        with unready status: [elasticsearch]"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:04Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.13","startTime":"2018-05-16T20:52:04Z","containerStatuses":[{"name":"elasticsearch","state":{"running":{"startedAt":"2018-05-16T20:52:10Z"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/logging-elasticsearch:v3.6","imageID":"docker-pullable://registry.access.redhat.com/openshift3/logging-elasticsearch@sha256:f4a63bd789b4ad05db7f0cc0fd80309ae77ebcaa0e1b624b674e886e66f88987","containerID":"docker://c9c44750c6a76b0eda8ac2d8ffd1483e2e59c38754690b4c28b39f39870e0c09"}],"qosClass":"Burstable"}},{"metadata":{"name":"logging-fluentd-bt7hm","generateName":"logging-fluentd-","namespace":"logging","selfLink":"/api/v1/namespaces/logging/pods/logging-fluentd-bt7hm","uid":"395a4bbb-0de5-11e8-a8e8-d094660d31fb","resourceVersion":"1691982","creationTimestamp":"2018-02-09T22:04:39Z","labels":{"component":"fluentd","logging-infra":"fluentd","pod-template-generation":"2","provider":"openshift"},"annotations":{"kubernetes.io/created-by":"{\"kind\":\"SerializedReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"DaemonSet\",\"namespace\":\"logging\",\"name\":\"logging-fluentd\",\"uid\":\"8b08bdcf-0dab-11e8-a8e8-d094660d31fb\",\"apiVersion\":\"extensions\",\"resourceVersion\":\"34633\"}}\n","openshift.io/scc":"privileged"},"ownerReferences":[{"apiVersion":"extensions/v1beta1","kind":"DaemonSet","name":"logging-fluentd","uid":"8b08bdcf-0dab-11e8-a8e8-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"runlogjournal","hostPath":{"path":"/run/log/journal","type":""}},{"name":"varlog","hostPath":{"path":"/var/log","type":""}},{"name":"varlibdockercontainers","hostPath":{"path":"/var/lib/docker/containers","type":""}},{"name":"config","configMap":{"name":"logging-fluentd","defaultMode":420}},{"name":"certs","secret":{"secretName":"logging-fluentd","defaultMode":420}},{"name":"dockerhostname","hostPath":{"path":"/etc/hostname","type":""}},{"name":"localtime","hostPath":{"path":"/etc/localtime","type":""}},{"name":"dockercfg","hostPath":{"path":"/etc/sysconfig/docker","type":""}},{"name":"dockerdaemoncfg","hostPath":{"path":"/etc/docker","type":""}},{"name":"filebufferstorage","hostPath":{"path":"/var/lib/fluentd","type":""}},{"name":"aggregated-logging-fluentd-token-k4nqf","secret":{"secretName":"aggregated-logging-fluentd-token-k4nqf","defaultMode":420}}],"containers":[{"name":"fluentd-elasticsearch","image":"registry.access.redhat.com/openshift3/logging-fluentd:v3.6","env":[{"name":"K8S_HOST_URL","value":"https://kubernetes.default.svc.cluster.local"},{"name":"ES_HOST","value":"logging-es"},{"name":"ES_PORT","value":"9200"},{"name":"ES_CLIENT_CERT","value":"/etc/fluent/keys/cert"},{"name":"ES_CLIENT_KEY","value":"/etc/fluent/keys/key"},{"name":"ES_CA","value":"/etc/fluent/keys/ca"},{"name":"OPS_HOST","value":"logging-es"},{"name":"OPS_PORT","value":"9200"},{"name":"OPS_CLIENT_CERT","value":"/etc/fluent/keys/cert"},{"name":"OPS_CLIENT_KEY","value":"/etc/fluent/keys/key"},{"name":"OPS_CA","value":"/etc/fluent/keys/ca"},{"name":"ES_COPY","value":"false"},{"name":"JOURNAL_SOURCE"},{"name":"JOURNAL_READ_FROM_HEAD"},{"name":"BUFFER_QUEUE_LIMIT","value":"32"},{"name":"BUFFER_SIZE_LIMIT","value":"8m"},{"name":"FLUENTD_CPU_LIMIT","valueFrom":{"resourceFieldRef":{"containerName":"fluentd-elasticsearch","resource":"limits.cpu","divisor":"0"}}},{"name":"FLUENTD_MEMORY_LIMIT","valueFrom":{"resourceFieldRef":{"containerName":"fluentd-elasticsearch","resource":"limits.memory","divisor":"0"}}},{"name":"FILE_BUFFER_LIMIT","value":"256Mi"},{"name":"USE_JOURNAL"}],"resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"100m","memory":"512Mi"}},"volumeMounts":[{"name":"runlogjournal","mountPath":"/run/log/journal"},{"name":"varlog","mountPath":"/var/log"},{"name":"varlibdockercontainers","readOnly":true,"mountPath":"/var/lib/docker/containers"},{"name":"config","readOnly":true,"mountPath":"/etc/fluent/configs.d/user"},{"name":"certs","readOnly":true,"mountPath":"/etc/fluent/keys"},{"name":"dockerhostname","readOnly":true,"mountPath":"/etc/docker-hostname"},{"name":"localtime","readOnly":true,"mountPath":"/etc/localtime"},{"name":"dockercfg","readOnly":true,"mountPath":"/etc/sysconfig/docker"},{"name":"dockerdaemoncfg","readOnly":true,"mountPath":"/etc/docker"},{"name":"filebufferstorage","mountPath":"/var/lib/fluentd"},{"name":"aggregated-logging-fluentd-token-k4nqf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":true}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"logging-infra-fluentd":"true"},"serviceAccountName":"aggregated-logging-fluentd","serviceAccount":"aggregated-logging-fluentd","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{},"imagePullSecrets":[{"name":"aggregated-logging-fluentd-dockercfg-2091m"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.alpha.kubernetes.io/notReady","operator":"Exists","effect":"NoExecute"},{"key":"node.alpha.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-02-09T22:04:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:54:22Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-02-09T22:04:41Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.2","startTime":"2018-02-09T22:04:39Z","containerStatuses":[{"name":"fluentd-elasticsearch","state":{"running":{"startedAt":"2018-05-16T20:54:21Z"}},"lastState":{"terminated":{"exitCode":137,"reason":"Error","startedAt":"2018-05-16T19:40:18Z","finishedAt":"2018-05-16T20:53:02Z","containerID":"docker://1f52edda03c3bb39a80983a53ca15f15225c4eec9fc68f0a0aa630101c177d3f"}},"ready":true,"restartCount":7,"image":"registry.access.redhat.com/openshift3/logging-fluentd:v3.6","imageID":"docker-pullable://registry.access.redhat.com/openshift3/logging-fluentd@sha256:e306fef383f1d2c5f9ad85aba7538915813764826e5ffe3a5b10ba7c18b93d3b","containerID":"docker://04f38b441a7ab570d85c4353523eb76c1316d24a9dcc194186e73d569701312e"}],"qosClass":"Burstable"}},{"metadata":{"name":"logging-fluentd-dx5zt","generateName":"logging-fluentd-","namespace":"logging","selfLink":"/api/v1/namespaces/logging/pods/logging-fluentd-dx5zt","uid":"44fa2559-0de5-11e8-a8e8-d094660d31fb","resourceVersion":"1689196","creationTimestamp":"2018-02-09T22:04:59Z","labels":{"component":"fluentd","logging-infra":"fluentd","pod-template-generation":"2","provider":"openshift"},"annotations":{"kubernetes.io/created-by":"{\"kind\":\"SerializedReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"DaemonSet\",\"namespace\":\"logging\",\"name\":\"logging-fluentd\",\"uid\":\"8b08bdcf-0dab-11e8-a8e8-d094660d31fb\",\"apiVersion\":\"extensions\",\"resourceVersion\":\"34654\"}}\n","openshift.io/scc":"privileged"},"ownerReferences":[{"apiVersion":"extensions/v1beta1","kind":"DaemonSet","name":"logging-fluentd","uid":"8b08bdcf-0dab-11e8-a8e8-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"runlogjournal","hostPath":{"path":"/run/log/journal","type":""}},{"name":"varlog","hostPath":{"path":"/var/log","type":""}},{"name":"varlibdockercontainers","hostPath":{"path":"/var/lib/docker/containers","type":""}},{"name":"config","configMap":{"name":"logging-fluentd","defaultMode":420}},{"name":"certs","secret":{"secretName":"logging-fluentd","defaultMode":420}},{"name":"dockerhostname","hostPath":{"path":"/etc/hostname","type":""}},{"name":"localtime","hostPath":{"path":"/etc/localtime","type":""}},{"name":"dockercfg","hostPath":{"path":"/etc/sysconfig/docker","type":""}},{"name":"dockerdaemoncfg","hostPath":{"path":"/etc/docker","type":""}},{"name":"filebufferstorage","hostPath":{"path":"/var/lib/fluentd","type":""}},{"name":"aggregated-logging-fluentd-token-k4nqf","secret":{"secretName":"aggregated-logging-fluentd-token-k4nqf","defaultMode":420}}],"containers":[{"name":"fluentd-elasticsearch","image":"registry.access.redhat.com/openshift3/logging-fluentd:v3.6","env":[{"name":"K8S_HOST_URL","value":"https://kubernetes.default.svc.cluster.local"},{"name":"ES_HOST","value":"logging-es"},{"name":"ES_PORT","value":"9200"},{"name":"ES_CLIENT_CERT","value":"/etc/fluent/keys/cert"},{"name":"ES_CLIENT_KEY","value":"/etc/fluent/keys/key"},{"name":"ES_CA","value":"/etc/fluent/keys/ca"},{"name":"OPS_HOST","value":"logging-es"},{"name":"OPS_PORT","value":"9200"},{"name":"OPS_CLIENT_CERT","value":"/etc/fluent/keys/cert"},{"name":"OPS_CLIENT_KEY","value":"/etc/fluent/keys/key"},{"name":"OPS_CA","value":"/etc/fluent/keys/ca"},{"name":"ES_COPY","value":"false"},{"name":"JOURNAL_SOURCE"},{"name":"JOURNAL_READ_FROM_HEAD"},{"name":"BUFFER_QUEUE_LIMIT","value":"32"},{"name":"BUFFER_SIZE_LIMIT","value":"8m"},{"name":"FLUENTD_CPU_LIMIT","valueFrom":{"resourceFieldRef":{"containerName":"fluentd-elasticsearch","resource":"limits.cpu","divisor":"0"}}},{"name":"FLUENTD_MEMORY_LIMIT","valueFrom":{"resourceFieldRef":{"containerName":"fluentd-elasticsearch","resource":"limits.memory","divisor":"0"}}},{"name":"FILE_BUFFER_LIMIT","value":"256Mi"},{"name":"USE_JOURNAL"}],"resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"100m","memory":"512Mi"}},"volumeMounts":[{"name":"runlogjournal","mountPath":"/run/log/journal"},{"name":"varlog","mountPath":"/var/log"},{"name":"varlibdockercontainers","readOnly":true,"mountPath":"/var/lib/docker/containers"},{"name":"config","readOnly":true,"mountPath":"/etc/fluent/configs.d/user"},{"name":"certs","readOnly":true,"mountPath":"/etc/fluent/keys"},{"name":"dockerhostname","readOnly":true,"mountPath":"/etc/docker-hostname"},{"name":"localtime","readOnly":true,"mountPath":"/etc/localtime"},{"name":"dockercfg","readOnly":true,"mountPath":"/etc/sysconfig/docker"},{"name":"dockerdaemoncfg","readOnly":true,"mountPath":"/etc/docker"},{"name":"filebufferstorage","mountPath":"/var/lib/fluentd"},{"name":"aggregated-logging-fluentd-token-k4nqf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":true}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"logging-infra-fluentd":"true"},"serviceAccountName":"aggregated-logging-fluentd","serviceAccount":"aggregated-logging-fluentd","nodeName":"host.example.com","securityContext":{},"imagePullSecrets":[{"name":"aggregated-logging-fluentd-dockercfg-2091m"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.alpha.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.alpha.kubernetes.io/notReady","operator":"Exists","effect":"NoExecute"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-02-09T22:04:59Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:44:30Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-02-09T22:05:02Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.2","startTime":"2018-02-09T22:04:59Z","containerStatuses":[{"name":"fluentd-elasticsearch","state":{"running":{"startedAt":"2018-05-16T20:44:29Z"}},"lastState":{"terminated":{"exitCode":137,"reason":"Error","startedAt":"2018-05-16T19:26:46Z","finishedAt":"2018-05-16T20:39:00Z","containerID":"docker://5e8f1b09cbfb83248db4d96b91d5ed51705522a08aa748301c7a4a78f566d04c"}},"ready":true,"restartCount":7,"image":"registry.access.redhat.com/openshift3/logging-fluentd:v3.6","imageID":"docker-pullable://registry.access.redhat.com/openshift3/logging-fluentd@sha256:e306fef383f1d2c5f9ad85aba7538915813764826e5ffe3a5b10ba7c18b93d3b","containerID":"docker://750caae44e8cd329558640065a750a3ce2d7256ff1a78b63e046c5b42388db20"}],"qosClass":"Burstable"}},{"metadata":{"name":"logging-kibana-1-xl8p7","generateName":"logging-kibana-1-","namespace":"logging","selfLink":"/api/v1/namespaces/logging/pods/logging-kibana-1-xl8p7","uid":"fd48c946-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1691666","creationTimestamp":"2018-05-16T20:52:04Z","labels":{"component":"kibana","deployment":"logging-kibana-1","deploymentconfig":"logging-kibana","logging-infra":"kibana","provider":"openshift"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"logging-kibana","openshift.io/deployment.name":"logging-kibana-1","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"logging-kibana-1","uid":"7cacd34e-0dab-11e8-a8e8-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"kibana","secret":{"secretName":"logging-kibana","defaultMode":420}},{"name":"kibana-proxy","secret":{"secretName":"logging-kibana-proxy","defaultMode":420}},{"name":"aggregated-logging-kibana-token-p3chj","secret":{"secretName":"aggregated-logging-kibana-token-p3chj","defaultMode":420}}],"containers":[{"name":"kibana","image":"registry.access.redhat.com/openshift3/logging-kibana:v3.6","env":[{"name":"ES_HOST","value":"logging-es"},{"name":"ES_PORT","value":"9200"},{"name":"KIBANA_MEMORY_LIMIT","valueFrom":{"resourceFieldRef":{"containerName":"kibana","resource":"limits.memory","divisor":"0"}}}],"resources":{"limits":{"memory":"736Mi"},"requests":{"cpu":"100m","memory":"736Mi"}},"volumeMounts":[{"name":"kibana","readOnly":true,"mountPath":"/etc/kibana/keys"},{"name":"aggregated-logging-kibana-token-p3chj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"exec":{"command":["/usr/share/kibana/probe/readiness.sh"]},"initialDelaySeconds":5,"timeoutSeconds":4,"periodSeconds":5,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000060000}},{"name":"kibana-proxy","image":"registry.access.redhat.com/openshift3/logging-auth-proxy:v3.6","ports":[{"name":"oaproxy","containerPort":3000,"protocol":"TCP"}],"env":[{"name":"OAP_BACKEND_URL","value":"http://localhost:5601"},{"name":"OAP_AUTH_MODE","value":"oauth2"},{"name":"OAP_TRANSFORM","value":"user_header,token_header"},{"name":"OAP_OAUTH_ID","value":"kibana-proxy"},{"name":"OAP_MASTER_URL","value":"https://kubernetes.default.svc.cluster.local"},{"name":"OAP_PUBLIC_MASTER_URL","value":"https://host.example.com:8443"},{"name":"OAP_LOGOUT_REDIRECT","value":"https://host.example.com:8443/console/logout"},{"name":"OAP_MASTER_CA_FILE","value":"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"},{"name":"OAP_DEBUG","value":"False"},{"name":"OAP_OAUTH_SECRET_FILE","value":"/secret/oauth-secret"},{"name":"OAP_SERVER_CERT_FILE","value":"/secret/server-cert"},{"name":"OAP_SERVER_KEY_FILE","value":"/secret/server-key"},{"name":"OAP_SERVER_TLS_FILE","value":"/secret/server-tls.json"},{"name":"OAP_SESSION_SECRET_FILE","value":"/secret/session-secret"},{"name":"OCP_AUTH_PROXY_MEMORY_LIMIT","valueFrom":{"resourceFieldRef":{"containerName":"kibana-proxy","resource":"limits.memory","divisor":"0"}}}],"resources":{"limits":{"memory":"256Mi"},"requests":{"cpu":"100m","memory":"256Mi"}},"volumeMounts":[{"name":"kibana-proxy","readOnly":true,"mountPath":"/secret"},{"name":"aggregated-logging-kibana-token-p3chj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000060000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"aggregated-logging-kibana","serviceAccount":"aggregated-logging-kibana","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c8,c2"},"fsGroup":1000060000},"imagePullSecrets":[{"name":"aggregated-logging-kibana-dockercfg-8q2s5"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:04Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.15","startTime":"2018-05-16T20:52:04Z","containerStatuses":[{"name":"kibana","state":{"running":{"startedAt":"2018-05-16T20:52:20Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.access.redhat.com/openshift3/logging-kibana:v3.6","imageID":"docker-pullable://registry.access.redhat.com/openshift3/logging-kibana@sha256:483b71f3afb044769e1ba1cce1210928a150b6564285f060c112295c1c6358e6","containerID":"docker://35e49c2b3cdff217c24f52ba73278d6fef54687a90c1657ae22fd6fd63658920"},{"name":"kibana-proxy","state":{"running":{"startedAt":"2018-05-16T20:52:28Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.access.redhat.com/openshift3/logging-auth-proxy:v3.6","imageID":"docker-pullable://registry.access.redhat.com/openshift3/logging-auth-proxy@sha256:ec014b2711422eb111dbd8023b34e1ac681400df8b38d6d37016e0bca8407267","containerID":"docker://3ffff8f92bb89b21434a2a20d1cb2848d55940dd040b805c2830028d97bbd030"}],"qosClass":"Burstable"}},{"metadata":{"name":"manageiq-img-scan-0392b","namespace":"management-infra","selfLink":"/api/v1/namespaces/management-infra/pods/manageiq-img-scan-0392b","uid":"46584da3-68f3-11e8-ba7e-d094660d31fb","resourceVersion":"9478227","creationTimestamp":"2018-06-05T19:04:30Z","labels":{"manageiq.org":"true","name":"manageiq-img-scan-0392b"},"annotations":{"manageiq.org/guid":"6c2be7c7-d9e9-4fbb-98bb-41cd063fdda7","manageiq.org/hostname":"unknown","manageiq.org/image":"docker.io/bdunne/elastic_log_ripper@sha256:fa0470ebcd46589f6d7a8746f3669012c015364f7961a12c10135cafef3530ba","manageiq.org/jobid":"0392b8f9-4729-4ad3-a80b-77e8d727ca4f","openshift.io/scc":"privileged"}},"spec":{"volumes":[{"name":"docker-socket","hostPath":{"path":"/var/run/docker.sock","type":""}},{"name":"inspector-admin-secret-inspector-admin-dockercfg-dlv77","secret":{"secretName":"inspector-admin-dockercfg-dlv77","defaultMode":420}},{"name":"default-token-m5fhj","secret":{"secretName":"default-token-m5fhj","defaultMode":420}}],"containers":[{"name":"image-inspector","image":"docker.io/openshift/image-inspector:2.1","command":["/usr/bin/image-inspector","--chroot","--image=docker.io/bdunne/elastic_log_ripper@sha256:fa0470ebcd46589f6d7a8746f3669012c015364f7961a12c10135cafef3530ba","--scan-type=openscap","--serve=0.0.0.0:8080","--dockercfg=/var/run/secrets/kubernetes.io/inspector-admin-secret-inspector-admin-dockercfg-dlv77/.dockercfg"],"ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"docker-socket","mountPath":"/var/run/docker.sock"},{"name":"inspector-admin-secret-inspector-admin-dockercfg-dlv77","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/inspector-admin-secret-inspector-admin-dockercfg-dlv77"},{"name":"default-token-m5fhj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":5,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"privileged":true}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{},"imagePullSecrets":[{"name":"default-dockercfg-8crlc"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-05T19:04:30Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-05T19:05:08Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-05T19:04:30Z"}],"hostIP":"10.8.96.55","podIP":"10.129.1.7","startTime":"2018-06-05T19:04:30Z","containerStatuses":[{"name":"image-inspector","state":{"running":{"startedAt":"2018-06-05T19:04:42Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/openshift/image-inspector:2.1","imageID":"docker-pullable://docker.io/openshift/image-inspector@sha256:f0faae09f87106178183a65e2a2c7610c6328739c7e3870a3e9ba112cdd64516","containerID":"docker://e4caa28ed1cc2d770c19cacaf7439368bcabd5fdfe1156769177e2bc977bf15e"}],"qosClass":"BestEffort"}},{"metadata":{"name":"manageiq-img-scan-26dd2","namespace":"management-infra","selfLink":"/api/v1/namespaces/management-infra/pods/manageiq-img-scan-26dd2","uid":"6867b8e1-68fa-11e8-ba7e-d094660d31fb","resourceVersion":"9490345","creationTimestamp":"2018-06-05T19:55:33Z","labels":{"manageiq.org":"true","name":"manageiq-img-scan-26dd2"},"annotations":{"manageiq.org/guid":"6c2be7c7-d9e9-4fbb-98bb-41cd063fdda7","manageiq.org/hostname":"unknown","manageiq.org/image":"registry.access.redhat.com/jboss-amq-6/amq62-openshift@sha256:0d011bf6938a6dd2463e3d0cd71b722d2570310112a3d3511a4700a1e8cb7c7f","manageiq.org/jobid":"26dd2579-dfdb-4953-9c16-fa66b1827fc6","openshift.io/scc":"privileged"}},"spec":{"volumes":[{"name":"docker-socket","hostPath":{"path":"/var/run/docker.sock","type":""}},{"name":"inspector-admin-secret-inspector-admin-dockercfg-dlv77","secret":{"secretName":"inspector-admin-dockercfg-dlv77","defaultMode":420}},{"name":"default-token-m5fhj","secret":{"secretName":"default-token-m5fhj","defaultMode":420}}],"containers":[{"name":"image-inspector","image":"docker.io/openshift/image-inspector:2.1","command":["/usr/bin/image-inspector","--chroot","--image=registry.access.redhat.com/jboss-amq-6/amq62-openshift@sha256:0d011bf6938a6dd2463e3d0cd71b722d2570310112a3d3511a4700a1e8cb7c7f","--scan-type=openscap","--serve=0.0.0.0:8080","--dockercfg=/var/run/secrets/kubernetes.io/inspector-admin-secret-inspector-admin-dockercfg-dlv77/.dockercfg"],"ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"docker-socket","mountPath":"/var/run/docker.sock"},{"name":"inspector-admin-secret-inspector-admin-dockercfg-dlv77","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/inspector-admin-secret-inspector-admin-dockercfg-dlv77"},{"name":"default-token-m5fhj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":5,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"privileged":true}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{},"imagePullSecrets":[{"name":"default-dockercfg-8crlc"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-05T19:55:33Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-05T19:56:26Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-05T19:55:33Z"}],"hostIP":"10.8.96.55","podIP":"10.129.1.19","startTime":"2018-06-05T19:55:33Z","containerStatuses":[{"name":"image-inspector","state":{"running":{"startedAt":"2018-06-05T19:55:39Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/openshift/image-inspector:2.1","imageID":"docker-pullable://docker.io/openshift/image-inspector@sha256:f0faae09f87106178183a65e2a2c7610c6328739c7e3870a3e9ba112cdd64516","containerID":"docker://635c7f7f2ed8d10a85ad98dbfcadb951f898d850bcc3ad16834811804964fb44"}],"qosClass":"BestEffort"}},{"metadata":{"name":"manageiq-img-scan-f6991","namespace":"management-infra","selfLink":"/api/v1/namespaces/management-infra/pods/manageiq-img-scan-f6991","uid":"db2a1881-68f8-11e8-ba7e-d094660d31fb","resourceVersion":"9488114","creationTimestamp":"2018-06-05T19:44:27Z","labels":{"manageiq.org":"true","name":"manageiq-img-scan-f6991"},"annotations":{"manageiq.org/guid":"6c2be7c7-d9e9-4fbb-98bb-41cd063fdda7","manageiq.org/hostname":"unknown","manageiq.org/image":"docker.io/manageiq/manageiq-pods@sha256:69fdf3070f0401f8bf79e93bbf0e994608a91fbc37780e25e24eb0a061657af5","manageiq.org/jobid":"f699124b-7cff-4ebe-b82a-f45c3e5f623a","openshift.io/scc":"privileged"}},"spec":{"volumes":[{"name":"docker-socket","hostPath":{"path":"/var/run/docker.sock","type":""}},{"name":"inspector-admin-secret-inspector-admin-dockercfg-dlv77","secret":{"secretName":"inspector-admin-dockercfg-dlv77","defaultMode":420}},{"name":"default-token-m5fhj","secret":{"secretName":"default-token-m5fhj","defaultMode":420}}],"containers":[{"name":"image-inspector","image":"docker.io/openshift/image-inspector:2.1","command":["/usr/bin/image-inspector","--chroot","--image=docker.io/manageiq/manageiq-pods@sha256:69fdf3070f0401f8bf79e93bbf0e994608a91fbc37780e25e24eb0a061657af5","--scan-type=openscap","--serve=0.0.0.0:8080","--dockercfg=/var/run/secrets/kubernetes.io/inspector-admin-secret-inspector-admin-dockercfg-dlv77/.dockercfg"],"ports":[{"containerPort":8080,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"docker-socket","mountPath":"/var/run/docker.sock"},{"name":"inspector-admin-secret-inspector-admin-dockercfg-dlv77","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/inspector-admin-secret-inspector-admin-dockercfg-dlv77"},{"name":"default-token-m5fhj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8080,"scheme":"HTTP"},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":5,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"privileged":true}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{},"imagePullSecrets":[{"name":"default-dockercfg-8crlc"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-05T19:44:27Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-05T19:46:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-05T19:44:27Z"}],"hostIP":"10.8.96.55","podIP":"10.129.1.17","startTime":"2018-06-05T19:44:27Z","containerStatuses":[{"name":"image-inspector","state":{"running":{"startedAt":"2018-06-05T19:44:32Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/openshift/image-inspector:2.1","imageID":"docker-pullable://docker.io/openshift/image-inspector@sha256:f0faae09f87106178183a65e2a2c7610c6328739c7e3870a3e9ba112cdd64516","containerID":"docker://0ff343348757f6565819bcb453b8835b0f6f28e76388eb1a07cee6be3962b82d"}],"qosClass":"BestEffort"}},{"metadata":{"name":"httpd-1-mjtpn","generateName":"httpd-1-","namespace":"miq-demo","selfLink":"/api/v1/namespaces/miq-demo/pods/httpd-1-mjtpn","uid":"387e7760-a16f-11e8-ba7e-d094660d31fb","resourceVersion":"33820652","creationTimestamp":"2018-08-16T16:12:49Z","labels":{"app":"manageiq","deployment":"httpd-1","deploymentconfig":"httpd","name":"httpd"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"httpd","openshift.io/deployment.name":"httpd-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"anyuid"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"httpd-1","uid":"2d5ba646-a16f-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"httpd-config","configMap":{"name":"httpd-configs","defaultMode":420}},{"name":"httpd-auth-config","configMap":{"name":"httpd-auth-configs","defaultMode":420}},{"name":"miq-httpd-token-dt4hp","secret":{"secretName":"miq-httpd-token-dt4hp","defaultMode":420}}],"containers":[{"name":"httpd","image":"docker.io/manageiq/httpd:latest","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"APPLICATION_DOMAIN"},{"name":"HTTPD_AUTH_TYPE","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-type"}}},{"name":"HTTPD_AUTH_KERBEROS_REALMS","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-kerberos-realms"}}},{"name":"HTTPD_AUTH_OIDC_PROVIDER_METADATA_URL","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-oidc-provider-metadata-url","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_ID","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-oidc-client-id","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_SECRET","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-oidc-client-secret","optional":true}}}],"resources":{"limits":{"memory":"8Gi"},"requests":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"httpd-config","mountPath":"/etc/httpd/conf.d"},{"name":"httpd-auth-config","mountPath":"/etc/httpd/auth-conf.d"},{"name":"miq-httpd-token-dt4hp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["pidof","httpd"]},"initialDelaySeconds":15,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":80},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"lifecycle":{"postStart":{"exec":{"command":["/usr/bin/save-container-environment"]}}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"miq-httpd","serviceAccount":"miq-httpd","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c5"}},"imagePullSecrets":[{"name":"miq-httpd-dockercfg-swwmz"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:12:49Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:13:18Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:12:49Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.91","startTime":"2018-08-16T16:12:49Z","containerStatuses":[{"name":"httpd","state":{"running":{"startedAt":"2018-08-16T16:13:01Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/manageiq/httpd:latest","imageID":"docker-pullable://docker.io/manageiq/httpd@sha256:2185aac86a9f127316497a904fe317186fb8ab4676d45ec137974aa277aa3b73","containerID":"docker://c201b50fc31d140c92c18ac017362c21369379f551a9ab0f4b6a43d4e63b5318"}],"qosClass":"Burstable"}},{"metadata":{"name":"manageiq-0","generateName":"manageiq-","namespace":"miq-demo","selfLink":"/api/v1/namespaces/miq-demo/pods/manageiq-0","uid":"2d5a440d-a16f-11e8-ba7e-d094660d31fb","resourceVersion":"33821466","creationTimestamp":"2018-08-16T16:12:30Z","labels":{"controller-revision-hash":"manageiq-66c6784545","name":"manageiq","statefulset.kubernetes.io/pod-name":"manageiq-0"},"annotations":{"openshift.io/scc":"anyuid"},"ownerReferences":[{"apiVersion":"apps/v1beta1","kind":"StatefulSet","name":"manageiq","uid":"2cb088a4-a16f-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"manageiq-server","persistentVolumeClaim":{"claimName":"manageiq-server-manageiq-0"}},{"name":"miq-logs-config","configMap":{"name":"miq-logs-config","defaultMode":420}},{"name":"miq-orchestrator-token-nhnpj","secret":{"secretName":"miq-orchestrator-token-nhnpj","defaultMode":420}}],"containers":[{"name":"manageiq","image":"docker.io/manageiq/manageiq-pods:frontend-latest-hammer","ports":[{"containerPort":80,"protocol":"TCP"}],"env":[{"name":"ALLOW_INSECURE_SESSION","value":"true"},{"name":"APPLICATION_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"admin-password"}}},{"name":"DATABASE_REGION","value":"0"},{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"database-url"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"v2-key"}}}],"resources":{"limits":{"memory":"16Gi"},"requests":{"cpu":"1","memory":"6Gi"}},"volumeMounts":[{"name":"manageiq-server","mountPath":"/persistent"},{"name":"miq-logs-config","mountPath":"/etc/logrotate.d/miq_logs.conf","subPath":"miq_logs.conf"},{"name":"miq-orchestrator-token-nhnpj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":80},"initialDelaySeconds":200,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"lifecycle":{"preStop":{"exec":{"command":["/opt/manageiq/container-scripts/sync-pv-data"]}}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":90,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"miq-orchestrator","serviceAccount":"miq-orchestrator","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c5"}},"imagePullSecrets":[{"name":"miq-orchestrator-dockercfg-mbxjk"}],"hostname":"manageiq-0","subdomain":"manageiq","schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:12:30Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:16:17Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:12:30Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.88","startTime":"2018-08-16T16:12:30Z","containerStatuses":[{"name":"manageiq","state":{"running":{"startedAt":"2018-08-16T16:12:51Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/manageiq/manageiq-pods:frontend-latest-hammer","imageID":"docker-pullable://docker.io/manageiq/manageiq-pods@sha256:59570d6c80482eab806331dde34fc840fc48c408ce82b9929a3e99f42dca59d5","containerID":"docker://4f6c2d78c71776347ad0b569f8920552d59280ccf5d36268a8f3ad81bc09171d"}],"qosClass":"Burstable"}},{"metadata":{"name":"manageiq-backend-0","generateName":"manageiq-backend-","namespace":"miq-demo","selfLink":"/api/v1/namespaces/miq-demo/pods/manageiq-backend-0","uid":"bdcdabab-a171-11e8-ba7e-d094660d31fb","resourceVersion":"33825226","creationTimestamp":"2018-08-16T16:30:52Z","labels":{"controller-revision-hash":"manageiq-backend-864f967848","name":"manageiq-backend","statefulset.kubernetes.io/pod-name":"manageiq-backend-0"},"annotations":{"openshift.io/scc":"anyuid"},"ownerReferences":[{"apiVersion":"apps/v1beta1","kind":"StatefulSet","name":"manageiq-backend","uid":"2ced5de9-a16f-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"manageiq-server","persistentVolumeClaim":{"claimName":"manageiq-server-manageiq-backend-0"}},{"name":"miq-orchestrator-token-nhnpj","secret":{"secretName":"miq-orchestrator-token-nhnpj","defaultMode":420}}],"containers":[{"name":"manageiq","image":"docker.io/manageiq/manageiq-pods:backend-latest-hammer","env":[{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"database-url"}}},{"name":"MIQ_SERVER_DEFAULT_ROLES","value":"database_operations,event,reporting,scheduler,smartstate,ems_operations,ems_inventory,automate"},{"name":"FRONTEND_SERVICE_NAME","value":"manageiq"},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"v2-key"}}}],"resources":{"limits":{"memory":"16Gi"},"requests":{"cpu":"1","memory":"6Gi"}},"volumeMounts":[{"name":"manageiq-server","mountPath":"/persistent"},{"name":"miq-orchestrator-token-nhnpj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"lifecycle":{"preStop":{"exec":{"command":["/opt/manageiq/container-scripts/sync-pv-data"]}}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":90,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"miq-orchestrator","serviceAccount":"miq-orchestrator","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c5"}},"imagePullSecrets":[{"name":"miq-orchestrator-dockercfg-mbxjk"}],"hostname":"manageiq-backend-0","subdomain":"manageiq-backend","schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:30:52Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:30:56Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:30:52Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.95","startTime":"2018-08-16T16:30:52Z","containerStatuses":[{"name":"manageiq","state":{"running":{"startedAt":"2018-08-16T16:30:56Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/manageiq/manageiq-pods:backend-latest-hammer","imageID":"docker-pullable://docker.io/manageiq/manageiq-pods@sha256:69fdf3070f0401f8bf79e93bbf0e994608a91fbc37780e25e24eb0a061657af5","containerID":"docker://a8f807141382d32537271f3f04db0f18ed5a0a45023b2d34d4e131f29c9e7630"}],"qosClass":"Burstable"}},{"metadata":{"name":"memcached-1-w7xvj","generateName":"memcached-1-","namespace":"miq-demo","selfLink":"/api/v1/namespaces/miq-demo/pods/memcached-1-w7xvj","uid":"33015b79-a16f-11e8-ba7e-d094660d31fb","resourceVersion":"33820571","creationTimestamp":"2018-08-16T16:12:40Z","labels":{"app":"manageiq","deployment":"memcached-1","deploymentconfig":"memcached","name":"memcached"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"memcached","openshift.io/deployment.name":"memcached-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"memcached-1","uid":"2d0c268c-a16f-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"default-token-q22nj","secret":{"secretName":"default-token-q22nj","defaultMode":420}}],"containers":[{"name":"memcached","image":"docker.io/manageiq/memcached:latest","ports":[{"containerPort":11211,"protocol":"TCP"}],"env":[{"name":"MEMCACHED_MAX_MEMORY","value":"64"},{"name":"MEMCACHED_MAX_CONNECTIONS","value":"1024"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","value":"1m"}],"resources":{"limits":{"memory":"256Mi"},"requests":{"cpu":"200m","memory":"64Mi"}},"volumeMounts":[{"name":"default-token-q22nj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"tcpSocket":{"port":11211},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":11211},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000120000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c5"},"fsGroup":1000120000},"imagePullSecrets":[{"name":"default-dockercfg-p89n4"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:12:42Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:13:07Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:12:40Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.90","startTime":"2018-08-16T16:12:42Z","containerStatuses":[{"name":"memcached","state":{"running":{"startedAt":"2018-08-16T16:12:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/manageiq/memcached:latest","imageID":"docker-pullable://docker.io/manageiq/memcached@sha256:d7699ee38e4ee0d3daaa17a9beae28373db67dcbdc2ba4c5c495bd862616c535","containerID":"docker://7414eeccb223ee11ddcae3c5514445782c60dce363886356843fbe144d985b2e"}],"qosClass":"Burstable"}},{"metadata":{"name":"postgresql-1-lm62p","generateName":"postgresql-1-","namespace":"miq-demo","selfLink":"/api/v1/namespaces/miq-demo/pods/postgresql-1-lm62p","uid":"33e037e7-a16f-11e8-ba7e-d094660d31fb","resourceVersion":"33820623","creationTimestamp":"2018-08-16T16:12:41Z","labels":{"app":"manageiq","deployment":"postgresql-1","deploymentconfig":"postgresql","name":"postgresql"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"postgresql","openshift.io/deployment.name":"postgresql-1","openshift.io/generated-by":"OpenShiftNewApp","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"postgresql-1","uid":"2d11a101-a16f-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"miq-pgdb-volume","persistentVolumeClaim":{"claimName":"manageiq-postgresql"}},{"name":"miq-pg-configs","configMap":{"name":"postgresql-configs","defaultMode":420}},{"name":"default-token-q22nj","secret":{"secretName":"default-token-q22nj","defaultMode":420}}],"containers":[{"name":"postgresql","image":"docker.io/manageiq/postgresql:latest","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","value":"root"},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"manageiq-secrets","key":"pg-password"}}},{"name":"POSTGRESQL_DATABASE","value":"vmdb_production"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"1000"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"1GB"}],"resources":{"limits":{"memory":"8Gi"},"requests":{"cpu":"500m","memory":"4Gi"}},"volumeMounts":[{"name":"miq-pgdb-volume","mountPath":"/var/lib/pgsql/data"},{"name":"miq-pg-configs","mountPath":"/opt/app-root/src/postgresql-cfg/"},{"name":"default-token-q22nj","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":60,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000120000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c11,c5"},"fsGroup":1000120000},"imagePullSecrets":[{"name":"default-dockercfg-p89n4"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:12:42Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:13:14Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-16T16:12:41Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.89","startTime":"2018-08-16T16:12:42Z","containerStatuses":[{"name":"postgresql","state":{"running":{"startedAt":"2018-08-16T16:12:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"docker.io/manageiq/postgresql:latest","imageID":"docker-pullable://docker.io/manageiq/postgresql@sha256:2a33015e3f741c395630ecb0703a1ce32ed16f995b720bd9564696ab1e440de2","containerID":"docker://1cce866ce0bbd446f0f2e1d57379022bc9ee2dc6dd98e444bbb0f180a28f4503"}],"qosClass":"Burstable"}},{"metadata":{"name":"asb-1-8bknn","generateName":"asb-1-","namespace":"openshift-ansible-service-broker","selfLink":"/api/v1/namespaces/openshift-ansible-service-broker/pods/asb-1-8bknn","uid":"fd1679ce-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1692309","creationTimestamp":"2018-05-16T20:52:04Z","labels":{"app":"openshift-ansible-service-broker","deployment":"asb-1","deploymentconfig":"asb","service":"asb"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"asb","openshift.io/deployment.name":"asb-1","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"asb-1","uid":"65ffe3df-594a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"config-volume","configMap":{"name":"broker-config","items":[{"key":"broker-config","path":"config.yaml"}],"defaultMode":420}},{"name":"asb-tls","secret":{"secretName":"asb-tls","defaultMode":420}},{"name":"asb-etcd-auth","secret":{"secretName":"broker-etcd-auth-secret","defaultMode":420}},{"name":"asb-token-c9hgf","secret":{"secretName":"asb-token-c9hgf","defaultMode":420}}],"containers":[{"name":"asb","image":"registry.access.redhat.com/openshift3/ose-ansible-service-broker:v3.9.25","ports":[{"containerPort":1338,"protocol":"TCP"}],"env":[{"name":"BROKER_CONFIG","value":"/etc/ansible-service-broker/config.yaml"},{"name":"HTTP_PROXY"},{"name":"HTTPS_PROXY"},{"name":"NO_PROXY"}],"resources":{},"volumeMounts":[{"name":"config-volume","mountPath":"/etc/ansible-service-broker"},{"name":"asb-tls","mountPath":"/etc/tls/private"},{"name":"asb-etcd-auth","mountPath":"/var/run/asb-etcd-auth"},{"name":"asb-token-c9hgf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"httpGet":{"path":"/healthz","port":1338,"scheme":"HTTPS"},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/healthz","port":1338,"scheme":"HTTPS"},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/tmp/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000100000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"asb","serviceAccount":"asb","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c10,c5"},"fsGroup":1000100000},"imagePullSecrets":[{"name":"asb-dockercfg-jfmmf"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:54:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:55:21Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:54:38Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.12","startTime":"2018-05-16T20:54:45Z","containerStatuses":[{"name":"asb","state":{"running":{"startedAt":"2018-05-16T20:55:05Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-ansible-service-broker:v3.9.25","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-ansible-service-broker@sha256:9900039d349ed22f484640053b45b4b8ca1cf08fa088a50a92491c9ed601a62c","containerID":"docker://46bd06100c1d265e378481dc3145170c08067261bc4a751d677cdeecf63dd259"}],"qosClass":"BestEffort"}},{"metadata":{"name":"asb-etcd-1-pdkzp","generateName":"asb-etcd-1-","namespace":"openshift-ansible-service-broker","selfLink":"/api/v1/namespaces/openshift-ansible-service-broker/pods/asb-etcd-1-pdkzp","uid":"fdffac44-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1692196","creationTimestamp":"2018-05-16T20:52:05Z","labels":{"app":"etcd","deployment":"asb-etcd-1","deploymentconfig":"asb-etcd","service":"asb-etcd"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"asb-etcd","openshift.io/deployment.name":"asb-etcd-1","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"asb-etcd-1","uid":"66ece02d-594a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"etcd","persistentVolumeClaim":{"claimName":"etcd"}},{"name":"etcd-tls","secret":{"secretName":"etcd-tls","defaultMode":420}},{"name":"etcd-auth","secret":{"secretName":"etcd-auth-secret","defaultMode":420}},{"name":"asb-token-c9hgf","secret":{"secretName":"asb-token-c9hgf","defaultMode":420}}],"containers":[{"name":"etcd","image":"registry.access.redhat.com/rhel7/etcd:latest","args":["/bin/etcd","--data-dir=/data","--listen-client-urls=https://0.0.0.0:2379","--advertise-client-urls=https://asb-etcd.openshift-ansible-service-broker.svc:2379","--client-cert-auth","--trusted-ca-file=/var/run/etcd-auth-secret/ca.crt","--cert-file=/etc/tls/private/tls.crt","--key-file=/etc/tls/private/tls.key"],"workingDir":"/etcd","ports":[{"containerPort":2379,"protocol":"TCP"}],"env":[{"name":"ETCDCTL_API","value":"3"}],"resources":{},"volumeMounts":[{"name":"etcd","mountPath":"/data"},{"name":"etcd-tls","mountPath":"/etc/tls/private"},{"name":"etcd-auth","mountPath":"/var/run/etcd-auth-secret"},{"name":"asb-token-c9hgf","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/tmp/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000100000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"asb","serviceAccount":"asb","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c10,c5"},"fsGroup":1000100000},"imagePullSecrets":[{"name":"asb-dockercfg-jfmmf"}],"schedulerName":"default-scheduler"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:54:45Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:54:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:54:39Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.4","startTime":"2018-05-16T20:54:45Z","containerStatuses":[{"name":"etcd","state":{"running":{"startedAt":"2018-05-16T20:54:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.access.redhat.com/rhel7/etcd:latest","imageID":"docker-pullable://registry.access.redhat.com/rhel7/etcd@sha256:128649895440ef04261b5198f3b558fd368be62123114fa45e5cacd589d18c67","containerID":"docker://800ef4472b170d7eb5e98ef34147071dd88829f801435f297760d08d8a2b3b67"}],"qosClass":"BestEffort"}},{"metadata":{"name":"hawkular-cassandra-1-c645s","generateName":"hawkular-cassandra-1-","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/hawkular-cassandra-1-c645s","uid":"fe1e3497-594a-11e8-ba7e-d094660d31fb","resourceVersion":"2099838","creationTimestamp":"2018-05-16T20:52:06Z","labels":{"metrics-infra":"hawkular-cassandra","name":"hawkular-cassandra-1","type":"hawkular-cassandra"},"annotations":{"openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"hawkular-cassandra-1","uid":"e1605ede-0d16-11e8-be93-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"cassandra-data","emptyDir":{}},{"name":"hawkular-cassandra-certs","secret":{"secretName":"hawkular-cassandra-certs","defaultMode":420}},{"name":"cassandra-token-z5fq8","secret":{"secretName":"cassandra-token-z5fq8","defaultMode":420}}],"containers":[{"name":"hawkular-cassandra-1","image":"registry.access.redhat.com/openshift3/metrics-cassandra:v3.6","command":["/opt/apache-cassandra/bin/cassandra-docker.sh","--cluster_name=hawkular-metrics","--data_volume=/cassandra_data","--internode_encryption=all","--require_node_auth=true","--enable_client_encryption=true","--require_client_auth=true"],"ports":[{"name":"cql-port","containerPort":9042,"protocol":"TCP"},{"name":"thift-port","containerPort":9160,"protocol":"TCP"},{"name":"tcp-port","containerPort":7000,"protocol":"TCP"},{"name":"ssl-port","containerPort":7001,"protocol":"TCP"}],"env":[{"name":"CASSANDRA_MASTER","value":"true"},{"name":"CASSANDRA_DATA_VOLUME","value":"/cassandra_data"},{"name":"JVM_OPTS","value":"-Dcassandra.commitlog.ignorereplayerrors=true"},{"name":"TRUSTSTORE_NODES_AUTHORITIES","value":"/hawkular-cassandra-certs/tls.peer.truststore.crt"},{"name":"TRUSTSTORE_CLIENT_AUTHORITIES","value":"/hawkular-cassandra-certs/tls.client.truststore.crt"},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"MEMORY_LIMIT","valueFrom":{"resourceFieldRef":{"resource":"limits.memory","divisor":"0"}}},{"name":"CPU_LIMIT","valueFrom":{"resourceFieldRef":{"resource":"limits.cpu","divisor":"1m"}}}],"resources":{"limits":{"memory":"2G"},"requests":{"memory":"1G"}},"volumeMounts":[{"name":"cassandra-data","mountPath":"/cassandra_data"},{"name":"hawkular-cassandra-certs","mountPath":"/hawkular-cassandra-certs"},{"name":"cassandra-token-z5fq8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"exec":{"command":["/opt/apache-cassandra/bin/cassandra-docker-ready.sh"]},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"lifecycle":{"postStart":{"exec":{"command":["/opt/apache-cassandra/bin/cassandra-poststart.sh"]}},"preStop":{"exec":{"command":["/opt/apache-cassandra/bin/cassandra-prestop.sh"]}}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000020000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"cassandra","serviceAccount":"cassandra","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"},"supplementalGroups":[65534],"fsGroup":1000020000},"imagePullSecrets":[{"name":"cassandra-dockercfg-sx0ht"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:06Z"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-17T19:23:06Z","reason":"ContainersNotReady","message":"containers
        with unready status: [hawkular-cassandra-1]"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:06Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.16","startTime":"2018-05-16T20:52:06Z","containerStatuses":[{"name":"hawkular-cassandra-1","state":{"running":{"startedAt":"2018-05-16T20:52:27Z"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/metrics-cassandra:v3.6","imageID":"docker-pullable://registry.access.redhat.com/openshift3/metrics-cassandra@sha256:fa974fc0961b10a2a8ce05876ae33b53a4b0ec3dbcbe074e3d324254dac375b6","containerID":"docker://d763c83f641a8748bc7ff347882e5f1882303dcdc9cb1e35c4ee920b4af12158"}],"qosClass":"Burstable"}},{"metadata":{"name":"hawkular-metrics-qnszl","generateName":"hawkular-metrics-","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/hawkular-metrics-qnszl","uid":"fe3cc0d5-594a-11e8-ba7e-d094660d31fb","resourceVersion":"36309574","creationTimestamp":"2018-05-16T20:52:06Z","labels":{"metrics-infra":"hawkular-metrics","name":"hawkular-metrics"},"annotations":{"openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"hawkular-metrics","uid":"df7040c2-0d16-11e8-be93-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"hawkular-metrics-certs","secret":{"secretName":"hawkular-metrics-certs","defaultMode":420}},{"name":"hawkular-metrics-account","secret":{"secretName":"hawkular-metrics-account","defaultMode":420}},{"name":"hawkular-token-pns5r","secret":{"secretName":"hawkular-token-pns5r","defaultMode":420}}],"containers":[{"name":"hawkular-metrics","image":"registry.access.redhat.com/openshift3/metrics-hawkular-metrics:v3.6","command":["/opt/hawkular/scripts/hawkular-metrics-wrapper.sh","-b","0.0.0.0","-Dhawkular.metrics.cassandra.nodes=hawkular-cassandra","-Dhawkular.metrics.cassandra.use-ssl","-Dhawkular.metrics.openshift.auth-methods=openshift-oauth,htpasswd","-Dhawkular.metrics.openshift.htpasswd-file=/hawkular-account/hawkular-metrics.htpasswd","-Dhawkular.metrics.allowed-cors-access-control-allow-headers=authorization","-Dhawkular.metrics.default-ttl=7","-Dhawkular.metrics.admin-tenant=_hawkular_admin","-Dhawkular-alerts.cassandra-nodes=hawkular-cassandra","-Dhawkular-alerts.cassandra-use-ssl","-Dhawkular.alerts.openshift.auth-methods=openshift-oauth,htpasswd","-Dhawkular.alerts.openshift.htpasswd-file=/hawkular-account/hawkular-metrics.htpasswd","-Dhawkular.alerts.allowed-cors-access-control-allow-headers=authorization","-Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true","-Dorg.apache.catalina.connector.CoyoteAdapter.ALLOW_BACKSLASH=true","-Dcom.datastax.driver.FORCE_NIO=true","-DKUBERNETES_MASTER_URL=https://kubernetes.default.svc","-DUSER_WRITE_ACCESS=False"],"ports":[{"name":"http-endpoint","containerPort":8080,"protocol":"TCP"},{"name":"https-endpoint","containerPort":8443,"protocol":"TCP"},{"name":"ping","containerPort":8888,"protocol":"TCP"}],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"MASTER_URL","value":"https://kubernetes.default.svc"},{"name":"JGROUPS_PASSWORD","value":"T40hApizfcS58icIR"},{"name":"TRUSTSTORE_AUTHORITIES","value":"/hawkular-metrics-certs/tls.truststore.crt"},{"name":"OPENSHIFT_KUBE_PING_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"OPENSHIFT_KUBE_PING_LABELS","value":"metrics-infra=hawkular-metrics,name=hawkular-metrics"},{"name":"STARTUP_TIMEOUT","value":"500"}],"resources":{"limits":{"memory":"2500M"},"requests":{"memory":"1500M"}},"volumeMounts":[{"name":"hawkular-metrics-certs","mountPath":"/hawkular-metrics-certs"},{"name":"hawkular-metrics-account","mountPath":"/hawkular-account"},{"name":"hawkular-token-pns5r","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["/opt/hawkular/scripts/hawkular-metrics-liveness.py"]},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/opt/hawkular/scripts/hawkular-metrics-readiness.py"]},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000020000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"hawkular","serviceAccount":"hawkular","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"},"fsGroup":1000020000},"imagePullSecrets":[{"name":"hawkular-dockercfg-x9kqx"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:06Z"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-18T08:05:17Z","reason":"ContainersNotReady","message":"containers
        with unready status: [hawkular-metrics]"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:06Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.17","startTime":"2018-05-16T20:52:06Z","containerStatuses":[{"name":"hawkular-metrics","state":{"running":{"startedAt":"2018-08-23T06:19:52Z"}},"lastState":{"terminated":{"exitCode":1,"reason":"Error","startedAt":"2018-08-23T06:10:03Z","finishedAt":"2018-08-23T06:16:57Z","containerID":"docker://61d4a7dbe387f42a8e03429aff16672fb24351a6b3995b696c298294c725655e"}},"ready":false,"restartCount":16931,"image":"registry.access.redhat.com/openshift3/metrics-hawkular-metrics:v3.6","imageID":"docker-pullable://registry.access.redhat.com/openshift3/metrics-hawkular-metrics@sha256:a8f81174073b3bc72b632c04483806ba898fc358e5d4790cb7daa6015d3c1cd7","containerID":"docker://a3616a844ab518403a3e287e8196e302c1ae7c60884a377a6dd134d9697c03a5"}],"qosClass":"Burstable"}},{"metadata":{"name":"heapster-qhbrb","generateName":"heapster-","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/heapster-qhbrb","uid":"fd165350-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1691733","creationTimestamp":"2018-05-16T20:52:04Z","labels":{"metrics-infra":"heapster","name":"heapster"},"annotations":{"openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"heapster","uid":"dab96aef-0d16-11e8-be93-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"heapster-secrets","secret":{"secretName":"heapster-secrets","defaultMode":420}},{"name":"heapster-certs","secret":{"secretName":"heapster-certs","defaultMode":420}},{"name":"hawkular-metrics-certs","secret":{"secretName":"hawkular-metrics-certs","defaultMode":420}},{"name":"hawkular-metrics-account","secret":{"secretName":"hawkular-metrics-account","defaultMode":420}},{"name":"heapster-token-6l87r","secret":{"secretName":"heapster-token-6l87r","defaultMode":420}}],"containers":[{"name":"heapster","image":"registry.access.redhat.com/openshift3/metrics-heapster:v3.6","command":["heapster-wrapper.sh","--wrapper.allowed_users_file=/secrets/heapster.allowed-users","--source=kubernetes.summary_api:${MASTER_URL}?useServiceAccount=true\u0026kubeletHttps=true\u0026kubeletPort=10250","--tls_cert=/heapster-certs/tls.crt","--tls_key=/heapster-certs/tls.key","--tls_client_ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt","--allowed_users=%allowed_users%","--metric_resolution=30s","--wrapper.username_file=/hawkular-account/hawkular-metrics.username","--wrapper.password_file=/hawkular-account/hawkular-metrics.password","--wrapper.endpoint_check=https://hawkular-metrics:443/hawkular/metrics/status","--sink=hawkular:https://hawkular-metrics:443?tenant=_system\u0026labelToTenant=pod_namespace\u0026labelNodeId=nodename\u0026caCert=/hawkular-metrics-certs/tls.crt\u0026user=%username%\u0026pass=%password%\u0026filter=label(container_name:^system.slice.*|^user.slice)"],"ports":[{"name":"http-endpoint","containerPort":8082,"protocol":"TCP"}],"env":[{"name":"STARTUP_TIMEOUT","value":"500"}],"resources":{"limits":{"memory":"3750M"},"requests":{"memory":"937500k"}},"volumeMounts":[{"name":"heapster-secrets","mountPath":"/secrets"},{"name":"heapster-certs","mountPath":"/heapster-certs"},{"name":"hawkular-metrics-certs","mountPath":"/hawkular-metrics-certs"},{"name":"hawkular-metrics-account","mountPath":"/hawkular-account"},{"name":"heapster-token-6l87r","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"exec":{"command":["/opt/heapster-readiness.sh"]},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000020000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"heapster","serviceAccount":"heapster","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"},"fsGroup":1000020000},"imagePullSecrets":[{"name":"heapster-dockercfg-xqj9j"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:04Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:53:14Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:52:04Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.14","startTime":"2018-05-16T20:52:04Z","containerStatuses":[{"name":"heapster","state":{"running":{"startedAt":"2018-05-16T20:52:20Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.access.redhat.com/openshift3/metrics-heapster:v3.6","imageID":"docker-pullable://registry.access.redhat.com/openshift3/metrics-heapster@sha256:1dee9d455a021b87c415c53e9b0db6d123c8d8453001391b513a8db76de8f120","containerID":"docker://7847fa9d3b3ce564eb9b103ec3d15167d5fa1815ea973439abb290b7fd000937"}],"qosClass":"Burstable"}},{"metadata":{"name":"recycler-for-pv0007","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0007","uid":"58eb21bb-64fb-11e8-ba7e-d094660d31fb","resourceVersion":"7652349","creationTimestamp":"2018-05-31T17:52:12Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0007"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-31T17:52:12Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-31T17:52:21Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-31T17:52:12Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.48","startTime":"2018-05-31T17:52:12Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-05-31T17:52:17Z","finishedAt":"2018-05-31T17:52:20Z","containerID":"docker://045ca52d681ed418ca54e7f02ca1c57e2d6181600f362c0aa3fc7b5d6dc84c35"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://045ca52d681ed418ca54e7f02ca1c57e2d6181600f362c0aa3fc7b5d6dc84c35"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0008","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0008","uid":"4f8cfbec-6e82-11e8-ba7e-d094660d31fb","resourceVersion":"11877191","creationTimestamp":"2018-06-12T20:50:59Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0008"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-12T20:50:59Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-06-12T20:51:14Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-12T20:50:59Z"}],"hostIP":"10.8.96.55","podIP":"10.129.1.25","startTime":"2018-06-12T20:50:59Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-06-12T20:51:04Z","finishedAt":"2018-06-12T20:51:13Z","containerID":"docker://156404af0962710875c8553e7928ab5106114513ed8dcf31139c931b1d5f4649"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://156404af0962710875c8553e7928ab5106114513ed8dcf31139c931b1d5f4649"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0012","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0012","uid":"4faa79aa-6e82-11e8-ba7e-d094660d31fb","resourceVersion":"11877122","creationTimestamp":"2018-06-12T20:50:59Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0012"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-12T20:50:59Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-06-12T20:51:07Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-12T20:50:59Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.57","startTime":"2018-06-12T20:50:59Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-06-12T20:51:03Z","finishedAt":"2018-06-12T20:51:07Z","containerID":"docker://306bf18150cf007d2fff6cd5fbd2152ccb3fa6bd64fcad43389e138494cf371a"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://306bf18150cf007d2fff6cd5fbd2152ccb3fa6bd64fcad43389e138494cf371a"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0021","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0021","uid":"23db66ae-6510-11e8-ba7e-d094660d31fb","resourceVersion":"7687725","creationTimestamp":"2018-05-31T20:21:03Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0021"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-31T20:21:03Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-31T20:21:09Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-31T20:21:03Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.199","startTime":"2018-05-31T20:21:03Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-05-31T20:21:06Z","finishedAt":"2018-05-31T20:21:09Z","containerID":"docker://8f3546330e62e43e2d82d52e9dcf3260e1338cdbc51d215a833702dd5e7c0466"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://8f3546330e62e43e2d82d52e9dcf3260e1338cdbc51d215a833702dd5e7c0466"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0032","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0032","uid":"ff996b82-9f39-11e8-ba7e-d094660d31fb","resourceVersion":"32781342","creationTimestamp":"2018-08-13T20:46:48Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0032"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:46:48Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:46:54Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-08-13T20:46:48Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.76","startTime":"2018-08-13T20:46:48Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-08-13T20:46:51Z","finishedAt":"2018-08-13T20:46:53Z","containerID":"docker://131b72dc5f2c895ae21d626c03182b656244fffa9968560731e43d069df1207a"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://131b72dc5f2c895ae21d626c03182b656244fffa9968560731e43d069df1207a"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0044","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0044","uid":"394820bf-6831-11e8-ba7e-d094660d31fb","resourceVersion":"9138437","creationTimestamp":"2018-06-04T19:55:25Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0044"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-04T19:55:25Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-06-04T19:55:32Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-04T19:55:25Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.53","startTime":"2018-06-04T19:55:25Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-06-04T19:55:29Z","finishedAt":"2018-06-04T19:55:31Z","containerID":"docker://4e79a79afcb5ac28c0b5f6c4353762653a67d78ec370247ae03da868a40a181e"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://4e79a79afcb5ac28c0b5f6c4353762653a67d78ec370247ae03da868a40a181e"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0049","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0049","uid":"0d15933a-6058-11e8-ba7e-d094660d31fb","resourceVersion":"5639761","creationTimestamp":"2018-05-25T20:13:12Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0049"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-25T20:13:12Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-25T20:13:20Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-25T20:13:12Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.43","startTime":"2018-05-25T20:13:12Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-05-25T20:13:16Z","finishedAt":"2018-05-25T20:13:19Z","containerID":"docker://b41542743639ee0b1c6bb0fc22ea2e3aa43ed1f9f33ad155b720fde1059a253a"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://b41542743639ee0b1c6bb0fc22ea2e3aa43ed1f9f33ad155b720fde1059a253a"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0052","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0052","uid":"5fe95fbb-6fe9-11e8-ba7e-d094660d31fb","resourceVersion":"12458316","creationTimestamp":"2018-06-14T15:41:16Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0052"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-14T15:41:16Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-06-14T15:41:22Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-14T15:41:16Z"}],"hostIP":"10.8.96.55","podIP":"10.129.1.77","startTime":"2018-06-14T15:41:16Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-06-14T15:41:19Z","finishedAt":"2018-06-14T15:41:21Z","containerID":"docker://7243f7a274de1e0f556e3d732d28b531e870355532283c530304272f6f8fe556"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://7243f7a274de1e0f556e3d732d28b531e870355532283c530304272f6f8fe556"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0061","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0061","uid":"7724da32-700b-11e8-ba7e-d094660d31fb","resourceVersion":"12516489","creationTimestamp":"2018-06-14T19:45:18Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0061"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-14T19:45:18Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-06-14T19:45:25Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-14T19:45:18Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.63","startTime":"2018-06-14T19:45:18Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-06-14T19:45:21Z","finishedAt":"2018-06-14T19:45:24Z","containerID":"docker://6114498a5ba81d6a14c5ebb33dce28397d2dbd16c57be33a9e442311fc8cb75a"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://6114498a5ba81d6a14c5ebb33dce28397d2dbd16c57be33a9e442311fc8cb75a"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0065","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0065","uid":"9ad84f4c-7325-11e8-ba7e-d094660d31fb","resourceVersion":"13861133","creationTimestamp":"2018-06-18T18:29:58Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0065"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-18T18:29:58Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-06-18T18:30:04Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-06-18T18:29:58Z"}],"hostIP":"10.8.96.55","podIP":"10.129.1.198","startTime":"2018-06-18T18:29:58Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-06-18T18:30:01Z","finishedAt":"2018-06-18T18:30:03Z","containerID":"docker://8b0481e17079951090bf2e94c9f2381c827ad427de3cbf5093cff313564a152b"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://8b0481e17079951090bf2e94c9f2381c827ad427de3cbf5093cff313564a152b"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0075","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0075","uid":"23d7da29-6510-11e8-ba7e-d094660d31fb","resourceVersion":"7687731","creationTimestamp":"2018-05-31T20:21:03Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0075"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-31T20:21:03Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-31T20:21:10Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-31T20:21:03Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.51","startTime":"2018-05-31T20:21:03Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-05-31T20:21:06Z","finishedAt":"2018-05-31T20:21:10Z","containerID":"docker://6a8eeeef7569996f96abc704063bf76819961d8da5637f0f79fb979c40b83675"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://6a8eeeef7569996f96abc704063bf76819961d8da5637f0f79fb979c40b83675"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0089","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0089","uid":"bfa5eebd-605d-11e8-ba7e-d094660d31fb","resourceVersion":"5649247","creationTimestamp":"2018-05-25T20:53:59Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0089"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-25T20:53:59Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-25T20:54:08Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-25T20:53:59Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.174","startTime":"2018-05-25T20:53:59Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-05-25T20:54:04Z","finishedAt":"2018-05-25T20:54:08Z","containerID":"docker://c4c93cb661c10050840327b6e97bb4724153a8ea8f61652bb91398fdfe1fb404"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://c4c93cb661c10050840327b6e97bb4724153a8ea8f61652bb91398fdfe1fb404"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0094","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0094","uid":"92a3897e-605c-11e8-ba7e-d094660d31fb","resourceVersion":"5646555","creationTimestamp":"2018-05-25T20:45:34Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0094"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-25T20:45:34Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-25T20:45:42Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-25T20:45:34Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.144","startTime":"2018-05-25T20:45:34Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-05-25T20:45:38Z","finishedAt":"2018-05-25T20:45:41Z","containerID":"docker://a0951ccafc403d0537385ea54cddb239cec6206b2f947d47989591920e288779"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://a0951ccafc403d0537385ea54cddb239cec6206b2f947d47989591920e288779"}],"qosClass":"BestEffort"}},{"metadata":{"name":"recycler-for-pv0096","namespace":"openshift-infra","selfLink":"/api/v1/namespaces/openshift-infra/pods/recycler-for-pv0096","uid":"00b486ea-6050-11e8-ba7e-d094660d31fb","resourceVersion":"5626383","creationTimestamp":"2018-05-25T19:15:36Z","annotations":{"openshift.io/scc":"hostmount-anyuid"}},"spec":{"volumes":[{"name":"vol","nfs":{"server":"host.example.com","path":"/exports/pvs/pv0096"}},{"name":"pv-recycler-controller-token-n4m8c","secret":{"secretName":"pv-recycler-controller-token-n4m8c","defaultMode":420}}],"containers":[{"name":"pv-recycler","image":"openshift3/ose-recycler:v1.9.1","command":["/usr/bin/openshift-recycle"],"args":["/scrub"],"resources":{},"volumeMounts":[{"name":"vol","mountPath":"/scrub"},{"name":"pv-recycler-controller-token-n4m8c","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["MKNOD"]},"runAsUser":0}}],"restartPolicy":"Never","terminationGracePeriodSeconds":30,"activeDeadlineSeconds":3000,"dnsPolicy":"ClusterFirst","serviceAccountName":"pv-recycler-controller","serviceAccount":"pv-recycler-controller","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c5,c0"}},"imagePullSecrets":[{"name":"pv-recycler-controller-dockercfg-8hg75"}],"schedulerName":"default-scheduler"},"status":{"phase":"Succeeded","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-25T19:15:36Z","reason":"PodCompleted"},{"type":"Ready","status":"False","lastProbeTime":null,"lastTransitionTime":"2018-05-25T19:15:45Z","reason":"PodCompleted"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-25T19:15:36Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.41","startTime":"2018-05-25T19:15:36Z","containerStatuses":[{"name":"pv-recycler","state":{"terminated":{"exitCode":0,"reason":"Completed","startedAt":"2018-05-25T19:15:43Z","finishedAt":"2018-05-25T19:15:44Z","containerID":"docker://f14dcdacef6bf92e83f6857d8f1a99315293acf822aef63905355454a6c20073"}},"lastState":{},"ready":false,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-recycler:v1.9.1","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-recycler@sha256:cc273ca8a17b16f4a1ed1992acb131513a52504a5cd887faddd637a73166e6bd","containerID":"docker://f14dcdacef6bf92e83f6857d8f1a99315293acf822aef63905355454a6c20073"}],"qosClass":"BestEffort"}},{"metadata":{"name":"cloudforms-0","generateName":"cloudforms-","namespace":"openshift-management","selfLink":"/api/v1/namespaces/openshift-management/pods/cloudforms-0","uid":"ac46622b-5ea1-11e8-ba7e-d094660d31fb","resourceVersion":"4843710","creationTimestamp":"2018-05-23T15:55:10Z","labels":{"controller-revision-hash":"cloudforms-88cfb8d8c","name":"cloudforms","statefulset.kubernetes.io/pod-name":"cloudforms-0"},"annotations":{"openshift.io/scc":"anyuid"},"ownerReferences":[{"apiVersion":"apps/v1beta1","kind":"StatefulSet","name":"cloudforms","uid":"ac4337f8-5ea1-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"cloudforms-server","persistentVolumeClaim":{"claimName":"cloudforms-server-cloudforms-0"}},{"name":"cfme-orchestrator-token-sg47p","secret":{"secretName":"cfme-orchestrator-token-sg47p","defaultMode":420}}],"containers":[{"name":"cloudforms","image":"registry.access.redhat.com/cloudforms46/cfme-openshift-app-ui:latest","ports":[{"containerPort":80,"protocol":"TCP"}],"env":[{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}},{"name":"APPLICATION_INIT_DELAY","value":"15"},{"name":"DATABASE_REGION","value":"0"},{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"name":"cloudforms-secrets","key":"database-url"}}},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"name":"cloudforms-secrets","key":"v2-key"}}},{"name":"APPLICATION_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"name":"cloudforms-secrets","key":"admin-password"}}},{"name":"ANSIBLE_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"name":"ansible-secrets","key":"admin-password"}}}],"resources":{"limits":{"memory":"16Gi"},"requests":{"cpu":"1","memory":"6Gi"}},"volumeMounts":[{"name":"cloudforms-server","mountPath":"/persistent"},{"name":"cfme-orchestrator-token-sg47p","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":80},"initialDelaySeconds":200,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"lifecycle":{"preStop":{"exec":{"command":["/opt/rh/cfme-container-scripts/sync-pv-data"]}}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":90,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"cfme-orchestrator","serviceAccount":"cfme-orchestrator","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c5"}},"imagePullSecrets":[{"name":"cfme-orchestrator-dockercfg-56q8w"}],"hostname":"cloudforms-0","subdomain":"cloudforms","schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:55:10Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:59:29Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:55:10Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.87","startTime":"2018-05-23T15:55:10Z","containerStatuses":[{"name":"cloudforms","state":{"running":{"startedAt":"2018-05-23T15:55:23Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms46/cfme-openshift-app-ui:latest","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms46/cfme-openshift-app-ui@sha256:154457c2dd7fa78578fdcd0d756184460334addc8b7fc6a123577bce0585f1f8","containerID":"docker://bb783d3ccd019679a54ffa41f02bc017f05a2404a01d7a3921bb544ba0717d42"}],"qosClass":"Burstable"}},{"metadata":{"name":"httpd-1-s9rl9","generateName":"httpd-1-","namespace":"openshift-management","selfLink":"/api/v1/namespaces/openshift-management/pods/httpd-1-s9rl9","uid":"c21334df-5ea1-11e8-ba7e-d094660d31fb","resourceVersion":"4843246","creationTimestamp":"2018-05-23T15:55:47Z","labels":{"deployment":"httpd-1","deploymentconfig":"httpd","name":"httpd"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"httpd","openshift.io/deployment.name":"httpd-1","openshift.io/scc":"anyuid"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"httpd-1","uid":"aefb3d55-5ea1-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"httpd-config","configMap":{"name":"httpd-configs","defaultMode":420}},{"name":"httpd-auth-config","configMap":{"name":"httpd-auth-configs","defaultMode":420}},{"name":"cfme-httpd-token-9rhht","secret":{"secretName":"cfme-httpd-token-9rhht","defaultMode":420}}],"containers":[{"name":"httpd","image":"registry.access.redhat.com/cloudforms46/cfme-openshift-httpd:latest","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":8080,"protocol":"TCP"}],"env":[{"name":"HTTPD_AUTH_TYPE","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-type"}}},{"name":"HTTPD_AUTH_KERBEROS_REALMS","valueFrom":{"configMapKeyRef":{"name":"httpd-auth-configs","key":"auth-kerberos-realms"}}}],"resources":{"limits":{"memory":"8Gi"},"requests":{"cpu":"500m","memory":"512Mi"}},"volumeMounts":[{"name":"httpd-config","mountPath":"/etc/httpd/conf.d"},{"name":"httpd-auth-config","mountPath":"/etc/httpd/auth-conf.d"},{"name":"cfme-httpd-token-9rhht","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["pidof","httpd"]},"initialDelaySeconds":15,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":80},"initialDelaySeconds":10,"timeoutSeconds":3,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"lifecycle":{"postStart":{"exec":{"command":["/usr/bin/save-container-environment"]}}},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["MKNOD"]}}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"cfme-httpd","serviceAccount":"cfme-httpd","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c5"}},"imagePullSecrets":[{"name":"cfme-httpd-dockercfg-j87lf"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:55:47Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:56:28Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:55:47Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.94","startTime":"2018-05-23T15:55:47Z","containerStatuses":[{"name":"httpd","state":{"running":{"startedAt":"2018-05-23T15:56:10Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms46/cfme-openshift-httpd:latest","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms46/cfme-openshift-httpd@sha256:8774f2c9b861909134946c92fa9745db8ecc6efa1b4192add083f71ada2f55df","containerID":"docker://c7ba44331ae27f4c4421530a9b4a8131cd86a90f6c1f5035b96e87aa5ab8d029"}],"qosClass":"Burstable"}},{"metadata":{"name":"memcached-1-p5t58","generateName":"memcached-1-","namespace":"openshift-management","selfLink":"/api/v1/namespaces/openshift-management/pods/memcached-1-p5t58","uid":"b2089581-5ea1-11e8-ba7e-d094660d31fb","resourceVersion":"4843158","creationTimestamp":"2018-05-23T15:55:20Z","labels":{"deployment":"memcached-1","deploymentconfig":"memcached","name":"memcached"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"memcached","openshift.io/deployment.name":"memcached-1","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"memcached-1","uid":"ad490d45-5ea1-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"default-token-kp8bt","secret":{"secretName":"default-token-kp8bt","defaultMode":420}}],"containers":[{"name":"memcached","image":"registry.access.redhat.com/cloudforms46/cfme-openshift-memcached:latest","ports":[{"containerPort":11211,"protocol":"TCP"}],"env":[{"name":"MEMCACHED_MAX_MEMORY","value":"64"},{"name":"MEMCACHED_MAX_CONNECTIONS","value":"1024"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","value":"1m"}],"resources":{"limits":{"memory":"256Mi"},"requests":{"cpu":"200m","memory":"64Mi"}},"volumeMounts":[{"name":"default-token-kp8bt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"tcpSocket":{"port":11211},"initialDelaySeconds":30,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"tcpSocket":{"port":11211},"initialDelaySeconds":5,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000250000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c5"},"fsGroup":1000250000},"imagePullSecrets":[{"name":"default-dockercfg-dprr7"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:55:22Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:56:09Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:55:20Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.93","startTime":"2018-05-23T15:55:22Z","containerStatuses":[{"name":"memcached","state":{"running":{"startedAt":"2018-05-23T15:56:02Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms46/cfme-openshift-memcached:latest","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms46/cfme-openshift-memcached@sha256:2cf8124540c766feff3c32c7544236d70344b57284d766cf5afea03974b8540e","containerID":"docker://e08583ca05486e44b8c3a3856b13d35205d780ae77e0605036ae103be4d1d106"}],"qosClass":"Burstable"}},{"metadata":{"name":"postgresql-1-9pwjk","generateName":"postgresql-1-","namespace":"openshift-management","selfLink":"/api/v1/namespaces/openshift-management/pods/postgresql-1-9pwjk","uid":"b20891d4-5ea1-11e8-ba7e-d094660d31fb","resourceVersion":"4843210","creationTimestamp":"2018-05-23T15:55:20Z","labels":{"deployment":"postgresql-1","deploymentconfig":"postgresql","name":"postgresql"},"annotations":{"openshift.io/deployment-config.latest-version":"1","openshift.io/deployment-config.name":"postgresql","openshift.io/deployment.name":"postgresql-1","openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"v1","kind":"ReplicationController","name":"postgresql-1","uid":"adc30cb8-5ea1-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"cfme-pgdb-volume","persistentVolumeClaim":{"claimName":"cloudforms-postgresql"}},{"name":"cfme-pg-configs","configMap":{"name":"postgresql-configs","defaultMode":420}},{"name":"default-token-kp8bt","secret":{"secretName":"default-token-kp8bt","defaultMode":420}}],"containers":[{"name":"postgresql","image":"registry.access.redhat.com/cloudforms46/cfme-openshift-postgresql:latest","ports":[{"containerPort":5432,"protocol":"TCP"}],"env":[{"name":"POSTGRESQL_USER","value":"root"},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"name":"cloudforms-secrets","key":"pg-password"}}},{"name":"POSTGRESQL_DATABASE","value":"vmdb_production"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"1000"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"1GB"}],"resources":{"limits":{"memory":"8Gi"},"requests":{"cpu":"500m","memory":"4Gi"}},"volumeMounts":[{"name":"cfme-pgdb-volume","mountPath":"/var/lib/pgsql/data"},{"name":"cfme-pg-configs","mountPath":"/opt/app-root/src/postgresql-config/"},{"name":"default-token-kp8bt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"tcpSocket":{"port":5432},"initialDelaySeconds":60,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":15,"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"Always","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000250000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/compute":"true"},"serviceAccountName":"default","serviceAccount":"default","nodeName":"dell-r430-20.cloudforms.lab.eng.rdu2.redhat.com","securityContext":{"seLinuxOptions":{"level":"s0:c16,c5"},"fsGroup":1000250000},"imagePullSecrets":[{"name":"default-dockercfg-dprr7"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:55:22Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:56:17Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-23T15:55:20Z"}],"hostIP":"10.8.96.55","podIP":"10.129.0.92","startTime":"2018-05-23T15:55:22Z","containerStatuses":[{"name":"postgresql","state":{"running":{"startedAt":"2018-05-23T15:55:49Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms46/cfme-openshift-postgresql:latest","imageID":"docker-pullable://brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms46/cfme-openshift-postgresql@sha256:217cad82f2ae054d1e17c913292231976530df27bae84acfcfe0577cc477f82d","containerID":"docker://5a11b90f29912e1e412b5beafc754620081f9ae868b9fd7c2ee308953c253767"}],"qosClass":"Burstable"}},{"metadata":{"name":"apiserver-cdkxx","generateName":"apiserver-","namespace":"openshift-template-service-broker","selfLink":"/api/v1/namespaces/openshift-template-service-broker/pods/apiserver-cdkxx","uid":"6c41857e-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1690218","creationTimestamp":"2018-05-16T20:48:01Z","labels":{"apiserver":"true","controller-revision-hash":"3871265692","pod-template-generation":"1"},"annotations":{"openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"extensions/v1beta1","kind":"DaemonSet","name":"apiserver","uid":"6ba5a60f-594a-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"serving-cert","secret":{"secretName":"apiserver-serving-cert","defaultMode":420}},{"name":"apiserver-config","configMap":{"name":"apiserver-config","defaultMode":420}},{"name":"apiserver-token-jwqz7","secret":{"secretName":"apiserver-token-jwqz7","defaultMode":420}}],"containers":[{"name":"c","image":"registry.access.redhat.com/openshift3/ose-template-service-broker:v3.9.25","command":["/usr/bin/template-service-broker","start","template-service-broker","--secure-port=8443","--audit-log-path=-","--tls-cert-file=/var/serving-cert/tls.crt","--tls-private-key-file=/var/serving-cert/tls.key","--v=0","--config=/var/apiserver-config/apiserver-config.yaml"],"ports":[{"containerPort":8443,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"serving-cert","mountPath":"/var/serving-cert"},{"name":"apiserver-config","mountPath":"/var/apiserver-config"},{"name":"apiserver-token-jwqz7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"readinessProbe":{"httpGet":{"path":"/healthz","port":8443,"scheme":"HTTPS"},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000150000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"region":"infra"},"serviceAccountName":"apiserver","serviceAccount":"apiserver","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c12,c9"},"fsGroup":1000150000},"imagePullSecrets":[{"name":"apiserver-dockercfg-ntjd4"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:48:01Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:48:13Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:48:10Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.10","startTime":"2018-05-16T20:48:01Z","containerStatuses":[{"name":"c","state":{"running":{"startedAt":"2018-05-16T20:48:09Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.access.redhat.com/openshift3/ose-template-service-broker:v3.9.25","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-template-service-broker@sha256:027186620ee30993933a34d824ea269baeb8da23ab51319e78e09eeb863d3077","containerID":"docker://17e46c4a6937c51a561b3acb1b3c0701fcb62a3208c53978639d058d80c69748"}],"qosClass":"BestEffort"}},{"metadata":{"name":"webconsole-c9cf7f469-9rn6c","generateName":"webconsole-c9cf7f469-","namespace":"openshift-web-console","selfLink":"/api/v1/namespaces/openshift-web-console/pods/webconsole-c9cf7f469-9rn6c","uid":"fea9d352-5949-11e8-ba7e-d094660d31fb","resourceVersion":"1705128","creationTimestamp":"2018-05-16T20:44:57Z","labels":{"pod-template-hash":"757939025","webconsole":"true"},"annotations":{"openshift.io/scc":"restricted"},"ownerReferences":[{"apiVersion":"extensions/v1beta1","kind":"ReplicaSet","name":"webconsole-c9cf7f469","uid":"fea45214-5949-11e8-ba7e-d094660d31fb","controller":true,"blockOwnerDeletion":true}]},"spec":{"volumes":[{"name":"serving-cert","secret":{"secretName":"webconsole-serving-cert","defaultMode":400}},{"name":"webconsole-config","configMap":{"name":"webconsole-config","defaultMode":440}},{"name":"webconsole-token-chw7j","secret":{"secretName":"webconsole-token-chw7j","defaultMode":420}}],"containers":[{"name":"webconsole","image":"registry.access.redhat.com/openshift3/ose-web-console:v3.9.25","command":["/usr/bin/origin-web-console","--audit-log-path=-","-v=0","--config=/var/webconsole-config/webconsole-config.yaml"],"ports":[{"containerPort":8443,"protocol":"TCP"}],"resources":{"requests":{"cpu":"100m","memory":"100Mi"}},"volumeMounts":[{"name":"serving-cert","mountPath":"/var/serving-cert"},{"name":"webconsole-config","mountPath":"/var/webconsole-config"},{"name":"webconsole-token-chw7j","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"livenessProbe":{"exec":{"command":["/bin/sh","-i","-c","if
        [[ ! -f /tmp/webconsole-config.hash ]]; then \\\n  md5sum /var/webconsole-config/webconsole-config.yaml
        \u003e /tmp/webconsole-config.hash; \\\nelif [[ $(md5sum /var/webconsole-config/webconsole-config.yaml)
        != $(cat /tmp/webconsole-config.hash) ]]; then \\\n  exit 1; \\\nfi \u0026\u0026
        curl -k -f https://0.0.0.0:8443/console/"]},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"/healthz","port":8443,"scheme":"HTTPS"},"timeoutSeconds":1,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{"capabilities":{"drop":["KILL","MKNOD","SETGID","SETUID"]},"runAsUser":1000080000}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","nodeSelector":{"node-role.kubernetes.io/master":"true"},"serviceAccountName":"webconsole","serviceAccount":"webconsole","nodeName":"host.example.com","securityContext":{"seLinuxOptions":{"level":"s0:c9,c4"},"fsGroup":1000080000},"imagePullSecrets":[{"name":"webconsole-dockercfg-5jpb8"}],"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"}]},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:44:57Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T22:16:19Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2018-05-16T20:44:57Z"}],"hostIP":"10.8.96.54","podIP":"10.128.0.3","startTime":"2018-05-16T20:44:57Z","containerStatuses":[{"name":"webconsole","state":{"running":{"startedAt":"2018-05-16T22:16:18Z"}},"lastState":{"terminated":{"exitCode":2,"reason":"Error","startedAt":"2018-05-16T20:45:15Z","finishedAt":"2018-05-16T22:16:17Z","containerID":"docker://0143d7c01dcc8a64ee8661c879a92f28e749aceabdf033541a79951504ebba43"}},"ready":true,"restartCount":1,"image":"registry.access.redhat.com/openshift3/ose-web-console:v3.9.25","imageID":"docker-pullable://registry.access.redhat.com/openshift3/ose-web-console@sha256:82e933031355090e0f88e93b2bd0c488b9285343f001b6ed6d653e8a3ca2c199","containerID":"docker://a14fee1565fc1a658664dd5cca6e2d597594d054c1845976d442ca27861a9432"}],"qosClass":"Burstable"}}]}

        '
    http_version:
  recorded_at: Thu, 23 Aug 2018 06:21:30 GMT
- request:
    method: get
    uri: https://host.example.com:8443/apis/servicecatalog.k8s.io/v1beta1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.4.2p198
      Authorization:
      - Bearer theToken
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Length:
      - '1805'
      Content-Type:
      - application/json
      Date:
      - Thu, 23 Aug 2018 06:21:29 GMT
    body:
      encoding: UTF-8
      string: '{"kind":"APIResourceList","apiVersion":"v1","groupVersion":"servicecatalog.k8s.io/v1beta1","resources":[{"name":"clusterservicebrokers","singularName":"","namespaced":false,"kind":"ClusterServiceBroker","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"clusterservicebrokers/status","singularName":"","namespaced":false,"kind":"ClusterServiceBroker","verbs":["get","patch","update"]},{"name":"clusterserviceclasses","singularName":"","namespaced":false,"kind":"ClusterServiceClass","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"clusterserviceclasses/status","singularName":"","namespaced":false,"kind":"ClusterServiceClass","verbs":["get","patch","update"]},{"name":"clusterserviceplans","singularName":"","namespaced":false,"kind":"ClusterServicePlan","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"clusterserviceplans/status","singularName":"","namespaced":false,"kind":"ClusterServicePlan","verbs":["get","patch","update"]},{"name":"servicebindings","singularName":"","namespaced":true,"kind":"ServiceBinding","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"servicebindings/status","singularName":"","namespaced":true,"kind":"ServiceBinding","verbs":["get","patch","update"]},{"name":"serviceinstances","singularName":"","namespaced":true,"kind":"ServiceInstance","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"serviceinstances/reference","singularName":"","namespaced":true,"kind":"ServiceInstance","verbs":["get","patch","update"]},{"name":"serviceinstances/status","singularName":"","namespaced":true,"kind":"ServiceInstance","verbs":["get","patch","update"]}]}

        '
    http_version:
  recorded_at: Thu, 23 Aug 2018 06:21:30 GMT
- request:
    method: get
    uri: https://host.example.com:8443/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.4.2p198
      Authorization:
      - Bearer theToken
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Thu, 23 Aug 2018 06:21:30 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"kind":"ClusterServiceClassList","apiVersion":"servicecatalog.k8s.io/v1beta1","metadata":{"selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses","resourceVersion":"36309839"},"items":[{"metadata":{"name":"03b69500305d9859bb9440d9f9023784","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/03b69500305d9859bb9440d9f9023784","uid":"a651cda6-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690843","creationTimestamp":"2018-05-16T20:49:38Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"rh-mediawiki-apb","externalID":"03b69500305d9859bb9440d9f9023784","description":"Mediawiki
        apb implementation","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-mediawiki","dependencies":["registry.access.redhat.com/openshift3/mediawiki-123:latest"],"displayName":"Mediawiki
        (APB)","documentationUrl":"https://www.mediawiki.org/wiki/Documentation","longDescription":"An
        apb that deploys Mediawiki 1.23","providerDisplayName":"Red Hat, Inc."}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"174fb3fa-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/174fb3fa-0d11-11e8-906a-d094660d31fb","uid":"80f91951-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690444","creationTimestamp":"2018-05-16T20:48:36Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"mariadb-ephemeral","externalID":"174fb3fa-0d11-11e8-906a-d094660d31fb","description":"MariaDB
        database service, without persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-mariadb","displayName":"MariaDB
        (Ephemeral)","documentationUrl":"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md","longDescription":"This
        template provides a standalone MariaDB server with a database created.  The
        database is not stored on persistent storage, so any restart of the service
        will result in all data being lost.  The database name, username, and password
        are chosen via parameters when provisioning this service.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["database","mariadb"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1750b5d6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1750b5d6-0d11-11e8-906a-d094660d31fb","uid":"8191d1b9-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690453","creationTimestamp":"2018-05-16T20:48:37Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"mariadb-persistent","externalID":"1750b5d6-0d11-11e8-906a-d094660d31fb","description":"MariaDB
        database service, with persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md.\n\nNOTE:
        Scaling to more than one replica is not supported. You must have persistent
        volumes available in your cluster to use this template.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-mariadb","displayName":"MariaDB","documentationUrl":"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md","longDescription":"This
        template provides a standalone MariaDB server with a database created.  The
        database is stored on persistent storage.  The database name, username, and
        password are chosen via parameters when provisioning this service.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["database","mariadb"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1751dc6f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1751dc6f-0d11-11e8-906a-d094660d31fb","uid":"750d475d-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690257","creationTimestamp":"2018-05-16T20:48:16Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"mongodb-ephemeral","externalID":"1751dc6f-0d11-11e8-906a-d094660d31fb","description":"MongoDB
        database service, without persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-mongodb","displayName":"MongoDB
        (Ephemeral)","documentationUrl":"https://docs.openshift.org/latest/using_images/db_images/mongodb.html","longDescription":"This
        template provides a standalone MongoDB server with a database created.  The
        database is not stored on persistent storage, so any restart of the service
        will result in all data being lost.  The database name, username, and password
        are chosen via parameters when provisioning this service.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["database","mongodb"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1752bf6f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1752bf6f-0d11-11e8-906a-d094660d31fb","uid":"77cb3cac-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690312","creationTimestamp":"2018-05-16T20:48:20Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"mongodb-persistent","externalID":"1752bf6f-0d11-11e8-906a-d094660d31fb","description":"MongoDB
        database service, with persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.\n\nNOTE:
        Scaling to more than one replica is not supported. You must have persistent
        volumes available in your cluster to use this template.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-mongodb","displayName":"MongoDB","documentationUrl":"https://docs.openshift.org/latest/using_images/db_images/mongodb.html","longDescription":"This
        template provides a standalone MongoDB server with a database created.  The
        database is stored on persistent storage.  The database name, username, and
        password are chosen via parameters when provisioning this service.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["database","mongodb"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"17539bd2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/17539bd2-0d11-11e8-906a-d094660d31fb","uid":"81179fb9-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690446","creationTimestamp":"2018-05-16T20:48:36Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"mysql-ephemeral","externalID":"17539bd2-0d11-11e8-906a-d094660d31fb","description":"MySQL
        database service, without persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/root/usr/share/container-scripts/mysql/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-mysql-database","displayName":"MySQL
        (Ephemeral)","documentationUrl":"https://docs.openshift.org/latest/using_images/db_images/mysql.html","longDescription":"This
        template provides a standalone MySQL server with a database created.  The
        database is not stored on persistent storage, so any restart of the service
        will result in all data being lost.  The database name, username, and password
        are chosen via parameters when provisioning this service.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["database","mysql"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1754752d-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1754752d-0d11-11e8-906a-d094660d31fb","uid":"83b70466-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690478","creationTimestamp":"2018-05-16T20:48:40Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"mysql-persistent","externalID":"1754752d-0d11-11e8-906a-d094660d31fb","description":"MySQL
        database service, with persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/root/usr/share/container-scripts/mysql/README.md.\n\nNOTE:
        Scaling to more than one replica is not supported. You must have persistent
        volumes available in your cluster to use this template.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-mysql-database","displayName":"MySQL","documentationUrl":"https://docs.openshift.org/latest/using_images/db_images/mysql.html","longDescription":"This
        template provides a standalone MySQL server with a database created.  The
        database is stored on persistent storage.  The database name, username, and
        password are chosen via parameters when provisioning this service.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["database","mysql"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"17554df6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/17554df6-0d11-11e8-906a-d094660d31fb","uid":"7bd8e163-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690360","creationTimestamp":"2018-05-16T20:48:27Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"postgresql-ephemeral","externalID":"17554df6-0d11-11e8-906a-d094660d31fb","description":"PostgreSQL
        database service, without persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-postgresql","displayName":"PostgreSQL
        (Ephemeral)","documentationUrl":"https://docs.openshift.org/latest/using_images/db_images/postgresql.html","longDescription":"This
        template provides a standalone PostgreSQL server with a database created.  The
        database is not stored on persistent storage, so any restart of the service
        will result in all data being lost.  The database name, username, and password
        are chosen via parameters when provisioning this service.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["database","postgresql"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1756262c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1756262c-0d11-11e8-906a-d094660d31fb","uid":"889a3c3b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690538","creationTimestamp":"2018-05-16T20:48:48Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"postgresql-persistent","externalID":"1756262c-0d11-11e8-906a-d094660d31fb","description":"PostgreSQL
        database service, with persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.\n\nNOTE:
        Scaling to more than one replica is not supported. You must have persistent
        volumes available in your cluster to use this template.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-postgresql","displayName":"PostgreSQL","documentationUrl":"https://docs.openshift.org/latest/using_images/db_images/postgresql.html","longDescription":"This
        template provides a standalone PostgreSQL server with a database created.  The
        database is stored on persistent storage.  The database name, username, and
        password are chosen via parameters when provisioning this service.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["database","postgresql"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"17570317-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/17570317-0d11-11e8-906a-d094660d31fb","uid":"846e1b51-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690486","creationTimestamp":"2018-05-16T20:48:41Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"redis-ephemeral","externalID":"17570317-0d11-11e8-906a-d094660d31fb","description":"Redis
        in-memory data structure store, without persistent storage. For more information
        about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/3.2.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-redis","displayName":"Redis
        (Ephemeral)","documentationUrl":"https://github.com/sclorg/redis-container/tree/master/3.2","longDescription":"This
        template provides a standalone Redis server.  The data is not stored on persistent
        storage, so any restart of the service will result in all data being lost.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["database","redis"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1757d0cd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1757d0cd-0d11-11e8-906a-d094660d31fb","uid":"76017f12-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690284","creationTimestamp":"2018-05-16T20:48:17Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"redis-persistent","externalID":"1757d0cd-0d11-11e8-906a-d094660d31fb","description":"Redis
        in-memory data structure store, with persistent storage. For more information
        about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/3.2.\n\nNOTE:
        You must have persistent volumes available in your cluster to use this template.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-redis","displayName":"Redis","documentationUrl":"https://github.com/sclorg/redis-container/tree/master/3.2","longDescription":"This
        template provides a standalone Redis server.  The data is stored on persistent
        storage.","providerDisplayName":"Red Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["database","redis"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1995db38-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1995db38-0d11-11e8-906a-d094660d31fb","uid":"83987133-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690477","creationTimestamp":"2018-05-16T20:48:40Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"system","externalID":"1995db38-0d11-11e8-906a-d094660d31fb","description":"No
        description provided.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"tags":[""]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199737e0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/199737e0-0d11-11e8-906a-d094660d31fb","uid":"7f4dd43f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690413","creationTimestamp":"2018-05-16T20:48:33Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"3scale-gateway","externalID":"199737e0-0d11-11e8-906a-d094660d31fb","description":"3scale
        API Gateway","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-load-balancer"},"tags":["api","gateway","3scale"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19982ec6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19982ec6-0d11-11e8-906a-d094660d31fb","uid":"7d470a50-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690381","creationTimestamp":"2018-05-16T20:48:29Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"cakephp-mysql-persistent","externalID":"19982ec6-0d11-11e8-906a-d094660d31fb","description":"An
        example CakePHP application with a MySQL database. For more information about
        using this template, including OpenShift considerations, see https://github.com/openshift/cakephp-ex/blob/master/README.md.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-php","displayName":"CakePHP
        + MySQL","documentationUrl":"https://github.com/openshift/cakephp-ex","longDescription":"This
        template defines resources needed to develop a CakePHP application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.","providerDisplayName":"Red Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","php","cakephp"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19996dd0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19996dd0-0d11-11e8-906a-d094660d31fb","uid":"7ac631d4-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690345","creationTimestamp":"2018-05-16T20:48:25Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"cakephp-mysql-example","externalID":"19996dd0-0d11-11e8-906a-d094660d31fb","description":"An
        example CakePHP application with a MySQL database. For more information about
        using this template, including OpenShift considerations, see https://github.com/openshift/cakephp-ex/blob/master/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-php","displayName":"CakePHP
        + MySQL (Ephemeral)","documentationUrl":"https://github.com/openshift/cakephp-ex","longDescription":"This
        template defines resources needed to develop a CakePHP application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.  The database is stored in non-persistent storage,
        so this configuration should be used for experimental purposes only.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","php","cakephp"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199a7eb1-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/199a7eb1-0d11-11e8-906a-d094660d31fb","uid":"833d082a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690473","creationTimestamp":"2018-05-16T20:48:39Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"dancer-mysql-persistent","externalID":"199a7eb1-0d11-11e8-906a-d094660d31fb","description":"An
        example Dancer application with a MySQL database. For more information about
        using this template, including OpenShift considerations, see https://github.com/openshift/dancer-ex/blob/master/README.md.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-perl","displayName":"Dancer
        + MySQL","documentationUrl":"https://github.com/openshift/dancer-ex","longDescription":"This
        template defines resources needed to develop a Dancer based application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.","providerDisplayName":"Red Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","perl","dancer"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199b7cbb-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/199b7cbb-0d11-11e8-906a-d094660d31fb","uid":"78455887-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690318","creationTimestamp":"2018-05-16T20:48:21Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"dancer-mysql-example","externalID":"199b7cbb-0d11-11e8-906a-d094660d31fb","description":"An
        example Dancer application with a MySQL database. For more information about
        using this template, including OpenShift considerations, see https://github.com/openshift/dancer-ex/blob/master/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-perl","displayName":"Dancer
        + MySQL (Ephemeral)","documentationUrl":"https://github.com/openshift/dancer-ex","longDescription":"This
        template defines resources needed to develop a Dancer based application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.  The database is stored in non-persistent storage,
        so this configuration should be used for experimental purposes only.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","perl","dancer"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199c8a62-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/199c8a62-0d11-11e8-906a-d094660d31fb","uid":"874a7eba-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690520","creationTimestamp":"2018-05-16T20:48:46Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"django-psql-persistent","externalID":"199c8a62-0d11-11e8-906a-d094660d31fb","description":"An
        example Django application with a PostgreSQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/django-ex/blob/master/README.md.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-python","displayName":"Django
        + PostgreSQL","documentationUrl":"https://github.com/openshift/django-ex","longDescription":"This
        template defines resources needed to develop a Django based application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.","providerDisplayName":"Red Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","python","django"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199d9bf8-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/199d9bf8-0d11-11e8-906a-d094660d31fb","uid":"74d04e23-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690240","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"django-psql-example","externalID":"199d9bf8-0d11-11e8-906a-d094660d31fb","description":"An
        example Django application with a PostgreSQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/django-ex/blob/master/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-python","displayName":"Django
        + PostgreSQL (Ephemeral)","documentationUrl":"https://github.com/openshift/django-ex","longDescription":"This
        template defines resources needed to develop a Django based application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.  The database is stored in non-persistent storage,
        so this configuration should be used for experimental purposes only.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","python","django"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199e8c12-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/199e8c12-0d11-11e8-906a-d094660d31fb","uid":"78084585-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690314","creationTimestamp":"2018-05-16T20:48:21Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"dotnet-example","externalID":"199e8c12-0d11-11e8-906a-d094660d31fb","description":"An
        example .NET Core application.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-dotnet","displayName":".NET
        Core Example"},"tags":["quickstart","dotnet",".net"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199f9353-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/199f9353-0d11-11e8-906a-d094660d31fb","uid":"7c52f4dc-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690366","creationTimestamp":"2018-05-16T20:48:28Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"dotnet-pgsql-persistent","externalID":"199f9353-0d11-11e8-906a-d094660d31fb","description":"An
        example .NET Core application with a PostgreSQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/redhat-developer/s2i-dotnetcore.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-dotnet","displayName":".NET
        Core + PostgreSQL (Persistent)"},"tags":["quickstart","dotnet"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a09e57-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19a09e57-0d11-11e8-906a-d094660d31fb","uid":"7b9bd47f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690356","creationTimestamp":"2018-05-16T20:48:27Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"dotnet-runtime-example","externalID":"19a09e57-0d11-11e8-906a-d094660d31fb","description":"An
        example .NET Core Runtime example application.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-dotnet","displayName":".NET
        Core Runtime Example"},"tags":["quickstart","dotnet",".net"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a1c15a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19a1c15a-0d11-11e8-906a-d094660d31fb","uid":"883eb4d8-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690530","creationTimestamp":"2018-05-16T20:48:48Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"httpd-example","externalID":"19a1c15a-0d11-11e8-906a-d094660d31fb","description":"An
        example Apache HTTP Server (httpd) application that serves static content.
        For more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/httpd-ex/blob/master/README.md.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-apache","displayName":"Apache
        HTTP Server","documentationUrl":"https://github.com/openshift/httpd-ex","longDescription":"This
        template defines resources needed to develop a static application served by
        Apache HTTP Server (httpd), including a build configuration and application
        deployment configuration.","providerDisplayName":"Red Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","httpd"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a29f02-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19a29f02-0d11-11e8-906a-d094660d31fb","uid":"87a61018-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690524","creationTimestamp":"2018-05-16T20:48:47Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jenkins-ephemeral","externalID":"19a29f02-0d11-11e8-906a-d094660d31fb","description":"Jenkins
        service, without persistent storage.\n\nWARNING: Any data stored will be lost
        upon pod destruction. Only use this template for testing.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jenkins","displayName":"Jenkins
        (Ephemeral)","documentationUrl":"https://docs.openshift.org/latest/using_images/other_images/jenkins.html","longDescription":"This
        template deploys a Jenkins server capable of managing OpenShift Pipeline builds
        and supporting OpenShift-based oauth login.  The Jenkins configuration is
        stored in non-persistent storage, so this configuration should be used for
        experimental purposes only.","providerDisplayName":"Red Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["instant-app","jenkins"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a38330-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19a38330-0d11-11e8-906a-d094660d31fb","uid":"887bb831-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690536","creationTimestamp":"2018-05-16T20:48:48Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jenkins-persistent","externalID":"19a38330-0d11-11e8-906a-d094660d31fb","description":"Jenkins
        service, with persistent storage.\n\nNOTE: You must have persistent volumes
        available in your cluster to use this template.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jenkins","displayName":"Jenkins","documentationUrl":"https://docs.openshift.org/latest/using_images/other_images/jenkins.html","longDescription":"This
        template deploys a Jenkins server capable of managing OpenShift Pipeline builds
        and supporting OpenShift-based oauth login.","providerDisplayName":"Red Hat,
        Inc.","supportUrl":"https://access.redhat.com"},"tags":["instant-app","jenkins"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a48747-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19a48747-0d11-11e8-906a-d094660d31fb","uid":"7f2f488f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690409","creationTimestamp":"2018-05-16T20:48:33Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"nodejs-mongo-persistent","externalID":"19a48747-0d11-11e8-906a-d094660d31fb","description":"An
        example Node.js application with a MongoDB database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-nodejs","displayName":"Node.js
        + MongoDB","documentationUrl":"https://github.com/openshift/nodejs-ex","longDescription":"This
        template defines resources needed to develop a NodeJS application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.","providerDisplayName":"Red Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","nodejs"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a58974-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19a58974-0d11-11e8-906a-d094660d31fb","uid":"83f4126b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690480","creationTimestamp":"2018-05-16T20:48:41Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"nodejs-mongodb-example","externalID":"19a58974-0d11-11e8-906a-d094660d31fb","description":"An
        example Node.js application with a MongoDB database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-nodejs","displayName":"Node.js
        + MongoDB (Ephemeral)","documentationUrl":"https://github.com/openshift/nodejs-ex","longDescription":"This
        template defines resources needed to develop a NodeJS application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.  The database is stored in non-persistent storage,
        so this configuration should be used for experimental purposes only.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","nodejs"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a6578a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19a6578a-0d11-11e8-906a-d094660d31fb","uid":"896fdd6e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690548","creationTimestamp":"2018-05-16T20:48:50Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"amp-pvc","externalID":"19a6578a-0d11-11e8-906a-d094660d31fb","description":"No
        description provided.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"tags":[""]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a7454f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19a7454f-0d11-11e8-906a-d094660d31fb","uid":"7cae75ae-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690372","creationTimestamp":"2018-05-16T20:48:28Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"rails-pgsql-persistent","externalID":"19a7454f-0d11-11e8-906a-d094660d31fb","description":"An
        example Rails application with a PostgreSQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/rails-ex/blob/master/README.md.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-ruby","displayName":"Rails
        + PostgreSQL","documentationUrl":"https://github.com/openshift/rails-ex","longDescription":"This
        template defines resources needed to develop a Rails application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.","providerDisplayName":"Red Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","ruby","rails"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a85548-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19a85548-0d11-11e8-906a-d094660d31fb","uid":"769a15ef-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690299","creationTimestamp":"2018-05-16T20:48:18Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"rails-postgresql-example","externalID":"19a85548-0d11-11e8-906a-d094660d31fb","description":"An
        example Rails application with a PostgreSQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/rails-ex/blob/master/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing.","bindable":false,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-ruby","displayName":"Rails
        + PostgreSQL (Ephemeral)","documentationUrl":"https://github.com/openshift/rails-ex","longDescription":"This
        template defines resources needed to develop a Rails application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.  The database is stored in non-persistent storage,
        so this configuration should be used for experimental purposes only.","providerDisplayName":"Red
        Hat, Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","ruby","rails"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a93cec-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/19a93cec-0d11-11e8-906a-d094660d31fb","uid":"791ae890-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690326","creationTimestamp":"2018-05-16T20:48:22Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"amp-apicast-wildcard-router","externalID":"19a93cec-0d11-11e8-906a-d094660d31fb","description":"No
        description provided.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"tags":[""]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1ae6b8c6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1ae6b8c6-0d11-11e8-906a-d094660d31fb","uid":"859f5397-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690499","creationTimestamp":"2018-05-16T20:48:43Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"amq62-basic","externalID":"1ae6b8c6-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JBoss A-MQ brokers. These can be deployed as standalone or in
        a mesh. This template doesn''t feature SSL support.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-amq","displayName":"JBoss
        A-MQ 6.2 (Ephemeral, no SSL)","providerDisplayName":"Red Hat, Inc."},"tags":["messaging","amq","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1ae81e19-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1ae81e19-0d11-11e8-906a-d094660d31fb","uid":"7d287d8e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690380","creationTimestamp":"2018-05-16T20:48:29Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"amq62-persistent-ssl","externalID":"1ae81e19-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-amq","displayName":"JBoss
        A-MQ 6.2 (with SSL)","providerDisplayName":"Red Hat, Inc."},"tags":["messaging","amq","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1ae93ba4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1ae93ba4-0d11-11e8-906a-d094660d31fb","uid":"86b2a4d3-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690512","creationTimestamp":"2018-05-16T20:48:45Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"amq62-persistent","externalID":"1ae93ba4-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JBoss A-MQ brokers. These can be deployed as standalone and use
        persistent storage for saving messages, including message migration when the
        number of pods are reduced. This template doesn''t feature SSL support.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-amq","displayName":"JBoss
        A-MQ 6.2 (no SSL)","providerDisplayName":"Red Hat, Inc."},"tags":["messaging","amq","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aea4305-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1aea4305-0d11-11e8-906a-d094660d31fb","uid":"809dacee-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690439","creationTimestamp":"2018-05-16T20:48:35Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"amq62-ssl","externalID":"1aea4305-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JBoss A-MQ brokers. These can be deployed as standalone or in
        a mesh. This template supports SSL and requires usage of OpenShift secrets.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-amq","displayName":"JBoss
        A-MQ 6.2 (Ephemeral with SSL)","providerDisplayName":"Red Hat, Inc."},"tags":["messaging","amq","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aeb367d-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1aeb367d-0d11-11e8-906a-d094660d31fb","uid":"83d58af7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690479","creationTimestamp":"2018-05-16T20:48:40Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"amq63-basic","externalID":"1aeb367d-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JBoss A-MQ brokers. These can be deployed as standalone or in
        a mesh. This template doesn''t feature SSL support.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-amq","displayName":"Red
        Hat JBoss A-MQ 6.3 (Ephemeral, no SSL)","providerDisplayName":"Red Hat, Inc."},"tags":["messaging","amq","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aec5f6c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1aec5f6c-0d11-11e8-906a-d094660d31fb","uid":"7a0f1be4-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690338","creationTimestamp":"2018-05-16T20:48:24Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"amq63-persistent-ssl","externalID":"1aec5f6c-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-amq","displayName":"JBoss
        A-MQ 6.3 (with SSL)","providerDisplayName":"Red Hat, Inc."},"tags":["messaging","amq","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aed7362-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1aed7362-0d11-11e8-906a-d094660d31fb","uid":"81b03d8e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690455","creationTimestamp":"2018-05-16T20:48:37Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"amq63-persistent","externalID":"1aed7362-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-amq","displayName":"JBoss
        A-MQ 6.3 (no SSL)","providerDisplayName":"Red Hat, Inc."},"tags":["messaging","amq","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aee88b9-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1aee88b9-0d11-11e8-906a-d094660d31fb","uid":"7c346c91-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690363","creationTimestamp":"2018-05-16T20:48:28Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"amq63-ssl","externalID":"1aee88b9-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-amq","displayName":"JBoss
        A-MQ 6.3 (Ephemeral with SSL)","providerDisplayName":"Red Hat, Inc."},"tags":["messaging","amq","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aef8bf0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1aef8bf0-0d11-11e8-906a-d094660d31fb","uid":"8041ee69-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690429","creationTimestamp":"2018-05-16T20:48:34Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid65-basic","externalID":"1aef8bf0-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JDG 6.5 applications.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 6.5 (Ephemeral, no https)","providerDisplayName":"Red Hat, Inc."},"tags":["datagrid","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af099e2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1af099e2-0d11-11e8-906a-d094660d31fb","uid":"84e8308a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690492","creationTimestamp":"2018-05-16T20:48:42Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid65-https","externalID":"1af099e2-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JDG 6.5 applications.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 6.5 (Ephemeral with https)","providerDisplayName":"Red Hat, Inc."},"tags":["datagrid","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af1f460-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1af1f460-0d11-11e8-906a-d094660d31fb","uid":"822a4743-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690459","creationTimestamp":"2018-05-16T20:48:38Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid65-mysql-persistent","externalID":"1af1f460-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Data Grid application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 6.5 + MySQL (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["datagrid","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af39c48-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1af39c48-0d11-11e8-906a-d094660d31fb","uid":"7ed3cbf7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690403","creationTimestamp":"2018-05-16T20:48:32Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid65-mysql","externalID":"1af39c48-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JDG 6.5 and MySQL applications.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 6.5 + MySQL (Ephemeral with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["datagrid","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af4f88b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1af4f88b-0d11-11e8-906a-d094660d31fb","uid":"885d2fb4-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690533","creationTimestamp":"2018-05-16T20:48:48Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid65-postgresql-persistent","externalID":"1af4f88b-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Data Grid application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 6.5 + PostgreSQL (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["datagrid","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af63c7c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1af63c7c-0d11-11e8-906a-d094660d31fb","uid":"7939742b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690327","creationTimestamp":"2018-05-16T20:48:23Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid65-postgresql","externalID":"1af63c7c-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JDG 6.5 and PostgreSQL applications built using.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 6.5 + PostgreSQL (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["datagrid","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af74b3e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1af74b3e-0d11-11e8-906a-d094660d31fb","uid":"8248ceb0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690460","creationTimestamp":"2018-05-16T20:48:38Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid71-basic","externalID":"1af74b3e-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Data Grid application. For more information about using this
        template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 7.1 (Ephemeral, no https)","providerDisplayName":"Red Hat, Inc."},"tags":["datagrid","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af852b9-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1af852b9-0d11-11e8-906a-d094660d31fb","uid":"8060816a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690431","creationTimestamp":"2018-05-16T20:48:35Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid71-https","externalID":"1af852b9-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Data Grid application. For more information about using this
        template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 7.1 (Ephemeral with https)","providerDisplayName":"Red Hat, Inc."},"tags":["datagrid","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af9a98e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1af9a98e-0d11-11e8-906a-d094660d31fb","uid":"7dfe25ac-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690393","creationTimestamp":"2018-05-16T20:48:31Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid71-mysql-persistent","externalID":"1af9a98e-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Data Grid application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 7.1 + MySQL (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["datagrid","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1afaeb55-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1afaeb55-0d11-11e8-906a-d094660d31fb","uid":"84c9ada7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690491","creationTimestamp":"2018-05-16T20:48:42Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid71-mysql","externalID":"1afaeb55-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Data Grid application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 7.1 + MySQL (Ephemeral with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["datagrid","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1afc51e6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1afc51e6-0d11-11e8-906a-d094660d31fb","uid":"7493405e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690229","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid71-postgresql-persistent","externalID":"1afc51e6-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Data Grid application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 7.1 + PostgreSQL (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["datagrid","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1afd8aca-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1afd8aca-0d11-11e8-906a-d094660d31fb","uid":"80bc0cdd-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690441","creationTimestamp":"2018-05-16T20:48:35Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid71-postgresql","externalID":"1afd8aca-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Data Grid application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 7.1 + PostgreSQL (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["datagrid","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1afea652-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1afea652-0d11-11e8-906a-d094660d31fb","uid":"86d0772b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690513","creationTimestamp":"2018-05-16T20:48:45Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datavirt63-basic-s2i","externalID":"1afea652-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JBoss Data Virtualization 6.3 services built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datavirt","displayName":"JBoss
        Data Virtualization 6.3 (no SSL)","providerDisplayName":"Red Hat, Inc."},"tags":["jdv","datavirt","database","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b001f48-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b001f48-0d11-11e8-906a-d094660d31fb","uid":"8932d044-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690546","creationTimestamp":"2018-05-16T20:48:49Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datavirt63-extensions-support-s2i","externalID":"1b001f48-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Data Virtualization application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datavirt","displayName":"JBoss
        Data Virtualization 6.3 (with SSL and Extensions)","providerDisplayName":"Red
        Hat, Inc."},"tags":["jdv","datavirt","database","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b018925-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b018925-0d11-11e8-906a-d094660d31fb","uid":"78fc62c1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690325","creationTimestamp":"2018-05-16T20:48:22Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datavirt63-secure-s2i","externalID":"1b018925-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Data Virtualization application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datavirt","displayName":"JBoss
        Data Virtualization 6.3 (with SSL)","providerDisplayName":"Red Hat, Inc."},"tags":["jdv","datavirt","database","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b02cff3-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b02cff3-0d11-11e8-906a-d094660d31fb","uid":"7f8aed87-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690418","creationTimestamp":"2018-05-16T20:48:33Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"decisionserver62-amq-s2i","externalID":"1b02cff3-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BRMS 6.2 decision server A-MQ applications built
        using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BRMS 6.2 decision server + A-MQ (with https)"},"tags":["decisionserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b03d2e4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b03d2e4-0d11-11e8-906a-d094660d31fb","uid":"7b5ecc0f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690354","creationTimestamp":"2018-05-16T20:48:26Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"decisionserver62-basic-s2i","externalID":"1b03d2e4-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BRMS 6.2 decision server applications built using
        S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BRMS 6.2 decision server (no https)"},"tags":["decisionserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b04db62-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b04db62-0d11-11e8-906a-d094660d31fb","uid":"765d071d-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690292","creationTimestamp":"2018-05-16T20:48:18Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"decisionserver62-https-s2i","externalID":"1b04db62-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BRMS 6.2 decision server HTTPS applications built
        using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BRMS 6.2 decision server (with https)"},"tags":["decisionserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0607d9-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b0607d9-0d11-11e8-906a-d094660d31fb","uid":"848c98ac-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690487","creationTimestamp":"2018-05-16T20:48:42Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"decisionserver63-amq-s2i","externalID":"1b0607d9-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BRMS 6.3 decision server A-MQ applications built
        using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BRMS 6.3 decision server + A-MQ (with https)"},"tags":["decisionserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b07071a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b07071a-0d11-11e8-906a-d094660d31fb","uid":"85bdcdf3-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690500","creationTimestamp":"2018-05-16T20:48:44Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"decisionserver63-basic-s2i","externalID":"1b07071a-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BRMS 6.3 decision server applications built using
        S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BRMS 6.3 decision server (no https)"},"tags":["decisionserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b080b66-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b080b66-0d11-11e8-906a-d094660d31fb","uid":"8801a59f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690528","creationTimestamp":"2018-05-16T20:48:47Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"decisionserver63-https-s2i","externalID":"1b080b66-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BRMS 6.3 decision server HTTPS applications built
        using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BRMS 6.3 decision server (with https)"},"tags":["decisionserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b09409b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b09409b-0d11-11e8-906a-d094660d31fb","uid":"7a2d9ab7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690340","creationTimestamp":"2018-05-16T20:48:24Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"decisionserver64-amq-s2i","externalID":"1b09409b-0d11-11e8-906a-d094660d31fb","description":"An
        example BRMS decision server A-MQ application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-decisionserver","displayName":"JBoss
        BRMS 6.4 decision server + A-MQ (with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["decisionserver","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0a471f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b0a471f-0d11-11e8-906a-d094660d31fb","uid":"87e3185e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690527","creationTimestamp":"2018-05-16T20:48:47Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"decisionserver64-basic-s2i","externalID":"1b0a471f-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BRMS 6.4 decision server applications built using
        S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-decisionserver","displayName":"Red
        Hat JBoss BRMS 6.4 decision server (no https)"},"tags":["decisionserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0b3a89-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b0b3a89-0d11-11e8-906a-d094660d31fb","uid":"77512fc0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690306","creationTimestamp":"2018-05-16T20:48:19Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"decisionserver64-https-s2i","externalID":"1b0b3a89-0d11-11e8-906a-d094660d31fb","description":"An
        example BRMS decision server application. For more information about using
        this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-decisionserver","displayName":"JBoss
        BRMS 6.4 decision server (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["decisionserver","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0ccb7e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b0ccb7e-0d11-11e8-906a-d094660d31fb","uid":"754a613a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690263","creationTimestamp":"2018-05-16T20:48:16Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-amq-persistent-s2i","externalID":"1b0ccb7e-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 + A-MQ (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0e1f1b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b0e1f1b-0d11-11e8-906a-d094660d31fb","uid":"7ef24b89-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690405","creationTimestamp":"2018-05-16T20:48:32Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-amq-s2i","externalID":"1b0e1f1b-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 + A-MQ (Ephemeral with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0f5a31-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b0f5a31-0d11-11e8-906a-d094660d31fb","uid":"749499fb-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690233","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-basic-s2i","externalID":"1b0f5a31-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 (no https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b10676f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b10676f-0d11-11e8-906a-d094660d31fb","uid":"752bd37b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690260","creationTimestamp":"2018-05-16T20:48:16Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-https-s2i","externalID":"1b10676f-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b11ad4b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b11ad4b-0d11-11e8-906a-d094660d31fb","uid":"8004f613-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690427","creationTimestamp":"2018-05-16T20:48:34Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-mongodb-persistent-s2i","externalID":"1b11ad4b-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 + MongoDB (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b12f175-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b12f175-0d11-11e8-906a-d094660d31fb","uid":"7c8ff363-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690370","creationTimestamp":"2018-05-16T20:48:28Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-mongodb-s2i","externalID":"1b12f175-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 + MongoDB (Ephemeral with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b1440d0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b1440d0-0d11-11e8-906a-d094660d31fb","uid":"87878bb1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690522","creationTimestamp":"2018-05-16T20:48:47Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-mysql-persistent-s2i","externalID":"1b1440d0-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 + MySQL (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b158bdc-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b158bdc-0d11-11e8-906a-d094660d31fb","uid":"7732b4ed-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690305","creationTimestamp":"2018-05-16T20:48:19Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-mysql-s2i","externalID":"1b158bdc-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 + MySQL (Ephemeral with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b16f0d8-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b16f0d8-0d11-11e8-906a-d094660d31fb","uid":"75a5ed76-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690267","creationTimestamp":"2018-05-16T20:48:17Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-postgresql-persistent-s2i","externalID":"1b16f0d8-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"Red
        Hat JBoss EAP 6.4 + PostgreSQL (Persistent with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b182f3f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b182f3f-0d11-11e8-906a-d094660d31fb","uid":"87c49b8b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690525","creationTimestamp":"2018-05-16T20:48:47Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-postgresql-s2i","externalID":"1b182f3f-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 + PostgreSQL (Ephemeral with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b19b6a6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b19b6a6-0d11-11e8-906a-d094660d31fb","uid":"81362696-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690450","creationTimestamp":"2018-05-16T20:48:36Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-sso-s2i","externalID":"1b19b6a6-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 Single Sign-On application. For more information about using
        this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 + Single Sign-On (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b1c33a0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b1c33a0-0d11-11e8-906a-d094660d31fb","uid":"85fad9be-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690503","creationTimestamp":"2018-05-16T20:48:44Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-third-party-db-s2i","externalID":"1b1c33a0-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 6 DB application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"Red
        Hat JBoss EAP 6.4 (with https, DB drivers)","providerDisplayName":"Red Hat,
        Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b1dc092-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b1dc092-0d11-11e8-906a-d094660d31fb","uid":"89515430-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690547","creationTimestamp":"2018-05-16T20:48:50Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-amq-persistent-s2i","externalID":"1b1dc092-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 + A-MQ (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b1f2f0b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b1f2f0b-0d11-11e8-906a-d094660d31fb","uid":"79f08c35-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690336","creationTimestamp":"2018-05-16T20:48:24Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-amq-s2i","externalID":"1b1f2f0b-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 + A-MQ (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2045dc-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b2045dc-0d11-11e8-906a-d094660d31fb","uid":"8379fc3c-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690475","creationTimestamp":"2018-05-16T20:48:40Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-basic-s2i","externalID":"1b2045dc-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 (no https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b215bad-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b215bad-0d11-11e8-906a-d094660d31fb","uid":"776fb822-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690307","creationTimestamp":"2018-05-16T20:48:20Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-https-s2i","externalID":"1b215bad-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b22a820-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b22a820-0d11-11e8-906a-d094660d31fb","uid":"87690844-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690521","creationTimestamp":"2018-05-16T20:48:46Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-mongodb-persistent-s2i","externalID":"1b22a820-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 + MongoDB (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2418a5-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b2418a5-0d11-11e8-906a-d094660d31fb","uid":"89ace33d-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690552","creationTimestamp":"2018-05-16T20:48:50Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-mongodb-s2i","externalID":"1b2418a5-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"Boss
        EAP 7.0 + MongoDB (Ephemeral with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2571a9-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b2571a9-0d11-11e8-906a-d094660d31fb","uid":"7ae4b562-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690346","creationTimestamp":"2018-05-16T20:48:25Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-mysql-persistent-s2i","externalID":"1b2571a9-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 + MySQL (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b27091e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b27091e-0d11-11e8-906a-d094660d31fb","uid":"870d836c-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690516","creationTimestamp":"2018-05-16T20:48:46Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-mysql-s2i","externalID":"1b27091e-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 + MySQL (Ephemeral with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2870cb-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b2870cb-0d11-11e8-906a-d094660d31fb","uid":"767b880f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690296","creationTimestamp":"2018-05-16T20:48:18Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-postgresql-persistent-s2i","externalID":"1b2870cb-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 + PostgreSQL (Persistent with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b29c289-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b29c289-0d11-11e8-906a-d094660d31fb","uid":"7568ddfc-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690264","creationTimestamp":"2018-05-16T20:48:16Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-postgresql-s2i","externalID":"1b29c289-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 + PostgreSQL (Ephemeral with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2b12c2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b2b12c2-0d11-11e8-906a-d094660d31fb","uid":"844f9543-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690485","creationTimestamp":"2018-05-16T20:48:41Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-sso-s2i","externalID":"1b2b12c2-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 Single Sign-On application. For more information about using
        this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 + Single Sign-On (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2c47f8-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b2c47f8-0d11-11e8-906a-d094660d31fb","uid":"76d7230a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690301","creationTimestamp":"2018-05-16T20:48:19Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-third-party-db-s2i","externalID":"1b2c47f8-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 DB application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 (with https, DB drivers)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2d95bd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b2d95bd-0d11-11e8-906a-d094660d31fb","uid":"8023824a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690428","creationTimestamp":"2018-05-16T20:48:34Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-amq-persistent-s2i","externalID":"1b2d95bd-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 + A-MQ (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2ee638-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b2ee638-0d11-11e8-906a-d094660d31fb","uid":"79d20ac3-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690334","creationTimestamp":"2018-05-16T20:48:24Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-amq-s2i","externalID":"1b2ee638-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 + A-MQ (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2fec21-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b2fec21-0d11-11e8-906a-d094660d31fb","uid":"86936ec6-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690511","creationTimestamp":"2018-05-16T20:48:45Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-basic-s2i","externalID":"1b2fec21-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 (no https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b30f33d-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b30f33d-0d11-11e8-906a-d094660d31fb","uid":"7b4046b9-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690352","creationTimestamp":"2018-05-16T20:48:26Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-https-s2i","externalID":"1b30f33d-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b323cdd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b323cdd-0d11-11e8-906a-d094660d31fb","uid":"8285dfd8-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690465","creationTimestamp":"2018-05-16T20:48:38Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-mongodb-persistent-s2i","externalID":"1b323cdd-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 + MongoDB (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b33c9c0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b33c9c0-0d11-11e8-906a-d094660d31fb","uid":"778e369f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690309","creationTimestamp":"2018-05-16T20:48:20Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-mongodb-s2i","externalID":"1b33c9c0-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 + MongoDB (Ephemeral with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3524cd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b3524cd-0d11-11e8-906a-d094660d31fb","uid":"84ab281c-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690488","creationTimestamp":"2018-05-16T20:48:42Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-mysql-persistent-s2i","externalID":"1b3524cd-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 + MySQL (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b367189-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b367189-0d11-11e8-906a-d094660d31fb","uid":"74944a21-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690232","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-mysql-s2i","externalID":"1b367189-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 + MySQL (Ephemeral with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b37c2b4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b37c2b4-0d11-11e8-906a-d094660d31fb","uid":"8543b17b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690496","creationTimestamp":"2018-05-16T20:48:43Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-postgresql-persistent-s2i","externalID":"1b37c2b4-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 + PostgreSQL (Persistent with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3920fe-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b3920fe-0d11-11e8-906a-d094660d31fb","uid":"8637e3c3-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690506","creationTimestamp":"2018-05-16T20:48:44Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-postgresql-s2i","externalID":"1b3920fe-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 + PostgreSQL (Ephemeral with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3a6f10-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b3a6f10-0d11-11e8-906a-d094660d31fb","uid":"831e6bf1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690472","creationTimestamp":"2018-05-16T20:48:39Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-sso-s2i","externalID":"1b3a6f10-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 Single Sign-On application. For more information about using
        this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 + Single Sign-On (with https)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3b9a4f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b3b9a4f-0d11-11e8-906a-d094660d31fb","uid":"81549fe0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690451","creationTimestamp":"2018-05-16T20:48:36Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-third-party-db-s2i","externalID":"1b3b9a4f-0d11-11e8-906a-d094660d31fb","description":"An
        example EAP 7 DB application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 (with https, DB drivers)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3c99d8-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b3c99d8-0d11-11e8-906a-d094660d31fb","uid":"88f5cbcf-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690543","creationTimestamp":"2018-05-16T20:48:49Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat7-basic-s2i","externalID":"1b3c99d8-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 (no https)"},"tags":["tomcat","tomcat7","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3d897e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b3d897e-0d11-11e8-906a-d094660d31fb","uid":"7e1cad56-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690395","creationTimestamp":"2018-05-16T20:48:31Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat7-https-s2i","externalID":"1b3d897e-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 (with https)"},"tags":["tomcat","tomcat7","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3eb4d0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b3eb4d0-0d11-11e8-906a-d094660d31fb","uid":"7fc7eb92-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690419","creationTimestamp":"2018-05-16T20:48:34Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat7-mongodb-persistent-s2i","externalID":"1b3eb4d0-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MongoDB applications with persistent storage built using
        S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 + MongoDB (Persistent with https)"},"tags":["tomcat","tomcat7","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3fe350-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b3fe350-0d11-11e8-906a-d094660d31fb","uid":"7e3b2802-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690397","creationTimestamp":"2018-05-16T20:48:31Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat7-mongodb-s2i","externalID":"1b3fe350-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MongoDB applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 + MongoDB (Ephemeral with https)"},"tags":["tomcat","tomcat7","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b415503-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b415503-0d11-11e8-906a-d094660d31fb","uid":"7d659d94-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690382","creationTimestamp":"2018-05-16T20:48:30Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat7-mysql-persistent-s2i","externalID":"1b415503-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MySQL applications with persistent storage built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 + MySQL (Persistent with https)"},"tags":["tomcat","tomcat7","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b427d20-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b427d20-0d11-11e8-906a-d094660d31fb","uid":"7e96bcae-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690400","creationTimestamp":"2018-05-16T20:48:32Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat7-mysql-s2i","externalID":"1b427d20-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MySQL applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 + MySQL (Ephemeral with https)"},"tags":["tomcat","tomcat7","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b43abfc-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b43abfc-0d11-11e8-906a-d094660d31fb","uid":"88b8c29e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690540","creationTimestamp":"2018-05-16T20:48:49Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat7-postgresql-persistent-s2i","externalID":"1b43abfc-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS PostgreSQL applications with persistent storage built using
        S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 + PostgreSQL (Persistent with https)"},"tags":["tomcat","tomcat7","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b44d2d8-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b44d2d8-0d11-11e8-906a-d094660d31fb","uid":"85253f5e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690494","creationTimestamp":"2018-05-16T20:48:43Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat7-postgresql-s2i","externalID":"1b44d2d8-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS PostgreSQL applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 + PostgreSQL (Ephemeral with https)"},"tags":["tomcat","tomcat7","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b45c444-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b45c444-0d11-11e8-906a-d094660d31fb","uid":"85623f65-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690497","creationTimestamp":"2018-05-16T20:48:43Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat8-basic-s2i","externalID":"1b45c444-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 (no https)"},"tags":["tomcat","tomcat8","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b46be0f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b46be0f-0d11-11e8-906a-d094660d31fb","uid":"7d0a0a33-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690378","creationTimestamp":"2018-05-16T20:48:29Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat8-https-s2i","externalID":"1b46be0f-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 (with https)"},"tags":["tomcat","tomcat8","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b47db88-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b47db88-0d11-11e8-906a-d094660d31fb","uid":"7826cfb6-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690316","creationTimestamp":"2018-05-16T20:48:21Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat8-mongodb-persistent-s2i","externalID":"1b47db88-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MongoDB applications with persistent storage built using
        S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 + MongoDB (Persistent with https)"},"tags":["tomcat","tomcat8","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b49061d-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b49061d-0d11-11e8-906a-d094660d31fb","uid":"74927e31-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690227","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat8-mongodb-s2i","externalID":"1b49061d-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MongoDB applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 + MongoDB (Ephemeral with https)"},"tags":["tomcat","tomcat8","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b4a4709-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b4a4709-0d11-11e8-906a-d094660d31fb","uid":"81732fc4-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690452","creationTimestamp":"2018-05-16T20:48:36Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat8-mysql-persistent-s2i","externalID":"1b4a4709-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MySQL applications with persistent storage built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 + MySQL (Persistent with https)"},"tags":["tomcat","tomcat8","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b4b78fd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b4b78fd-0d11-11e8-906a-d094660d31fb","uid":"7dc11ba7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690390","creationTimestamp":"2018-05-16T20:48:30Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat8-mysql-s2i","externalID":"1b4b78fd-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MySQL applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 + MySQL (Ephemeral with https)"},"tags":["tomcat","tomcat8","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b4cab25-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b4cab25-0d11-11e8-906a-d094660d31fb","uid":"81ed45b5-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690457","creationTimestamp":"2018-05-16T20:48:37Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat8-postgresql-persistent-s2i","externalID":"1b4cab25-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS PostgreSQL applications with persistent storage built using
        S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 + PostgreSQL (Persistent with https)"},"tags":["tomcat","tomcat8","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b4dd21a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b4dd21a-0d11-11e8-906a-d094660d31fb","uid":"82c2ebe2-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690467","creationTimestamp":"2018-05-16T20:48:39Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws30-tomcat8-postgresql-s2i","externalID":"1b4dd21a-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS PostgreSQL applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-tomcat","displayName":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 + (PostgreSQL with https)"},"tags":["tomcat","tomcat8","java","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b4f1799-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b4f1799-0d11-11e8-906a-d094660d31fb","uid":"820bc76b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690458","creationTimestamp":"2018-05-16T20:48:37Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat7-basic-s2i","externalID":"1b4f1799-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 7 (no https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["tomcat","tomcat7","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b50193c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b50193c-0d11-11e8-906a-d094660d31fb","uid":"86eef85b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690514","creationTimestamp":"2018-05-16T20:48:46Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat7-https-s2i","externalID":"1b50193c-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Web Server application configured for use with https. For more
        information about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 7 (with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["tomcat","tomcat7","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b514d1c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b514d1c-0d11-11e8-906a-d094660d31fb","uid":"861953c4-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690505","creationTimestamp":"2018-05-16T20:48:44Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat7-mongodb-persistent-s2i","externalID":"1b514d1c-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Web Server application with a MongoDB database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 7 + MongoDB (with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat7","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b528072-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b528072-0d11-11e8-906a-d094660d31fb","uid":"7d840ca0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690384","creationTimestamp":"2018-05-16T20:48:30Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat7-mongodb-s2i","externalID":"1b528072-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MongoDB applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 7 + MongoDB (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat7","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b53b99a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b53b99a-0d11-11e8-906a-d094660d31fb","uid":"84128691-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690482","creationTimestamp":"2018-05-16T20:48:41Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat7-mysql-persistent-s2i","externalID":"1b53b99a-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Web Server application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"Red
        Hat JBoss Web Server 3.1 Apache Tomcat 7 + MySQL (with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat7","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b54f013-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b54f013-0d11-11e8-906a-d094660d31fb","uid":"843111c7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690483","creationTimestamp":"2018-05-16T20:48:41Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat7-mysql-s2i","externalID":"1b54f013-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MySQL applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 7 + MySQL (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat7","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5628e0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b5628e0-0d11-11e8-906a-d094660d31fb","uid":"7a89610e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690343","creationTimestamp":"2018-05-16T20:48:25Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat7-postgresql-persistent-s2i","externalID":"1b5628e0-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Web Server application with a PostgreSQL database. For more
        information about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 7 + PostgreSQL (with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat7","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5761aa-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b5761aa-0d11-11e8-906a-d094660d31fb","uid":"79b38978-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690333","creationTimestamp":"2018-05-16T20:48:23Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat7-postgresql-s2i","externalID":"1b5761aa-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS PostgreSQL applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 7 + PostgreSQL (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat7","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b585a86-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b585a86-0d11-11e8-906a-d094660d31fb","uid":"7fe67036-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690425","creationTimestamp":"2018-05-16T20:48:34Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat8-basic-s2i","externalID":"1b585a86-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Web Server application. For more information about using this
        template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 8 (no https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["tomcat","tomcat8","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b594bc2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b594bc2-0d11-11e8-906a-d094660d31fb","uid":"8580c42e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690498","creationTimestamp":"2018-05-16T20:48:43Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat8-https-s2i","externalID":"1b594bc2-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Web Server application. For more information about using this
        template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 8 (with https)","providerDisplayName":"Red Hat,
        Inc."},"tags":["tomcat","tomcat8","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5a68bf-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b5a68bf-0d11-11e8-906a-d094660d31fb","uid":"763e8624-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690290","creationTimestamp":"2018-05-16T20:48:18Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat8-mongodb-persistent-s2i","externalID":"1b5a68bf-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Web Server application with a MongoDB database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 8 + MongoDB (with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat8","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5b8f2f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b5b8f2f-0d11-11e8-906a-d094660d31fb","uid":"7494ec9d-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690234","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat8-mongodb-s2i","externalID":"1b5b8f2f-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MongoDB applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 8 + MongoDB (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat8","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5d0b17-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b5d0b17-0d11-11e8-906a-d094660d31fb","uid":"79766709-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690330","creationTimestamp":"2018-05-16T20:48:23Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat8-mysql-persistent-s2i","externalID":"1b5d0b17-0d11-11e8-906a-d094660d31fb","description":"An
        example JBoss Web Server application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 8 + MySQL (with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat8","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5e40b2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b5e40b2-0d11-11e8-906a-d094660d31fb","uid":"85dc5a78-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690501","creationTimestamp":"2018-05-16T20:48:44Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat8-mysql-s2i","externalID":"1b5e40b2-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS MySQL applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 8 + MySQL (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat8","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5f72b4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b5f72b4-0d11-11e8-906a-d094660d31fb","uid":"75876709-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690265","creationTimestamp":"2018-05-16T20:48:16Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat8-postgresql-persistent-s2i","externalID":"1b5f72b4-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS PostgreSQL applications with persistent storage built using
        S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.1 Apache Tomcat 8 + PostgreSQL (with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat8","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b609b10-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b609b10-0d11-11e8-906a-d094660d31fb","uid":"78a0de0e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690321","creationTimestamp":"2018-05-16T20:48:22Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"jws31-tomcat8-postgresql-s2i","externalID":"1b609b10-0d11-11e8-906a-d094660d31fb","description":"Application
        template for JWS PostgreSQL applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-tomcat","displayName":"JBoss
        Web Server 3.0 Apache Tomcat 8 + PostgreSQL (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["tomcat","tomcat8","java","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b619a6b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b619a6b-0d11-11e8-906a-d094660d31fb","uid":"7957ea29-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690329","creationTimestamp":"2018-05-16T20:48:23Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-karaf2-camel-amq","externalID":"1b619a6b-0d11-11e8-906a-d094660d31fb","description":"Camel
        route using ActiveMQ in Karaf container. This quickstart shows how to use
        Camel in a Karaf Container using Blueprint to connect to the A-MQ xPaaS message
        broker on OpenShift that should already be installed, one simple way to run
        a A-MQ service is following the documentation of the A-MQ xPaaS image for
        OpenShift related to the amq63-basic template.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","karaf","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b62801e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b62801e-0d11-11e8-906a-d094660d31fb","uid":"749542ab-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690235","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-karaf2-camel-log","externalID":"1b62801e-0d11-11e8-906a-d094660d31fb","description":"A
        simple Camel route in Karaf container. This quickstart shows a simple Apache
        Camel application that logs a message to the server log every 5th second.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","karaf","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b636395-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b636395-0d11-11e8-906a-d094660d31fb","uid":"7f10cbdf-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690407","creationTimestamp":"2018-05-16T20:48:32Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-karaf2-camel-rest-sql","externalID":"1b636395-0d11-11e8-906a-d094660d31fb","description":"Camel
        example using Rest DSL with SQL Database in Karaf container.  This example
        demonstrates how to use SQL via JDBC along with Camel''s REST DSL to expose
        a RESTful API. The OpenShift MySQL container image should already be installed
        and running on your OpenShift installation, one simple way to run a MySQL
        service is following the documentation of the Openshift MySQL container image
        related to the mysql-ephemeral template..","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","karaf","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b644c87-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b644c87-0d11-11e8-906a-d094660d31fb","uid":"872c039f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690519","creationTimestamp":"2018-05-16T20:48:46Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-karaf2-cxf-rest","externalID":"1b644c87-0d11-11e8-906a-d094660d31fb","description":"REST
        example using CXF in Karaf container. This quickstart demonstrates how to
        create a RESTful (JAX-RS) web service using CXF and expose it through the
        OSGi HTTP Service","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","karaf","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b652b20-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b652b20-0d11-11e8-906a-d094660d31fb","uid":"78dde21b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690324","creationTimestamp":"2018-05-16T20:48:22Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"openjdk18-web-basic-s2i","externalID":"1b652b20-0d11-11e8-906a-d094660d31fb","description":"An
        example Java application using OpenJDK 8. For more information about using
        this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-rh-openjdk","displayName":"OpenJDK
        8","providerDisplayName":"Red Hat, Inc."},"tags":["java"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b668a4a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b668a4a-0d11-11e8-906a-d094660d31fb","uid":"7f6c6766-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690415","creationTimestamp":"2018-05-16T20:48:33Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver63-amq-mysql-persistent-s2i","externalID":"1b668a4a-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server AMQ and
        MySQL applications with persistent storage built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + A-MQ + MySQL (Persistent
        with https)"},"tags":["processserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b680368-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b680368-0d11-11e8-906a-d094660d31fb","uid":"835b751f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690474","creationTimestamp":"2018-05-16T20:48:40Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver63-amq-mysql-s2i","externalID":"1b680368-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server AMQ and
        MySQL applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + A-MQ + MySQL (Ephemeral
        with https)"},"tags":["processserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b69897f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b69897f-0d11-11e8-906a-d094660d31fb","uid":"7b033b71-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690347","creationTimestamp":"2018-05-16T20:48:26Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver63-amq-postgresql-persistent-s2i","externalID":"1b69897f-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server AMQ and
        PostgreSQL applications with persistent storage built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + A-MQ + PostgreSQL (Persistent
        with https)"},"tags":["processserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b6b4426-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b6b4426-0d11-11e8-906a-d094660d31fb","uid":"7bf77eb1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690362","creationTimestamp":"2018-05-16T20:48:27Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver63-amq-postgresql-s2i","externalID":"1b6b4426-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server AMQ and
        PostgreSQL applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + A-MQ + PostgreSQL (Ephemeral
        with https)"},"tags":["processserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b6c548d-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b6c548d-0d11-11e8-906a-d094660d31fb","uid":"7492e735-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690228","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver63-basic-s2i","externalID":"1b6c548d-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server applications
        built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server (no https)"},"tags":["processserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b6d7849-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b6d7849-0d11-11e8-906a-d094660d31fb","uid":"7b7d4e99-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690355","creationTimestamp":"2018-05-16T20:48:26Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver63-mysql-persistent-s2i","externalID":"1b6d7849-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server MySQL
        applications with persistent storage built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + MySQL (Persistent with
        https)"},"tags":["processserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b6ebde1-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b6ebde1-0d11-11e8-906a-d094660d31fb","uid":"7e59b0ae-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690398","creationTimestamp":"2018-05-16T20:48:31Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver63-mysql-s2i","externalID":"1b6ebde1-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server MySQL
        applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + MySQL (Ephemeral with
        https)"},"tags":["processserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b701477-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b701477-0d11-11e8-906a-d094660d31fb","uid":"74939923-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690230","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver63-postgresql-persistent-s2i","externalID":"1b701477-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server PostgreSQL
        applications with persistent storage built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + PostgreSQL (Persistent
        with https)"},"tags":["processserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b715303-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b715303-0d11-11e8-906a-d094660d31fb","uid":"88202956-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690529","creationTimestamp":"2018-05-16T20:48:48Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver63-postgresql-s2i","externalID":"1b715303-0d11-11e8-906a-d094660d31fb","description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server PostgreSQL
        applications built using S2I.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + PostgreSQL (Ephemeral
        with https)"},"tags":["processserver","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b72dad7-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b72dad7-0d11-11e8-906a-d094660d31fb","uid":"80da9708-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690442","creationTimestamp":"2018-05-16T20:48:35Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver64-amq-mysql-persistent-s2i","externalID":"1b72dad7-0d11-11e8-906a-d094660d31fb","description":"An
        example BPM Suite application with A-MQ and a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-processserver","displayName":"JBoss
        BPM Suite 6.4 intelligent process server + A-MQ + MySQL (with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["processserver","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b745fc1-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b745fc1-0d11-11e8-906a-d094660d31fb","uid":"77acbe14-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690310","creationTimestamp":"2018-05-16T20:48:20Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver64-amq-mysql-s2i","externalID":"1b745fc1-0d11-11e8-906a-d094660d31fb","description":"An
        example BPM Suite application with A-MQ and a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-processserver","displayName":"JBoss
        BPM Suite 6.4 intelligent process server + A-MQ + MySQL (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["processserver","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b75d938-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b75d938-0d11-11e8-906a-d094660d31fb","uid":"7e783828-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690399","creationTimestamp":"2018-05-16T20:48:31Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver64-amq-postgresql-persistent-s2i","externalID":"1b75d938-0d11-11e8-906a-d094660d31fb","description":"An
        example BPM Suite application with A-MQ and a PostgreSQL database. For more
        information about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-processserver","displayName":"JBoss
        BPM Suite 6.4 intelligent process server + A-MQ + PostgreSQL (with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["processserver","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b778cd6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b778cd6-0d11-11e8-906a-d094660d31fb","uid":"799574ca-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690332","creationTimestamp":"2018-05-16T20:48:23Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver64-amq-postgresql-s2i","externalID":"1b778cd6-0d11-11e8-906a-d094660d31fb","description":"An
        example BPM Suite application with A-MQ and a PostgreSQL database. For more
        information about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-processserver","displayName":"JBoss
        BPM Suite 6.4 intelligent process server + A-MQ + PostgreSQL (Ephemeral with
        https)","providerDisplayName":"Red Hat, Inc."},"tags":["processserver","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b789790-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b789790-0d11-11e8-906a-d094660d31fb","uid":"7ccd0a89-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690373","creationTimestamp":"2018-05-16T20:48:29Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver64-basic-s2i","externalID":"1b789790-0d11-11e8-906a-d094660d31fb","description":"An
        example BPM Suite application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-processserver","displayName":"JBoss
        BPM Suite 6.4 intelligent process server (no https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["processserver","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b79cc83-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b79cc83-0d11-11e8-906a-d094660d31fb","uid":"8656691d-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690507","creationTimestamp":"2018-05-16T20:48:45Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver64-mysql-persistent-s2i","externalID":"1b79cc83-0d11-11e8-906a-d094660d31fb","description":"An
        example BPM Suite application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-processserver","displayName":"JBoss
        BPM Suite 6.4 intelligent process server + MySQL (with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["processserver","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b7b0f60-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b7b0f60-0d11-11e8-906a-d094660d31fb","uid":"88d73932-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690542","creationTimestamp":"2018-05-16T20:48:49Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver64-mysql-s2i","externalID":"1b7b0f60-0d11-11e8-906a-d094660d31fb","description":"An
        example BPM Suite application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-processserver","displayName":"JBoss
        BPM Suite 6.4 intelligent process server + MySQL (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["processserver","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b7c4df6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b7c4df6-0d11-11e8-906a-d094660d31fb","uid":"82a484db-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690466","creationTimestamp":"2018-05-16T20:48:38Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver64-postgresql-persistent-s2i","externalID":"1b7c4df6-0d11-11e8-906a-d094660d31fb","description":"An
        example BPM Suite application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-processserver","displayName":"JBoss
        BPM Suite 6.4 intelligent process server + PostgreSQL (with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["processserver","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b7d97f4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b7d97f4-0d11-11e8-906a-d094660d31fb","uid":"7ceb843f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690377","creationTimestamp":"2018-05-16T20:48:29Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"processserver64-postgresql-s2i","externalID":"1b7d97f4-0d11-11e8-906a-d094660d31fb","description":"An
        example BPM Suite application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-processserver","displayName":"JBoss
        BPM Suite 6.4 intelligent process server + PostgreSQL (Ephemeral with https)","providerDisplayName":"Red
        Hat, Inc."},"tags":["processserver","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b7e878c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b7e878c-0d11-11e8-906a-d094660d31fb","uid":"7863d6f8-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690320","creationTimestamp":"2018-05-16T20:48:21Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-spring-boot-camel-amq","externalID":"1b7e878c-0d11-11e8-906a-d094660d31fb","description":"Spring
        Boot, Camel and ActiveMQ QuickStart. This quickstart demonstrates how to connect
        a Spring-Boot application to an ActiveMQ broker and use JMS messaging between
        two Camel routes using OpenShift. In this example we will use two containers,
        one container to run as a ActiveMQ broker, and another as a client to the
        broker, where the Camel routes are running. This quickstart requires the ActiveMQ
        broker has been deployed and running first, one simple way to run a A-MQ service
        is following the documentation of the A-MQ xPaaS image for OpenShift related
        to the amq63-basic template","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","springboot","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b7f6b53-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b7f6b53-0d11-11e8-906a-d094660d31fb","uid":"82675265-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690462","creationTimestamp":"2018-05-16T20:48:38Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-spring-boot-camel-config","externalID":"1b7f6b53-0d11-11e8-906a-d094660d31fb","description":"Spring
        Boot and Camel using ConfigMaps and Secrets. This quickstart demonstrates
        how to configure a Spring-Boot application using OpenShift ConfigMaps and
        Secrets. This example requires that a ConfigMap named camel-config and a Secret
        named camel-config are present in the namespace before the application is
        deployed, instruction about how to manually create them can be found here:
        https://github.com/fabric8-quickstarts/spring-boot-camel-config/blob/fis-2.0.x.redhat/README.redhat.md
        ","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","springboot","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8042e2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b8042e2-0d11-11e8-906a-d094660d31fb","uid":"7c7178fa-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690367","creationTimestamp":"2018-05-16T20:48:28Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-spring-boot-camel-drools","externalID":"1b8042e2-0d11-11e8-906a-d094660d31fb","description":"Spring-Boot,
        Camel and JBoss BRMS QuickStart. This example demonstrates how you can use
        Apache Camel and JBoss BRMS with Spring Boot on OpenShift. DRL files contain
        simple rules which are used to create knowledge session via Spring configuration
        file. Camel routes, defined via Spring as well, are then used to e.g. pass
        (insert) the Body of the message as a POJO to Drools engine for execution.
        A Kie Server should be deployed and configured before running the application,
        more information about how to configure it can be found at https://github.com/fabric8-quickstarts/spring-boot-camel-drools/blob/fis-2.0.x.redhat/README.redhat.md","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","springboot","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b81185e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b81185e-0d11-11e8-906a-d094660d31fb","uid":"7493eec5-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690231","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-spring-boot-camel-infinispan","externalID":"1b81185e-0d11-11e8-906a-d094660d31fb","description":"Spring
        Boot, Camel and JBoss Data Grid QuickStart. This quickstart demonstrates how
        to connect a Spring-Boot application to a JBoss Data Grid (or Infinispan)
        server using the Hot Rod protocol. It requires that the data grid server (or
        cluster) has been deployed first, one simple way to run a JDG service is following
        the documentation of the JDG xPaaS image for OpenShift related to the datagrid65-basic
        template.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","springboot","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b81ff44-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b81ff44-0d11-11e8-906a-d094660d31fb","uid":"82e15fd7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690469","creationTimestamp":"2018-05-16T20:48:39Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-spring-boot-camel-rest-sql","externalID":"1b81ff44-0d11-11e8-906a-d094660d31fb","description":"Spring
        Boot, Camel REST DSL and MySQL QuickStart. This quickstart demonstrates how
        to connect a Spring Boot application to a MySQL database and expose a REST
        API with Camel on OpenShift. In this example we will use two containers, one
        container to run as a MySQL server, and another as a client to the database,
        where the Camel routes are running. This quickstart requires the MySQL server
        to be deployed and started first, one simple way to run a MySQL service is
        following the documentation of the OpenShift MySQL container image related
        to the mysql-ephemeral template.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","springboot","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b82e6e4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b82e6e4-0d11-11e8-906a-d094660d31fb","uid":"77142f9b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690304","creationTimestamp":"2018-05-16T20:48:19Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-spring-boot-camel-teiid","externalID":"1b82e6e4-0d11-11e8-906a-d094660d31fb","description":"Spring-Boot,
        Camel and JBoss Data Virtualization QuickStart. This example demonstrates
        how to connect Apache Camel to a remote JBoss Data Virtualization (or Teiid)
        Server using the JDBC protocol. This quickstart assumes that the JDV server
        is already running and configured on OpenShift, more information about to
        setup a JDV server can be found at https://github.com/fabric8-quickstarts/spring-boot-camel-teiid/blob/fis-2.0.x.redhat/README.redhat.md","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","springboot","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b83bf1e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b83bf1e-0d11-11e8-906a-d094660d31fb","uid":"7b21bc49-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690350","creationTimestamp":"2018-05-16T20:48:26Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-spring-boot-camel","externalID":"1b83bf1e-0d11-11e8-906a-d094660d31fb","description":"Spring-Boot
        and Camel QuickStart. This example demonstrates how you can use Apache Camel
        with Spring Boot on Openshift. The quickstart uses Spring Boot to configure
        a little application that includes a Camel route that triggeres a message
        every 5th second, and routes the message to a log.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","springboot","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b84d28a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b84d28a-0d11-11e8-906a-d094660d31fb","uid":"898e5dde-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690550","creationTimestamp":"2018-05-16T20:48:50Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-spring-boot-camel-xml","externalID":"1b84d28a-0d11-11e8-906a-d094660d31fb","description":"Spring-Boot
        and Camel Xml QuickStart. This example demonstrates how you can use Apache
        Camel with Spring Boot on Openshift. The quickstart uses Spring Boot to configure
        a little application that includes a Camel route (in Spring xml) that triggeres
        a message every 5th second, and routes the message to a log.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","springboot","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b85ae5f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b85ae5f-0d11-11e8-906a-d094660d31fb","uid":"82ffe776-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690471","creationTimestamp":"2018-05-16T20:48:39Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-spring-boot-cxf-jaxrs","externalID":"1b85ae5f-0d11-11e8-906a-d094660d31fb","description":"Spring-Boot
        and CXF JAXRS QuickStart. This example demonstrates how you can use Apache
        CXF JAXRS with Spring Boot on Openshift. The quickstart uses Spring Boot to
        configure a little application that includes a CXF JAXRS endpoint with Swagger
        enabled.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","springboot","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b869652-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b869652-0d11-11e8-906a-d094660d31fb","uid":"8506b8e3-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690493","creationTimestamp":"2018-05-16T20:48:42Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"s2i-spring-boot-cxf-jaxws","externalID":"1b869652-0d11-11e8-906a-d094660d31fb","description":"Spring-Boot
        and CXF JAXWS QuickStart. This example demonstrates how you can use Apache
        CXF JAXWS with Spring Boot on Openshift. The quickstart uses Spring Boot to
        configure a little application that includes a CXF JAXWS endpoint.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss"},"tags":["quickstart","java","springboot","fis","jboss-fuse"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b87a9db-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b87a9db-0d11-11e8-906a-d094660d31fb","uid":"891449ce-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690544","creationTimestamp":"2018-05-16T20:48:49Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"sso70-https","externalID":"1b87a9db-0d11-11e8-906a-d094660d31fb","description":"Application
        template for SSO 7.0","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat Single Sign-On 7.0"},"tags":["sso","keycloak","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b88dcce-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b88dcce-0d11-11e8-906a-d094660d31fb","uid":"74b1c019-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690237","creationTimestamp":"2018-05-16T20:48:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"sso70-mysql-persistent","externalID":"1b88dcce-0d11-11e8-906a-d094660d31fb","description":"Application
        template for SSO 7.0 MySQL applications with persistent storage","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat Single Sign-On 7.0 + MySQL (Persistent)"},"tags":["sso","keycloak","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8a1d3b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b8a1d3b-0d11-11e8-906a-d094660d31fb","uid":"75e2eea8-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690282","creationTimestamp":"2018-05-16T20:48:17Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"sso70-mysql","externalID":"1b8a1d3b-0d11-11e8-906a-d094660d31fb","description":"Application
        template for SSO 7.0 MySQL applications","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat Single Sign-On 7.0 + MySQL (Ephemeral)"},"tags":["sso","keycloak","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8b58cd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b8b58cd-0d11-11e8-906a-d094660d31fb","uid":"7aa7b0fa-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690344","creationTimestamp":"2018-05-16T20:48:25Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"sso70-postgresql-persistent","externalID":"1b8b58cd-0d11-11e8-906a-d094660d31fb","description":"Application
        template for SSO 7.0 PostgreSQL applications with persistent storage","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat Single Sign-On 7.0 + PostgreSQL (Persistent)"},"tags":["sso","keycloak","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8c9061-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b8c9061-0d11-11e8-906a-d094660d31fb","uid":"8674dd5a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690509","creationTimestamp":"2018-05-16T20:48:45Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"sso70-postgresql","externalID":"1b8c9061-0d11-11e8-906a-d094660d31fb","description":"Application
        template for SSO 7.0 PostgreSQL applications","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-jboss","displayName":"Red
        Hat Single Sign-On 7.0 + PostgreSQL (Ephemeral)"},"tags":["sso","keycloak","jboss","xpaas"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8dcb19-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b8dcb19-0d11-11e8-906a-d094660d31fb","uid":"7eb545d1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690401","creationTimestamp":"2018-05-16T20:48:32Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"sso71-https","externalID":"1b8dcb19-0d11-11e8-906a-d094660d31fb","description":"An
        example SSO 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-sso","displayName":"Single
        Sign-On 7.1","providerDisplayName":"Red Hat, Inc."},"tags":["sso","keycloak","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8f17dd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b8f17dd-0d11-11e8-906a-d094660d31fb","uid":"7da28ca1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690387","creationTimestamp":"2018-05-16T20:48:30Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"sso71-mysql-persistent","externalID":"1b8f17dd-0d11-11e8-906a-d094660d31fb","description":"An
        example SSO 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-sso","displayName":"Single
        Sign-On 7.1 + MySQL","providerDisplayName":"Red Hat, Inc."},"tags":["sso","keycloak","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b90587b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b90587b-0d11-11e8-906a-d094660d31fb","uid":"807efaa6-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690433","creationTimestamp":"2018-05-16T20:48:35Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"sso71-mysql","externalID":"1b90587b-0d11-11e8-906a-d094660d31fb","description":"An
        example SSO 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-sso","displayName":"Single
        Sign-On 7.1 + MySQL (Ephemeral)","providerDisplayName":"Red Hat, Inc."},"tags":["sso","keycloak","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b9189ec-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b9189ec-0d11-11e8-906a-d094660d31fb","uid":"7bba547c-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690358","creationTimestamp":"2018-05-16T20:48:27Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"sso71-postgresql-persistent","externalID":"1b9189ec-0d11-11e8-906a-d094660d31fb","description":"An
        example SSO 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-sso","displayName":"Single
        Sign-On 7.1 + PostgreSQL","providerDisplayName":"Red Hat, Inc."},"tags":["sso","keycloak","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b9304c4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1b9304c4-0d11-11e8-906a-d094660d31fb","uid":"76f5adce-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690303","creationTimestamp":"2018-05-16T20:48:19Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"sso71-postgresql","externalID":"1b9304c4-0d11-11e8-906a-d094660d31fb","description":"An
        example SSO 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-sso","displayName":"Single
        Sign-On 7.1 + PostgreSQL (Ephemeral)","providerDisplayName":"Red Hat, Inc."},"tags":["sso","keycloak","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1e443dec-594a-11e8-ba7e-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1e443dec-594a-11e8-ba7e-d094660d31fb","uid":"81cec4bf-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690456","creationTimestamp":"2018-05-16T20:48:37Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"nginx-example","externalID":"1e443dec-594a-11e8-ba7e-d094660d31fb","description":"An
        example Nginx HTTP server and a reverse proxy (nginx) application that serves
        static content. For more information about using this template, including
        OpenShift considerations, see https://github.com/sclorg/nginx-ex/blob/master/README.md.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-nginx","displayName":"Nginx
        HTTP server and a reverse proxy","documentationUrl":"https://github.com/sclorg/nginx-ex","longDescription":"This
        template defines resources needed to develop a static application served by
        Nginx HTTP server and a reverse proxy (nginx), including a build configuration
        and application deployment configuration.","providerDisplayName":"Red Hat,
        Inc.","supportUrl":"https://access.redhat.com"},"tags":["quickstart","nginx"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1ec7ab69-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/1ec7ab69-0d11-11e8-906a-d094660d31fb","uid":"75c473ec-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690271","creationTimestamp":"2018-05-16T20:48:17Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"registry-console","externalID":"1ec7ab69-0d11-11e8-906a-d094660d31fb","description":"Template
        for deploying registry web console. Requires cluster-admin.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"tags":["infrastructure"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"2c259ddd8059b9bc65081e07bf20058f","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/2c259ddd8059b9bc65081e07bf20058f","uid":"a6511ee7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690841","creationTimestamp":"2018-05-16T20:49:38Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"rh-mariadb-apb","externalID":"2c259ddd8059b9bc65081e07bf20058f","description":"Mariadb
        apb implementation","bindable":true,"bindingRetrievable":false,"planUpdatable":true,"externalMetadata":{"console.openshift.io/iconClass":"icon-mariadb","dependencies":["registry.access.redhat.com/rhscl/mariadb-100-rhel7","registry.access.redhat.com/rhscl/mariadb-101-rhel7","registry.access.redhat.com/rhscl/mariadb-102-rhel7"],"displayName":"MariaDB
        (APB)","documentationUrl":"https://mariadb.com/kb/en/mariadb/documentation/","longDescription":"Deploys
        a bindable mariadb instance","providerDisplayName":"Red Hat, Inc."},"tags":["database","mariadb"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"73ead67495322cc462794387fa9884f5","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/73ead67495322cc462794387fa9884f5","uid":"a6517588-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690842","creationTimestamp":"2018-05-16T20:49:38Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"rh-mysql-apb","externalID":"73ead67495322cc462794387fa9884f5","description":"Software
        Collections MySQL APB","bindable":true,"bindingRetrievable":false,"planUpdatable":true,"externalMetadata":{"console.openshift.io/iconClass":"icon-mysql-database","dependencies":["registry.access.redhat.com/rhscl/mysql-56-rhel7","registry.access.redhat.com/rhscl/mysql-57-rhel7"],"displayName":"MySQL
        (APB)","documentationUrl":"https://github.com/sclorg/mysql-container/","longDescription":"An
        Ansible Playbook Bundle (APB) that deploys MySQL","providerDisplayName":"Red
        Hat, Inc."},"tags":["database","mysql"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"ce13ff23-5888-11e8-8ee7-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/ce13ff23-5888-11e8-8ee7-d094660d31fb","uid":"7a6aa639-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690341","creationTimestamp":"2018-05-16T20:48:25Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"datagrid71-partition","externalID":"ce13ff23-5888-11e8-8ee7-d094660d31fb","description":"An
        example JBoss Data Grid application. For more information about using this
        template, see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-datagrid","displayName":"JBoss
        Data Grid 7.1 (Ephemeral, no https)","providerDisplayName":"Red Hat, Inc."},"tags":["datagrid","jboss","hidden"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"ce3bb30f-5888-11e8-8ee7-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/ce3bb30f-5888-11e8-8ee7-d094660d31fb","uid":"77e9c158-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690313","creationTimestamp":"2018-05-16T20:48:20Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap64-tx-recovery-s2i","externalID":"ce3bb30f-5888-11e8-8ee7-d094660d31fb","description":"An
        example EAP 6 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 6.4 (tx recovery)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"ce482052-5888-11e8-8ee7-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/ce482052-5888-11e8-8ee7-d094660d31fb","uid":"78bf612e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690323","creationTimestamp":"2018-05-16T20:48:22Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap70-tx-recovery-s2i","externalID":"ce482052-5888-11e8-8ee7-d094660d31fb","description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.0 (tx recovery)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"ce54c225-5888-11e8-8ee7-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/ce54c225-5888-11e8-8ee7-d094660d31fb","uid":"762000ad-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690289","creationTimestamp":"2018-05-16T20:48:17Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"eap71-tx-recovery-s2i","externalID":"ce54c225-5888-11e8-8ee7-d094660d31fb","description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","bindable":true,"bindingRetrievable":false,"planUpdatable":false,"externalMetadata":{"console.openshift.io/iconClass":"icon-eap","displayName":"JBoss
        EAP 7.1 (tx recovery)","providerDisplayName":"Red Hat, Inc."},"tags":["eap","javaee","java","jboss"]},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"d5915e05b253df421efe6e41fb6a66ba","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceclasses/d5915e05b253df421efe6e41fb6a66ba","uid":"a650be9a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690840","creationTimestamp":"2018-05-16T20:49:38Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"rh-postgresql-apb","externalID":"d5915e05b253df421efe6e41fb6a66ba","description":"SCL
        PostgreSQL apb implementation","bindable":true,"bindingRetrievable":false,"planUpdatable":true,"externalMetadata":{"console.openshift.io/iconClass":"icon-postgresql","dependencies":["registry.access.redhat.com/rhscl/postgresql-94-rhel7","registry.access.redhat.com/rhscl/postgresql-95-rhel7","registry.access.redhat.com/rhscl/postgresql-96-rhel7"],"displayName":"PostgreSQL
        (APB)","documentationUrl":"https://www.postgresql.org/docs/","longDescription":"An
        apb that deploys postgresql 9.4, 9.5, or 9.6.","providerDisplayName":"Red
        Hat, Inc."},"tags":["database","postgresql"]},"status":{"removedFromBrokerCatalog":false}}]}

        '
    http_version:
  recorded_at: Thu, 23 Aug 2018 06:21:32 GMT
- request:
    method: get
    uri: https://host.example.com:8443/apis/servicecatalog.k8s.io/v1beta1/serviceinstances
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.4.2p198
      Authorization:
      - Bearer theToken
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Length:
      - '3290'
      Content-Type:
      - application/json
      Date:
      - Thu, 23 Aug 2018 06:21:32 GMT
    body:
      encoding: UTF-8
      string: '{"kind":"ServiceInstanceList","apiVersion":"servicecatalog.k8s.io/v1beta1","metadata":{"selfLink":"/apis/servicecatalog.k8s.io/v1beta1/serviceinstances","resourceVersion":"36309843"},"items":[{"metadata":{"name":"mariadb-persistent-qdkzt","generateName":"mariadb-persistent-","namespace":"default","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/namespaces/default/serviceinstances/mariadb-persistent-qdkzt","uid":"dd871fef-a54a-11e8-8fb9-0a580a800009","resourceVersion":"36309795","generation":1,"creationTimestamp":"2018-08-21T14:02:39Z","finalizers":["kubernetes-incubator/service-catalog"]},"spec":{"clusterServiceClassExternalName":"mariadb-persistent","clusterServicePlanExternalName":"default","clusterServiceClassRef":{"name":"1750b5d6-0d11-11e8-906a-d094660d31fb"},"clusterServicePlanRef":{"name":"1750b5d6-0d11-11e8-906a-d094660d31fb"},"parametersFrom":[{"secretKeyRef":{"name":"mariadb-persistent-parametersbori0","key":"parameters"}}],"externalID":"76af97e3-5650-4583-ae85-27294677f88d","userInfo":{"username":"admin","uid":"","groups":["system:authenticated:oauth","system:authenticated"],"extra":{"scopes.authorization.openshift.io":["user:full"]}},"updateRequests":0},"status":{"conditions":[{"type":"Ready","status":"Unknown","lastTransitionTime":"2018-08-21T14:05:40Z","reason":"DeprovisionCallFailed","message":"Error
        deprovisioning, ClusterServiceClass (K8S: \"1750b5d6-0d11-11e8-906a-d094660d31fb\"
        ExternalName: \"mariadb-persistent\") at ClusterServiceBroker \"template-service-broker\":
        Delete https://apiserver.openshift-template-service-broker.svc:443/brokers/template.openshift.io/v2/service_instances/76af97e3-5650-4583-ae85-27294677f88d?accepts_incomplete=true\u0026plan_id=1750b5d6-0d11-11e8-906a-d094660d31fb\u0026service_id=1750b5d6-0d11-11e8-906a-d094660d31fb:
        dial tcp: lookup apiserver.openshift-template-service-broker.svc on [::1]:53:
        read udp [::1]:41170-\u003e[::1]:53: read: connection refused"},{"type":"Failed","status":"True","lastTransitionTime":"2018-08-21T14:05:20Z","reason":"ErrorCallingProvision","message":"Communication
        with the ClusterServiceBroker timed out; operation will not be retried: Put
        https://apiserver.openshift-template-service-broker.svc:443/brokers/template.openshift.io/v2/service_instances/76af97e3-5650-4583-ae85-27294677f88d?accepts_incomplete=true:
        dial tcp: lookup apiserver.openshift-template-service-broker.svc on [::1]:53:
        read udp [::1]:36086-\u003e[::1]:53: i/o timeout"}],"asyncOpInProgress":false,"orphanMitigationInProgress":true,"currentOperation":"Provision","reconciledGeneration":0,"operationStartTime":"2018-08-21T14:05:30Z","inProgressProperties":{"clusterServicePlanExternalName":"default","clusterServicePlanExternalID":"1750b5d6-0d11-11e8-906a-d094660d31fb","parameters":{"DATABASE_SERVICE_NAME":"\u003credacted\u003e","MARIADB_VERSION":"\u003credacted\u003e","MEMORY_LIMIT":"\u003credacted\u003e","MYSQL_DATABASE":"\u003credacted\u003e","NAMESPACE":"\u003credacted\u003e","VOLUME_CAPACITY":"\u003credacted\u003e"},"parameterChecksum":"71118b9c659a984212608999d0323deda723b5cdba0805a0e350fc49931b6604","userInfo":{"username":"admin","uid":"","groups":["system:authenticated:oauth","system:authenticated"],"extra":{"scopes.authorization.openshift.io":["user:full"]}}},"deprovisionStatus":"Required"}}]}

        '
    http_version:
  recorded_at: Thu, 23 Aug 2018 06:21:33 GMT
- request:
    method: get
    uri: https://host.example.com:8443/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.4.2p198
      Authorization:
      - Bearer theToken
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Thu, 23 Aug 2018 06:21:33 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"kind":"ClusterServicePlanList","apiVersion":"servicecatalog.k8s.io/v1beta1","metadata":{"selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans","resourceVersion":"36309848"},"items":[{"metadata":{"name":"174fb3fa-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/174fb3fa-0d11-11e8-906a-d094660d31fb","uid":"966e466a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690709","creationTimestamp":"2018-05-16T20:49:12Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"174fb3fa-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["MEMORY_LIMIT","NAMESPACE","DATABASE_SERVICE_NAME","MYSQL_USER","MYSQL_PASSWORD","MYSQL_ROOT_PASSWORD","MYSQL_DATABASE","MARIADB_VERSION"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"DATABASE_SERVICE_NAME":{"default":"mariadb","description":"The
        name of the OpenShift Service exposed for the database.","title":"Database
        Service Name","type":"string"},"MARIADB_VERSION":{"default":"10.2","description":"Version
        of MariaDB image to be used (10.0, 10.1, 10.2 or latest).","title":"Version
        of MariaDB Image","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"MYSQL_DATABASE":{"default":"sampledb","description":"Name
        of the MariaDB database accessed.","title":"MariaDB Database Name","type":"string"},"MYSQL_PASSWORD":{"default":"","description":"Password
        for the MariaDB connection user.","title":"MariaDB Connection Password","type":"string"},"MYSQL_ROOT_PASSWORD":{"default":"","description":"Password
        for the MariaDB root user.","title":"MariaDB root Password","type":"string"},"MYSQL_USER":{"default":"","description":"Username
        for MariaDB user that will be used for accessing the database.","title":"MariaDB
        Connection Username","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"}},"required":["MEMORY_LIMIT","DATABASE_SERVICE_NAME","MYSQL_DATABASE","MARIADB_VERSION"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"174fb3fa-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1750b5d6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1750b5d6-0d11-11e8-906a-d094660d31fb","uid":"9706d73e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690716","creationTimestamp":"2018-05-16T20:49:13Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1750b5d6-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["MEMORY_LIMIT","NAMESPACE","DATABASE_SERVICE_NAME","MYSQL_USER","MYSQL_PASSWORD","MYSQL_ROOT_PASSWORD","MYSQL_DATABASE","MARIADB_VERSION","VOLUME_CAPACITY"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"DATABASE_SERVICE_NAME":{"default":"mariadb","description":"The
        name of the OpenShift Service exposed for the database.","title":"Database
        Service Name","type":"string"},"MARIADB_VERSION":{"default":"10.2","description":"Version
        of MariaDB image to be used (10.0, 10.1, 10.2 or latest).","title":"Version
        of MariaDB Image","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"MYSQL_DATABASE":{"default":"sampledb","description":"Name
        of the MariaDB database accessed.","title":"MariaDB Database Name","type":"string"},"MYSQL_PASSWORD":{"default":"","description":"Password
        for the MariaDB connection user.","title":"MariaDB Connection Password","type":"string"},"MYSQL_ROOT_PASSWORD":{"default":"","description":"Password
        for the MariaDB root user.","title":"MariaDB root Password","type":"string"},"MYSQL_USER":{"default":"","description":"Username
        for MariaDB user that will be used for accessing the database.","title":"MariaDB
        Connection Username","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi.","title":"Volume Capacity","type":"string"}},"required":["MEMORY_LIMIT","DATABASE_SERVICE_NAME","MYSQL_DATABASE","MARIADB_VERSION","VOLUME_CAPACITY"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1750b5d6-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1751dc6f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1751dc6f-0d11-11e8-906a-d094660d31fb","uid":"8b1b07bf-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690567","creationTimestamp":"2018-05-16T20:48:53Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1751dc6f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["MEMORY_LIMIT","NAMESPACE","DATABASE_SERVICE_NAME","MONGODB_USER","MONGODB_PASSWORD","MONGODB_DATABASE","MONGODB_ADMIN_PASSWORD","MONGODB_VERSION"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"DATABASE_SERVICE_NAME":{"default":"mongodb","description":"The
        name of the OpenShift Service exposed for the database.","title":"Database
        Service Name","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"MONGODB_ADMIN_PASSWORD":{"default":"","description":"Password
        for the database admin user.","title":"MongoDB Admin Password","type":"string"},"MONGODB_DATABASE":{"default":"sampledb","description":"Name
        of the MongoDB database accessed.","title":"MongoDB Database Name","type":"string"},"MONGODB_PASSWORD":{"default":"","description":"Password
        for the MongoDB connection user.","title":"MongoDB Connection Password","type":"string"},"MONGODB_USER":{"default":"","description":"Username
        for MongoDB user that will be used for accessing the database.","title":"MongoDB
        Connection Username","type":"string"},"MONGODB_VERSION":{"default":"3.2","description":"Version
        of MongoDB image to be used (2.4, 2.6, 3.2 or latest).","title":"Version of
        MongoDB Image","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"}},"required":["MEMORY_LIMIT","DATABASE_SERVICE_NAME","MONGODB_DATABASE","MONGODB_VERSION"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1751dc6f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1752bf6f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1752bf6f-0d11-11e8-906a-d094660d31fb","uid":"8dba82a5-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690601","creationTimestamp":"2018-05-16T20:48:57Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1752bf6f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["MEMORY_LIMIT","NAMESPACE","DATABASE_SERVICE_NAME","MONGODB_USER","MONGODB_PASSWORD","MONGODB_DATABASE","MONGODB_ADMIN_PASSWORD","VOLUME_CAPACITY","MONGODB_VERSION"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"DATABASE_SERVICE_NAME":{"default":"mongodb","description":"The
        name of the OpenShift Service exposed for the database.","title":"Database
        Service Name","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"MONGODB_ADMIN_PASSWORD":{"default":"","description":"Password
        for the database admin user.","title":"MongoDB Admin Password","type":"string"},"MONGODB_DATABASE":{"default":"sampledb","description":"Name
        of the MongoDB database accessed.","title":"MongoDB Database Name","type":"string"},"MONGODB_PASSWORD":{"default":"","description":"Password
        for the MongoDB connection user.","title":"MongoDB Connection Password","type":"string"},"MONGODB_USER":{"default":"","description":"Username
        for MongoDB user that will be used for accessing the database.","title":"MongoDB
        Connection Username","type":"string"},"MONGODB_VERSION":{"default":"3.2","description":"Version
        of MongoDB image to be used (2.4, 2.6, 3.2 or latest).","title":"Version of
        MongoDB Image","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi.","title":"Volume Capacity","type":"string"}},"required":["MEMORY_LIMIT","DATABASE_SERVICE_NAME","MONGODB_DATABASE","VOLUME_CAPACITY","MONGODB_VERSION"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1752bf6f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"17539bd2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/17539bd2-0d11-11e8-906a-d094660d31fb","uid":"968cce22-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690710","creationTimestamp":"2018-05-16T20:49:12Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"17539bd2-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["MEMORY_LIMIT","NAMESPACE","DATABASE_SERVICE_NAME","MYSQL_USER","MYSQL_PASSWORD","MYSQL_ROOT_PASSWORD","MYSQL_DATABASE","MYSQL_VERSION"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"DATABASE_SERVICE_NAME":{"default":"mysql","description":"The
        name of the OpenShift Service exposed for the database.","title":"Database
        Service Name","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"MYSQL_DATABASE":{"default":"sampledb","description":"Name
        of the MySQL database accessed.","title":"MySQL Database Name","type":"string"},"MYSQL_PASSWORD":{"default":"","description":"Password
        for the MySQL connection user.","title":"MySQL Connection Password","type":"string"},"MYSQL_ROOT_PASSWORD":{"default":"","description":"Password
        for the MySQL root user.","title":"MySQL root user Password","type":"string"},"MYSQL_USER":{"default":"","description":"Username
        for MySQL user that will be used for accessing the database.","title":"MySQL
        Connection Username","type":"string"},"MYSQL_VERSION":{"default":"5.7","description":"Version
        of MySQL image to be used (5.5, 5.6, 5.7, or latest).","title":"Version of
        MySQL Image","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"}},"required":["MEMORY_LIMIT","DATABASE_SERVICE_NAME","MYSQL_DATABASE","MYSQL_VERSION"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"17539bd2-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1754752d-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1754752d-0d11-11e8-906a-d094660d31fb","uid":"992c25db-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690742","creationTimestamp":"2018-05-16T20:49:16Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1754752d-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["MEMORY_LIMIT","NAMESPACE","DATABASE_SERVICE_NAME","MYSQL_USER","MYSQL_PASSWORD","MYSQL_ROOT_PASSWORD","MYSQL_DATABASE","VOLUME_CAPACITY","MYSQL_VERSION"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"DATABASE_SERVICE_NAME":{"default":"mysql","description":"The
        name of the OpenShift Service exposed for the database.","title":"Database
        Service Name","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"MYSQL_DATABASE":{"default":"sampledb","description":"Name
        of the MySQL database accessed.","title":"MySQL Database Name","type":"string"},"MYSQL_PASSWORD":{"default":"","description":"Password
        for the MySQL connection user.","title":"MySQL Connection Password","type":"string"},"MYSQL_ROOT_PASSWORD":{"default":"","description":"Password
        for the MySQL root user.","title":"MySQL root user Password","type":"string"},"MYSQL_USER":{"default":"","description":"Username
        for MySQL user that will be used for accessing the database.","title":"MySQL
        Connection Username","type":"string"},"MYSQL_VERSION":{"default":"5.7","description":"Version
        of MySQL image to be used (5.5, 5.6, 5.7, or latest).","title":"Version of
        MySQL Image","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi.","title":"Volume Capacity","type":"string"}},"required":["MEMORY_LIMIT","DATABASE_SERVICE_NAME","MYSQL_DATABASE","VOLUME_CAPACITY","MYSQL_VERSION"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1754752d-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"17554df6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/17554df6-0d11-11e8-906a-d094660d31fb","uid":"91a99348-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690644","creationTimestamp":"2018-05-16T20:49:04Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"17554df6-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["MEMORY_LIMIT","NAMESPACE","DATABASE_SERVICE_NAME","POSTGRESQL_USER","POSTGRESQL_PASSWORD","POSTGRESQL_DATABASE","POSTGRESQL_VERSION"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"DATABASE_SERVICE_NAME":{"default":"postgresql","description":"The
        name of the OpenShift Service exposed for the database.","title":"Database
        Service Name","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"POSTGRESQL_DATABASE":{"default":"sampledb","description":"Name
        of the PostgreSQL database accessed.","title":"PostgreSQL Database Name","type":"string"},"POSTGRESQL_PASSWORD":{"default":"","description":"Password
        for the PostgreSQL connection user.","title":"PostgreSQL Connection Password","type":"string"},"POSTGRESQL_USER":{"default":"","description":"Username
        for PostgreSQL user that will be used for accessing the database.","title":"PostgreSQL
        Connection Username","type":"string"},"POSTGRESQL_VERSION":{"default":"9.6","description":"Version
        of PostgreSQL image to be used (9.4, 9.5, 9.6 or latest).","title":"Version
        of PostgreSQL Image","type":"string"}},"required":["MEMORY_LIMIT","DATABASE_SERVICE_NAME","POSTGRESQL_DATABASE","POSTGRESQL_VERSION"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"17554df6-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1756262c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1756262c-0d11-11e8-906a-d094660d31fb","uid":"9e0f5a3f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690798","creationTimestamp":"2018-05-16T20:49:24Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1756262c-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["MEMORY_LIMIT","NAMESPACE","DATABASE_SERVICE_NAME","POSTGRESQL_USER","POSTGRESQL_PASSWORD","POSTGRESQL_DATABASE","VOLUME_CAPACITY","POSTGRESQL_VERSION"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"DATABASE_SERVICE_NAME":{"default":"postgresql","description":"The
        name of the OpenShift Service exposed for the database.","title":"Database
        Service Name","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"POSTGRESQL_DATABASE":{"default":"sampledb","description":"Name
        of the PostgreSQL database accessed.","title":"PostgreSQL Database Name","type":"string"},"POSTGRESQL_PASSWORD":{"default":"","description":"Password
        for the PostgreSQL connection user.","title":"PostgreSQL Connection Password","type":"string"},"POSTGRESQL_USER":{"default":"","description":"Username
        for PostgreSQL user that will be used for accessing the database.","title":"PostgreSQL
        Connection Username","type":"string"},"POSTGRESQL_VERSION":{"default":"9.6","description":"Version
        of PostgreSQL image to be used (9.4, 9.5, 9.6 or latest).","title":"Version
        of PostgreSQL Image","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi.","title":"Volume Capacity","type":"string"}},"required":["MEMORY_LIMIT","DATABASE_SERVICE_NAME","POSTGRESQL_DATABASE","VOLUME_CAPACITY","POSTGRESQL_VERSION"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1756262c-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"17570317-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/17570317-0d11-11e8-906a-d094660d31fb","uid":"99e34032-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690750","creationTimestamp":"2018-05-16T20:49:17Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"17570317-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["MEMORY_LIMIT","NAMESPACE","DATABASE_SERVICE_NAME","REDIS_PASSWORD","REDIS_VERSION"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"DATABASE_SERVICE_NAME":{"default":"redis","description":"The
        name of the OpenShift Service exposed for the database.","title":"Database
        Service Name","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"REDIS_PASSWORD":{"default":"","description":"Password
        for the Redis connection user.","title":"Redis Connection Password","type":"string"},"REDIS_VERSION":{"default":"3.2","description":"Version
        of Redis image to be used (3.2 or latest).","title":"Version of Redis Image","type":"string"}},"required":["MEMORY_LIMIT","DATABASE_SERVICE_NAME","REDIS_VERSION"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"17570317-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1757d0cd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1757d0cd-0d11-11e8-906a-d094660d31fb","uid":"8c0f3eac-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690579","creationTimestamp":"2018-05-16T20:48:54Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1757d0cd-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["MEMORY_LIMIT","NAMESPACE","DATABASE_SERVICE_NAME","REDIS_PASSWORD","VOLUME_CAPACITY","REDIS_VERSION"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"DATABASE_SERVICE_NAME":{"default":"redis","description":"The
        name of the OpenShift Service exposed for the database.","title":"Database
        Service Name","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"REDIS_PASSWORD":{"default":"","description":"Password
        for the Redis connection user.","title":"Redis Connection Password","type":"string"},"REDIS_VERSION":{"default":"3.2","description":"Version
        of Redis image to be used (3.2 or latest).","title":"Version of Redis Image","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi.","title":"Volume Capacity","type":"string"}},"required":["MEMORY_LIMIT","DATABASE_SERVICE_NAME","VOLUME_CAPACITY","REDIS_VERSION"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1757d0cd-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1995db38-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1995db38-0d11-11e8-906a-d094660d31fb","uid":"990d9d64-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690741","creationTimestamp":"2018-05-16T20:49:16Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1995db38-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["AMP_RELEASE","ADMIN_PASSWORD","ADMIN_USERNAME","APICAST_ACCESS_TOKEN","ADMIN_ACCESS_TOKEN","WILDCARD_DOMAIN","TENANT_NAME","MYSQL_USER","MYSQL_PASSWORD","MYSQL_DATABASE","MYSQL_ROOT_PASSWORD","SYSTEM_BACKEND_USERNAME","SYSTEM_BACKEND_PASSWORD","REDIS_IMAGE","MYSQL_IMAGE","SYSTEM_BACKEND_SHARED_SECRET","SYSTEM_APP_SECRET_KEY_BASE","APICAST_MANAGEMENT_API","APICAST_OPENSSL_VERIFY","APICAST_RESPONSE_CODES"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ADMIN_ACCESS_TOKEN":{"default":"","description":"Admin
        Access Token with all scopes and write permissions for API access.","type":"string"},"ADMIN_PASSWORD":{"default":"","type":"string"},"ADMIN_USERNAME":{"default":"admin","type":"string"},"AMP_RELEASE":{"default":"2.0.0-CR2-redhat-1","description":"AMP
        release tag.","type":"string"},"APICAST_ACCESS_TOKEN":{"default":"","description":"Read
        Only Access Token that is APIcast going to use to download its configuration.","type":"string"},"APICAST_MANAGEMENT_API":{"default":"status","description":"Scope
        of the APIcast Management API. Can be disabled, status or debug. At least
        status required for health checks.","type":"string"},"APICAST_OPENSSL_VERIFY":{"default":"false","description":"Turn
        on/off the OpenSSL peer verification when downloading the configuration. Can
        be set to true/false.","type":"string"},"APICAST_RESPONSE_CODES":{"default":"true","description":"Enable
        logging response codes in APIcast.","type":"string"},"MYSQL_DATABASE":{"default":"system","description":"Name
        of the MySQL database accessed.","title":"MySQL Database Name","type":"string"},"MYSQL_IMAGE":{"default":"rhscl/mysql-56-rhel7:5.6-13.14","description":"Mysql
        image to use","type":"string"},"MYSQL_PASSWORD":{"default":"","description":"Password
        for the MySQL user.","title":"MySQL Password","type":"string"},"MYSQL_ROOT_PASSWORD":{"default":"","description":"Password
        for Root user.","title":"MySQL Root password.","type":"string"},"MYSQL_USER":{"default":"mysql","description":"Username
        for MySQL user that will be used for accessing the database.","title":"MySQL
        User","type":"string"},"REDIS_IMAGE":{"default":"rhscl/redis-32-rhel7:3.2-5.7","description":"Redis
        image to use","type":"string"},"SYSTEM_APP_SECRET_KEY_BASE":{"default":"","description":"System
        application secret key base","type":"string"},"SYSTEM_BACKEND_PASSWORD":{"default":"","description":"Internal
        3scale API password for internal 3scale api auth.","type":"string"},"SYSTEM_BACKEND_SHARED_SECRET":{"default":"","description":"Shared
        secret to import events from backend to system.","type":"string"},"SYSTEM_BACKEND_USERNAME":{"default":"3scale_api_user","description":"Internal
        3scale API username for internal 3scale api auth.","type":"string"},"TENANT_NAME":{"default":"3scale","description":"Tenant
        name under the root that Admin UI will be available with -admin suffix.","type":"string"},"WILDCARD_DOMAIN":{"default":"","description":"Root
        domain for the wildcard routes. Eg. example.com will generate 3scale-admin.example.com.","type":"string"}},"required":["AMP_RELEASE","ADMIN_USERNAME","WILDCARD_DOMAIN","TENANT_NAME","MYSQL_USER","MYSQL_DATABASE","SYSTEM_BACKEND_USERNAME","REDIS_IMAGE","MYSQL_IMAGE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1995db38-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199737e0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/199737e0-0d11-11e8-906a-d094660d31fb","uid":"94e187e0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690693","creationTimestamp":"2018-05-16T20:49:09Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"199737e0-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["AMP_RELEASE","CONFIGURATION_URL_SECRET","CONFIGURATION_FILE_PATH","DEPLOYMENT_ENVIRONMENT","APICAST_NAME","RESOLVER","SERVICES_LIST","CONFIGURATION_LOADER","LOG_LEVEL","PATH_ROUTING","RESPONSE_CODES","CONFIGURATION_CACHE","REDIS_URL","MANAGEMENT_API","OPENSSL_VERIFY"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMP_RELEASE":{"default":"2.0.0-CR2-redhat-1","description":"AMP
        release tag.","type":"string"},"APICAST_NAME":{"default":"apicast","description":"Name
        for the 3scale API Gateway","type":"string"},"CONFIGURATION_CACHE":{"default":"","description":"For
        how long to cache the downloaded configuration in seconds. Can be left empty,
        0 or greater than 60.","type":"string"},"CONFIGURATION_FILE_PATH":{"default":"","description":"Path
        to saved JSON file with configuration for the gateway. Has to be injected
        to the docker image as read only volume.","type":"string"},"CONFIGURATION_LOADER":{"default":"boot","description":"When
        to load configuration. If on gateway start or incoming request. Allowed values
        are: lazy, boot.","type":"string"},"CONFIGURATION_URL_SECRET":{"default":"apicast-configuration-url-secret","description":"Name
        of the secret containing the THREESCALE_PORTAL_ENDPOINT with the access-token
        or provider key","type":"string"},"DEPLOYMENT_ENVIRONMENT":{"default":"production","description":"Deployment
        environment. Can be sandbox or production.","type":"string"},"LOG_LEVEL":{"default":"","description":"Log
        level. One of the following: debug, info, notice, warn, error, crit, alert,
        or emerg.","type":"string"},"MANAGEMENT_API":{"default":"status","description":"Scope
        of the Management API. Can be disabled, status or debug. At least status required
        for health checks.","type":"string"},"OPENSSL_VERIFY":{"default":"false","description":"Turn
        on/off the OpenSSL peer verification. Can be set to true/false.","type":"string"},"PATH_ROUTING":{"default":"false","description":"Enable
        path routing. Experimental feature.","type":"string"},"REDIS_URL":{"default":"","description":"Redis
        URL. Required for OAuth2 integration. ex: redis://PASSWORD@127.0.0.1:6379/0","type":"string"},"RESOLVER":{"default":"","description":"DNS
        Resolver for openresty, if empty it will be autodiscovered","type":"string"},"RESPONSE_CODES":{"default":"false","description":"Enable
        logging response codes to 3scale.","type":"string"},"SERVICES_LIST":{"default":"","description":"Subset
        of services to run. Use comma separated list of service ids (eg. 42,1337)","type":"string"}},"required":["AMP_RELEASE","CONFIGURATION_URL_SECRET","DEPLOYMENT_ENVIRONMENT","APICAST_NAME","OPENSSL_VERIFY"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"199737e0-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19982ec6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19982ec6-0d11-11e8-906a-d094660d31fb","uid":"92f93e83-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690663","creationTimestamp":"2018-05-16T20:49:06Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19982ec6-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MYSQL_LIMIT","VOLUME_CAPACITY","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","DATABASE_SERVICE_NAME","DATABASE_ENGINE","DATABASE_NAME","DATABASE_USER","DATABASE_PASSWORD","CAKEPHP_SECRET_TOKEN","CAKEPHP_SECURITY_SALT","CAKEPHP_SECURITY_CIPHER_SEED","OPCACHE_REVALIDATE_FREQ","COMPOSER_MIRROR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the CakePHP service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"CAKEPHP_SECRET_TOKEN":{"default":"","description":"Set
        this to a long random string.","title":"CakePHP secret token","type":"string"},"CAKEPHP_SECURITY_CIPHER_SEED":{"default":"","description":"Security
        cipher seed for session hash.","title":"CakePHP Security Cipher Seed","type":"string"},"CAKEPHP_SECURITY_SALT":{"default":"","description":"Security
        salt for session hash.","title":"CakePHP Security Salt","type":"string"},"COMPOSER_MIRROR":{"default":"","description":"The
        custom Composer mirror URL","title":"Custom Composer Mirror URL","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"DATABASE_ENGINE":{"default":"mysql","description":"Database
        engine: postgresql, mysql or sqlite (default).","title":"Database Engine","type":"string"},"DATABASE_NAME":{"default":"default","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","title":"Database
        Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"mysql","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"cakephp","title":"Database
        User","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the CakePHP container can use.","title":"Memory Limit","type":"string"},"MEMORY_MYSQL_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the MySQL container can use.","title":"Memory Limit (MySQL)","type":"string"},"NAME":{"default":"cakephp-mysql-persistent","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"OPCACHE_REVALIDATE_FREQ":{"default":"2","description":"How
        often to check script timestamps for updates, in seconds. 0 will result in
        OPcache checking for updates on every request.","title":"OPcache Revalidation
        Frequency","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/cakephp-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi","title":"Volume Capacity","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MYSQL_LIMIT","VOLUME_CAPACITY","SOURCE_REPOSITORY_URL","DATABASE_SERVICE_NAME","DATABASE_ENGINE","DATABASE_NAME","DATABASE_USER"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19982ec6-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19996dd0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19996dd0-0d11-11e8-906a-d094660d31fb","uid":"9096f34c-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690631","creationTimestamp":"2018-05-16T20:49:02Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19996dd0-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MYSQL_LIMIT","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","DATABASE_SERVICE_NAME","DATABASE_ENGINE","DATABASE_NAME","DATABASE_USER","DATABASE_PASSWORD","CAKEPHP_SECRET_TOKEN","CAKEPHP_SECURITY_SALT","CAKEPHP_SECURITY_CIPHER_SEED","OPCACHE_REVALIDATE_FREQ","COMPOSER_MIRROR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the CakePHP service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"CAKEPHP_SECRET_TOKEN":{"default":"","description":"Set
        this to a long random string.","title":"CakePHP secret token","type":"string"},"CAKEPHP_SECURITY_CIPHER_SEED":{"default":"","description":"Security
        cipher seed for session hash.","title":"CakePHP Security Cipher Seed","type":"string"},"CAKEPHP_SECURITY_SALT":{"default":"","description":"Security
        salt for session hash.","title":"CakePHP Security Salt","type":"string"},"COMPOSER_MIRROR":{"default":"","description":"The
        custom Composer mirror URL","title":"Custom Composer Mirror URL","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"DATABASE_ENGINE":{"default":"mysql","description":"Database
        engine: postgresql, mysql or sqlite (default).","title":"Database Engine","type":"string"},"DATABASE_NAME":{"default":"default","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","title":"Database
        Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"mysql","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"cakephp","title":"Database
        User","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the CakePHP container can use.","title":"Memory Limit","type":"string"},"MEMORY_MYSQL_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the MySQL container can use.","title":"Memory Limit (MySQL)","type":"string"},"NAME":{"default":"cakephp-mysql-example","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"OPCACHE_REVALIDATE_FREQ":{"default":"2","description":"How
        often to check script timestamps for updates, in seconds. 0 will result in
        OPcache checking for updates on every request.","title":"OPcache Revalidation
        Frequency","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/cakephp-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MYSQL_LIMIT","SOURCE_REPOSITORY_URL","DATABASE_SERVICE_NAME","DATABASE_ENGINE","DATABASE_NAME","DATABASE_USER"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19996dd0-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199a7eb1-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/199a7eb1-0d11-11e8-906a-d094660d31fb","uid":"98b21bb1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690735","creationTimestamp":"2018-05-16T20:49:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"199a7eb1-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MYSQL_LIMIT","VOLUME_CAPACITY","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","DATABASE_SERVICE_NAME","DATABASE_USER","DATABASE_PASSWORD","DATABASE_NAME","PERL_APACHE2_RELOAD","SECRET_KEY_BASE","CPAN_MIRROR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the Dancer service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"CPAN_MIRROR":{"default":"","description":"The
        custom CPAN mirror URL","title":"Custom CPAN Mirror URL","type":"string"},"DATABASE_NAME":{"default":"sampledb","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","title":"Database
        Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"database","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"","title":"Database
        Username","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the Perl Dancer container can use.","title":"Memory Limit","type":"string"},"MEMORY_MYSQL_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the MySQL container can use.","title":"Memory Limit (MySQL)","type":"string"},"NAME":{"default":"dancer-mysql-persistent","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"PERL_APACHE2_RELOAD":{"default":"","description":"Set
        this to \"true\" to enable automatic reloading of modified Perl modules.","title":"Perl
        Module Reload","type":"string"},"SECRET_KEY_BASE":{"default":"","description":"Your
        secret key for verifying the integrity of signed cookies.","title":"Secret
        Key","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/dancer-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi","title":"Volume Capacity","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MYSQL_LIMIT","VOLUME_CAPACITY","SOURCE_REPOSITORY_URL","DATABASE_SERVICE_NAME","DATABASE_NAME"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"199a7eb1-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199b7cbb-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/199b7cbb-0d11-11e8-906a-d094660d31fb","uid":"8e531ab2-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690606","creationTimestamp":"2018-05-16T20:48:58Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"199b7cbb-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MYSQL_LIMIT","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","DATABASE_SERVICE_NAME","DATABASE_USER","DATABASE_PASSWORD","DATABASE_NAME","PERL_APACHE2_RELOAD","SECRET_KEY_BASE","CPAN_MIRROR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the Dancer service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"CPAN_MIRROR":{"default":"","description":"The
        custom CPAN mirror URL","title":"Custom CPAN Mirror URL","type":"string"},"DATABASE_NAME":{"default":"sampledb","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","title":"Database
        Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"database","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"","title":"Database
        Username","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the Perl Dancer container can use.","title":"Memory Limit","type":"string"},"MEMORY_MYSQL_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the MySQL container can use.","title":"Memory Limit (MySQL)","type":"string"},"NAME":{"default":"dancer-mysql-example","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"PERL_APACHE2_RELOAD":{"default":"","description":"Set
        this to \"true\" to enable automatic reloading of modified Perl modules.","title":"Perl
        Module Reload","type":"string"},"SECRET_KEY_BASE":{"default":"","description":"Your
        secret key for verifying the integrity of signed cookies.","title":"Secret
        Key","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/dancer-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MYSQL_LIMIT","SOURCE_REPOSITORY_URL","DATABASE_SERVICE_NAME","DATABASE_NAME"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"199b7cbb-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199c8a62-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/199c8a62-0d11-11e8-906a-d094660d31fb","uid":"9cbfc0d1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690783","creationTimestamp":"2018-05-16T20:49:22Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"199c8a62-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_POSTGRESQL_LIMIT","VOLUME_CAPACITY","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","DATABASE_SERVICE_NAME","DATABASE_ENGINE","DATABASE_NAME","DATABASE_USER","DATABASE_PASSWORD","APP_CONFIG","DJANGO_SECRET_KEY","PIP_INDEX_URL"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the Django service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"APP_CONFIG":{"default":"","description":"Relative
        path to Gunicorn configuration file (optional).","title":"Application Configuration
        File Path","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"DATABASE_ENGINE":{"default":"postgresql","description":"Database
        engine: postgresql, mysql or sqlite (default).","title":"Database Engine","type":"string"},"DATABASE_NAME":{"default":"default","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","title":"Database
        User Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"postgresql","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"django","title":"Database
        Username","type":"string"},"DJANGO_SECRET_KEY":{"default":"","description":"Set
        this to a long random string.","title":"Django Secret Key","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the Django container can use.","title":"Memory Limit","type":"string"},"MEMORY_POSTGRESQL_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the PostgreSQL container can use.","title":"Memory Limit
        (PostgreSQL)","type":"string"},"NAME":{"default":"django-psql-persistent","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"PIP_INDEX_URL":{"default":"","description":"The
        custom PyPi index URL","title":"Custom PyPi Index URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/django-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi","title":"Volume Capacity","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_POSTGRESQL_LIMIT","VOLUME_CAPACITY","SOURCE_REPOSITORY_URL","DATABASE_SERVICE_NAME","DATABASE_ENGINE","DATABASE_NAME","DATABASE_USER"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"199c8a62-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199d9bf8-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/199d9bf8-0d11-11e8-906a-d094660d31fb","uid":"8afc900d-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690566","creationTimestamp":"2018-05-16T20:48:52Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"199d9bf8-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_POSTGRESQL_LIMIT","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","DATABASE_SERVICE_NAME","DATABASE_ENGINE","DATABASE_NAME","DATABASE_USER","DATABASE_PASSWORD","APP_CONFIG","DJANGO_SECRET_KEY","PIP_INDEX_URL"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the Django service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"APP_CONFIG":{"default":"","description":"Relative
        path to Gunicorn configuration file (optional).","title":"Application Configuration
        File Path","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"DATABASE_ENGINE":{"default":"postgresql","description":"Database
        engine: postgresql, mysql or sqlite (default).","title":"Database Engine","type":"string"},"DATABASE_NAME":{"default":"default","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","title":"Database
        User Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"postgresql","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"django","title":"Database
        Username","type":"string"},"DJANGO_SECRET_KEY":{"default":"","description":"Set
        this to a long random string.","title":"Django Secret Key","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the Django container can use.","title":"Memory Limit","type":"string"},"MEMORY_POSTGRESQL_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the PostgreSQL container can use.","title":"Memory Limit
        (PostgreSQL)","type":"string"},"NAME":{"default":"django-psql-example","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"PIP_INDEX_URL":{"default":"","description":"The
        custom PyPi index URL","title":"Custom PyPi Index URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/django-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_POSTGRESQL_LIMIT","SOURCE_REPOSITORY_URL","DATABASE_SERVICE_NAME","DATABASE_ENGINE","DATABASE_NAME","DATABASE_USER"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"199d9bf8-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199e8c12-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/199e8c12-0d11-11e8-906a-d094660d31fb","uid":"8e160d2e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690603","creationTimestamp":"2018-05-16T20:48:58Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"199e8c12-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","MEMORY_LIMIT","DOTNET_IMAGE_STREAM_TAG","NAMESPACE","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","DOTNET_STARTUP_PROJECT","DOTNET_ASSEMBLY_NAME","DOTNET_NPM_TOOLS","DOTNET_TEST_PROJECTS","DOTNET_CONFIGURATION","DOTNET_RESTORE_SOURCES"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the .NET Core service, if left blank a
        value will be defaulted.","title":"Application Hostname","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to use a subdirectory of the source code repository","title":"Context
        Directory","type":"string"},"DOTNET_ASSEMBLY_NAME":{"default":"","description":"Set
        this when the assembly name is overridden in the project file.","title":"Startup
        Assembly","type":"string"},"DOTNET_CONFIGURATION":{"default":"Release","description":"Set
        this to configuration (Release/Debug).","title":"Configuration","type":"string"},"DOTNET_IMAGE_STREAM_TAG":{"default":"dotnet:2.0","description":"The
        image stream tag which is used to build the code.","title":".NET builder","type":"string"},"DOTNET_NPM_TOOLS":{"default":"bower
        gulp","description":"Set this to a space separated list of npm tools needed
        to publish.","title":"Npm Tools","type":"string"},"DOTNET_RESTORE_SOURCES":{"default":"","description":"Set
        this to override the NuGet.config sources.","title":"NuGet package sources","type":"string"},"DOTNET_STARTUP_PROJECT":{"default":"app","description":"Set
        this to a project file (e.g. csproj) or a folder containing a single project
        file.","title":"Startup Project","type":"string"},"DOTNET_TEST_PROJECTS":{"default":"","description":"Set
        this to a space separated list of test projects to run before publishing.","title":"Test
        projects","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the GitHub webhook.","title":"GitHub Webhook
        Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"NAME":{"default":"dotnet-example","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"dotnetcore-2.0","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/redhat-developer/s2i-dotnetcore-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"}},"required":["NAME","MEMORY_LIMIT","DOTNET_IMAGE_STREAM_TAG","NAMESPACE","SOURCE_REPOSITORY_URL"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"199e8c12-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"199f9353-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/199f9353-0d11-11e8-906a-d094660d31fb","uid":"92050c62-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690648","creationTimestamp":"2018-05-16T20:49:04Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"199f9353-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","MEMORY_LIMIT","MEMORY_POSTGRESQL_LIMIT","VOLUME_CAPACITY","DOTNET_IMAGE_STREAM_TAG","NAMESPACE","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DOTNET_STARTUP_PROJECT","DOTNET_ASSEMBLY_NAME","DOTNET_NPM_TOOLS","DOTNET_TEST_PROJECTS","DOTNET_CONFIGURATION","DOTNET_RESTORE_SOURCES","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","DATABASE_SERVICE_NAME","DATABASE_USER","DATABASE_PASSWORD","DATABASE_NAME","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the .NET Core service, if left blank a
        value will be defaulted.","title":"Application Hostname","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"DATABASE_NAME":{"default":"musicstore","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","title":"Database
        Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"postgresql","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"","title":"Database
        Username","type":"string"},"DOTNET_ASSEMBLY_NAME":{"default":"","description":"Set
        this when the assembly name is overridden in the project file.","title":"Startup
        Assembly","type":"string"},"DOTNET_CONFIGURATION":{"default":"Release","description":"Set
        this to configuration (Release/Debug).","title":"Configuration","type":"string"},"DOTNET_IMAGE_STREAM_TAG":{"default":"dotnet:2.0","description":"The
        image stream tag which is used to build the code.","title":".NET builder","type":"string"},"DOTNET_NPM_TOOLS":{"default":"","description":"Set
        this to a space separated list of npm tools needed to publish.","title":"Npm
        Tools","type":"string"},"DOTNET_RESTORE_SOURCES":{"default":"","description":"Set
        this to override the NuGet.config sources.","title":"NuGet package sources","type":"string"},"DOTNET_STARTUP_PROJECT":{"default":"samples/MusicStore","description":"Set
        this to a project file (e.g. csproj) or a folder containing a single project
        file.","title":"Startup Project","type":"string"},"DOTNET_TEST_PROJECTS":{"default":"","description":"Set
        this to a space separated list of test projects to run before publishing.","title":"Test
        projects","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the GitHub webhook.","title":"GitHub Webhook
        Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the .NET Core container can use.","title":"Memory Limit","type":"string"},"MEMORY_POSTGRESQL_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the PostgreSQL container can use.","title":"Memory Limit
        (PostgreSQL)","type":"string"},"NAME":{"default":"musicstore","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the .NET builder ImageStream resides.","title":"Namespace","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"100","title":"Maximum
        Database Connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"12MB","title":"Shared
        Buffer Amount","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"rel/2.0-example","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/redhat-developer/s2i-aspnet-musicstore-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi","title":"Volume Capacity","type":"string"}},"required":["NAME","MEMORY_LIMIT","MEMORY_POSTGRESQL_LIMIT","VOLUME_CAPACITY","DOTNET_IMAGE_STREAM_TAG","NAMESPACE","SOURCE_REPOSITORY_URL","DATABASE_SERVICE_NAME","DATABASE_NAME"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"199f9353-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a09e57-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19a09e57-0d11-11e8-906a-d094660d31fb","uid":"916c9367-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690642","creationTimestamp":"2018-05-16T20:49:03Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19a09e57-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","MEMORY_LIMIT","DOTNET_RUNTIME_IMAGE_STREAM_TAG","DOTNET_BUILD_IMAGE_STREAM_TAG","NAMESPACE","APPLICATION_DOMAIN","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","DOTNET_STARTUP_PROJECT","DOTNET_ASSEMBLY_NAME","DOTNET_NPM_TOOLS","DOTNET_TEST_PROJECTS","DOTNET_CONFIGURATION","DOTNET_RESTORE_SOURCES"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the .NET Core service, if left blank a
        value will be defaulted.","title":"Application Hostname","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to use a subdirectory of the source code repository","title":"Context
        Directory","type":"string"},"DOTNET_ASSEMBLY_NAME":{"default":"","description":"Set
        this when the assembly name is overridden in the project file.","title":"Startup
        Assembly","type":"string"},"DOTNET_BUILD_IMAGE_STREAM_TAG":{"default":"dotnet:2.0","description":"The
        image stream tag which is used to build the application.","title":".NET builder","type":"string"},"DOTNET_CONFIGURATION":{"default":"Release","description":"Set
        this to configuration (Release/Debug).","title":"Configuration","type":"string"},"DOTNET_NPM_TOOLS":{"default":"bower
        gulp","description":"Set this to a space separated list of npm tools needed
        to publish.","title":"Npm Tools","type":"string"},"DOTNET_RESTORE_SOURCES":{"default":"","description":"Set
        this to override the NuGet.config sources.","title":"NuGet package sources","type":"string"},"DOTNET_RUNTIME_IMAGE_STREAM_TAG":{"default":"dotnet-runtime:2.0","description":"The
        image stream tag which is used to run the application.","title":".NET Runtime
        Imagestream Tag","type":"string"},"DOTNET_STARTUP_PROJECT":{"default":"app","description":"Set
        this to the folder containing your startup project.","title":"Startup Project","type":"string"},"DOTNET_TEST_PROJECTS":{"default":"","description":"Set
        this to a space separated list of test projects to run before publishing.","title":"Test
        projects","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the GitHub webhook.","title":"GitHub Webhook
        Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"NAME":{"default":"dotnet-runtime-example","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"dotnetcore-2.0","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/redhat-developer/s2i-dotnetcore-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"}},"required":["NAME","MEMORY_LIMIT","DOTNET_RUNTIME_IMAGE_STREAM_TAG","DOTNET_BUILD_IMAGE_STREAM_TAG","NAMESPACE","SOURCE_REPOSITORY_URL"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19a09e57-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a1c15a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19a1c15a-0d11-11e8-906a-d094660d31fb","uid":"9db3c0b1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690793","creationTimestamp":"2018-05-16T20:49:24Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19a1c15a-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the httpd service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"NAME":{"default":"httpd-example","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/httpd-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","SOURCE_REPOSITORY_URL"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19a1c15a-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a29f02-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19a29f02-0d11-11e8-906a-d094660d31fb","uid":"9d1b3dc8-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690786","creationTimestamp":"2018-05-16T20:49:23Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19a29f02-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["JENKINS_SERVICE_NAME","JNLP_SERVICE_NAME","ENABLE_OAUTH","MEMORY_LIMIT","NAMESPACE","JENKINS_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ENABLE_OAUTH":{"default":"true","description":"Whether
        to enable OAuth OpenShift integration. If false, the static account ''admin''
        will be initialized with the password ''password''.","title":"Enable OAuth
        in Jenkins","type":"string"},"JENKINS_IMAGE_STREAM_TAG":{"default":"jenkins:2","description":"Name
        of the ImageStreamTag to be used for the Jenkins image.","title":"Jenkins
        ImageStreamTag","type":"string"},"JENKINS_SERVICE_NAME":{"default":"jenkins","description":"The
        name of the OpenShift Service exposed for the Jenkins container.","title":"Jenkins
        Service Name","type":"string"},"JNLP_SERVICE_NAME":{"default":"jenkins-jnlp","description":"The
        name of the service used for master/slave communication.","title":"Jenkins
        JNLP Service Name","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the Jenkins ImageStream resides.","title":"Jenkins
        ImageStream Namespace","type":"string"}},"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19a29f02-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a38330-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19a38330-0d11-11e8-906a-d094660d31fb","uid":"9df0d870-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690797","creationTimestamp":"2018-05-16T20:49:24Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19a38330-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["JENKINS_SERVICE_NAME","JNLP_SERVICE_NAME","ENABLE_OAUTH","MEMORY_LIMIT","VOLUME_CAPACITY","NAMESPACE","JENKINS_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ENABLE_OAUTH":{"default":"true","description":"Whether
        to enable OAuth OpenShift integration. If false, the static account ''admin''
        will be initialized with the password ''password''.","title":"Enable OAuth
        in Jenkins","type":"string"},"JENKINS_IMAGE_STREAM_TAG":{"default":"jenkins:2","description":"Name
        of the ImageStreamTag to be used for the Jenkins image.","title":"Jenkins
        ImageStreamTag","type":"string"},"JENKINS_SERVICE_NAME":{"default":"jenkins","description":"The
        name of the OpenShift Service exposed for the Jenkins container.","title":"Jenkins
        Service Name","type":"string"},"JNLP_SERVICE_NAME":{"default":"jenkins-jnlp","description":"The
        name of the service used for master/slave communication.","title":"Jenkins
        JNLP Service Name","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the Jenkins ImageStream resides.","title":"Jenkins
        ImageStream Namespace","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi.","title":"Volume Capacity","type":"string"}},"required":["VOLUME_CAPACITY"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19a38330-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a48747-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19a48747-0d11-11e8-906a-d094660d31fb","uid":"94c300ae-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690690","creationTimestamp":"2018-05-16T20:49:09Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19a48747-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MONGODB_LIMIT","VOLUME_CAPACITY","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","DATABASE_SERVICE_NAME","DATABASE_USER","DATABASE_PASSWORD","DATABASE_NAME","DATABASE_ADMIN_PASSWORD","NPM_MIRROR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the Node.js service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"DATABASE_ADMIN_PASSWORD":{"default":"","description":"Password
        for the database admin user.","title":"Database Administrator Password","type":"string"},"DATABASE_NAME":{"default":"sampledb","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","description":"Password
        for the MongoDB user.","title":"MongoDB Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"mongodb","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"","description":"Username
        for MongoDB user that will be used for accessing the database.","title":"MongoDB
        Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the Node.js container can use.","title":"Memory Limit","type":"string"},"MEMORY_MONGODB_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the MongoDB container can use.","title":"Memory Limit (MongoDB)","type":"string"},"NAME":{"default":"nodejs-mongo-persistent","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"NPM_MIRROR":{"default":"","description":"The
        custom NPM mirror URL","title":"Custom NPM Mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/nodejs-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi","title":"Volume Capacity","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MONGODB_LIMIT","VOLUME_CAPACITY","SOURCE_REPOSITORY_URL","DATABASE_SERVICE_NAME","DATABASE_NAME"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19a48747-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a58974-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19a58974-0d11-11e8-906a-d094660d31fb","uid":"99693011-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690744","creationTimestamp":"2018-05-16T20:49:17Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19a58974-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MONGODB_LIMIT","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","DATABASE_SERVICE_NAME","DATABASE_USER","DATABASE_PASSWORD","DATABASE_NAME","DATABASE_ADMIN_PASSWORD","NPM_MIRROR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the Node.js service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"DATABASE_ADMIN_PASSWORD":{"default":"","description":"Password
        for the database admin user.","title":"Database Administrator Password","type":"string"},"DATABASE_NAME":{"default":"sampledb","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","description":"Password
        for the MongoDB user.","title":"MongoDB Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"mongodb","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"","description":"Username
        for MongoDB user that will be used for accessing the database.","title":"MongoDB
        Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the Node.js container can use.","title":"Memory Limit","type":"string"},"MEMORY_MONGODB_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the MongoDB container can use.","title":"Memory Limit (MongoDB)","type":"string"},"NAME":{"default":"nodejs-mongodb-example","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"NPM_MIRROR":{"default":"","description":"The
        custom NPM mirror URL","title":"Custom NPM Mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/nodejs-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_MONGODB_LIMIT","SOURCE_REPOSITORY_URL","DATABASE_SERVICE_NAME","DATABASE_NAME"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19a58974-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a6578a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19a6578a-0d11-11e8-906a-d094660d31fb","uid":"9ee50b9a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690807","creationTimestamp":"2018-05-16T20:49:26Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19a6578a-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19a6578a-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a7454f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19a7454f-0d11-11e8-906a-d094660d31fb","uid":"9260fec0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690652","creationTimestamp":"2018-05-16T20:49:05Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19a7454f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_POSTGRESQL_LIMIT","VOLUME_CAPACITY","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","SECRET_KEY_BASE","APPLICATION_USER","APPLICATION_PASSWORD","RAILS_ENV","DATABASE_SERVICE_NAME","DATABASE_USER","DATABASE_PASSWORD","DATABASE_NAME","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","RUBYGEM_MIRROR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the Rails service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"APPLICATION_PASSWORD":{"default":"secret","description":"The
        application password that is used within the sample application to authorize
        access on pages.","title":"Application Password","type":"string"},"APPLICATION_USER":{"default":"openshift","description":"The
        application user that is used within the sample application to authorize access
        on pages.","title":"Application Username","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"DATABASE_NAME":{"default":"root","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","title":"Database
        Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"postgresql","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"","title":"Database
        Username","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the Rails container can use.","title":"Memory Limit","type":"string"},"MEMORY_POSTGRESQL_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the PostgreSQL container can use.","title":"Memory Limit
        (PostgreSQL)","type":"string"},"NAME":{"default":"rails-pgsql-persistent","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"100","title":"Maximum
        Database Connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"12MB","title":"Shared
        Buffer Amount","type":"string"},"RAILS_ENV":{"default":"production","description":"Environment
        under which the sample application will run. Could be set to production, development
        or test.","title":"Rails Environment","type":"string"},"RUBYGEM_MIRROR":{"default":"","description":"The
        custom RubyGems mirror URL","title":"Custom RubyGems Mirror URL","type":"string"},"SECRET_KEY_BASE":{"default":"","description":"Your
        secret key for verifying the integrity of signed cookies.","title":"Secret
        Key","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/rails-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Volume
        space available for data, e.g. 512Mi, 2Gi","title":"Volume Capacity","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_POSTGRESQL_LIMIT","VOLUME_CAPACITY","SOURCE_REPOSITORY_URL","APPLICATION_USER","APPLICATION_PASSWORD","RAILS_ENV","DATABASE_SERVICE_NAME","DATABASE_NAME"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19a7454f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a85548-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19a85548-0d11-11e8-906a-d094660d31fb","uid":"8ca7be66-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690585","creationTimestamp":"2018-05-16T20:48:55Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19a85548-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_POSTGRESQL_LIMIT","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","SECRET_KEY_BASE","APPLICATION_USER","APPLICATION_PASSWORD","RAILS_ENV","DATABASE_SERVICE_NAME","DATABASE_USER","DATABASE_PASSWORD","DATABASE_NAME","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","RUBYGEM_MIRROR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the Rails service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"APPLICATION_PASSWORD":{"default":"secret","description":"The
        application password that is used within the sample application to authorize
        access on pages.","title":"Application Password","type":"string"},"APPLICATION_USER":{"default":"openshift","description":"The
        application user that is used within the sample application to authorize access
        on pages.","title":"Application Username","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"DATABASE_NAME":{"default":"root","title":"Database
        Name","type":"string"},"DATABASE_PASSWORD":{"default":"","title":"Database
        Password","type":"string"},"DATABASE_SERVICE_NAME":{"default":"postgresql","title":"Database
        Service Name","type":"string"},"DATABASE_USER":{"default":"","title":"Database
        Username","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the Rails container can use.","title":"Memory Limit","type":"string"},"MEMORY_POSTGRESQL_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the PostgreSQL container can use.","title":"Memory Limit
        (PostgreSQL)","type":"string"},"NAME":{"default":"rails-postgresql-example","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"100","title":"Maximum
        Database Connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"12MB","title":"Shared
        Buffer Amount","type":"string"},"RAILS_ENV":{"default":"production","description":"Environment
        under which the sample application will run. Could be set to production, development
        or test.","title":"Rails Environment","type":"string"},"RUBYGEM_MIRROR":{"default":"","description":"The
        custom RubyGems mirror URL","title":"Custom RubyGems Mirror URL","type":"string"},"SECRET_KEY_BASE":{"default":"","description":"Your
        secret key for verifying the integrity of signed cookies.","title":"Secret
        Key","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/openshift/rails-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"}},"required":["NAME","NAMESPACE","MEMORY_LIMIT","MEMORY_POSTGRESQL_LIMIT","SOURCE_REPOSITORY_URL","APPLICATION_USER","APPLICATION_PASSWORD","RAILS_ENV","DATABASE_SERVICE_NAME","DATABASE_NAME"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19a85548-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"19a93cec-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/19a93cec-0d11-11e8-906a-d094660d31fb","uid":"8f0a30a5-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690615","creationTimestamp":"2018-05-16T20:48:59Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"19a93cec-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["AMP_RELEASE","WILDCARD_DOMAIN","TENANT_NAME"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMP_RELEASE":{"default":"2.0.0-CR2-redhat-1","description":"AMP
        release tag.","type":"string"},"TENANT_NAME":{"default":"3scale","description":"Domain
        name under the root that Admin UI will be available with -admin suffix.","type":"string"},"WILDCARD_DOMAIN":{"default":"","description":"Root
        domain for the wildcard routes. Eg. example.com will generate 3scale-admin.example.com.","type":"string"}},"required":["AMP_RELEASE","WILDCARD_DOMAIN","TENANT_NAME"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"19a93cec-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1ae6b8c6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1ae6b8c6-0d11-11e8-906a-d094660d31fb","uid":"9b147d71-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690764","creationTimestamp":"2018-05-16T20:49:19Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1ae6b8c6-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","AMQ_QUEUE_MEMORY_LIMIT","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_QUEUE_MEMORY_LIMIT":{"default":"","description":"The
        queue memory limit (default is 1mb)","title":"Queue Memory Limit","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"broker","description":"The
        name for the application.","title":"Application Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Protocols
        to configure, separated by commas. Allowed values are: `openwire`, `amqp`,
        `stomp` and `mqtt`.","title":"A-MQ Protocols","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. If left empty, queues will be still created dynamically.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. If left empty, topics will be still created dynamically.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"}},"required":["APPLICATION_NAME","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1ae6b8c6-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1ae81e19-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1ae81e19-0d11-11e8-906a-d094660d31fb","uid":"92dab5af-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690661","creationTimestamp":"2018-05-16T20:49:06Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1ae81e19-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","VOLUME_CAPACITY","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_SECRET","AMQ_TRUSTSTORE","AMQ_TRUSTSTORE_PASSWORD","AMQ_KEYSTORE","AMQ_KEYSTORE_PASSWORD","AMQ_STORAGE_USAGE_LIMIT","AMQ_QUEUE_MEMORY_LIMIT","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_KEYSTORE":{"default":"broker.ks","description":"SSL
        key store filename","title":"A-MQ Keystore Filename","type":"string"},"AMQ_KEYSTORE_PASSWORD":{"default":"","description":"Password
        for accessing SSL keystore","title":"A-MQ Keystore Password","type":"string"},"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_QUEUE_MEMORY_LIMIT":{"default":"","description":"The
        queue memory limit (default is 1mb)","title":"Queue Memory Limit","type":"string"},"AMQ_SECRET":{"default":"amq-app-secret","description":"Name
        of a secret containing SSL related files","title":"Secret Name","type":"string"},"AMQ_SPLIT":{"default":"true","description":"Split
        the data directory for each node in a mesh, this is now the default behaviour.","title":"Split
        Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100 gb","description":"The
        A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"AMQ_TRUSTSTORE":{"default":"broker.ts","description":"SSL
        trust store filename","title":"Trust Store Filename","type":"string"},"AMQ_TRUSTSTORE_PASSWORD":{"default":"","description":"SSL
        trust store password","title":"Trust Store Password","type":"string"},"APPLICATION_NAME":{"default":"broker","description":"The
        name for the application.","title":"Application Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user.  It is required for connecting to the broker.  If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Protocols
        to configure, separated by commas.  Allowed values are: `openwire`, `amqp`,
        `stomp` and `mqtt`.","title":"A-MQ Protocols","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names, separated by commas.  These queues will be automatically created when
        the broker starts.  If left empty, queues will be still created dynamically.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas.  These topics will be automatically created when
        the broker starts.  If left empty, topics will be still created dynamically.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user.  It is required for connecting to the broker.  If
        left empty, it will be generated.","title":"A-MQ Username","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by A-MQ for persisting messages.","title":"A-MQ Volume
        Size","type":"string"}},"required":["APPLICATION_NAME","VOLUME_CAPACITY","AMQ_SECRET","AMQ_TRUSTSTORE","AMQ_TRUSTSTORE_PASSWORD","AMQ_KEYSTORE","AMQ_KEYSTORE_PASSWORD","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1ae81e19-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1ae93ba4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1ae93ba4-0d11-11e8-906a-d094660d31fb","uid":"9c270e07-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690777","creationTimestamp":"2018-05-16T20:49:21Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1ae93ba4-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","VOLUME_CAPACITY","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","AMQ_QUEUE_MEMORY_LIMIT","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_QUEUE_MEMORY_LIMIT":{"default":"","description":"The
        queue memory limit (default is 1mb)","title":"Queue Memory Limit","type":"string"},"AMQ_SPLIT":{"default":"true","description":"Split
        the data directory for each node in a mesh, this is now the default behaviour.","title":"Split
        Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100 gb","description":"The
        A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"broker","description":"The
        name for the application.","title":"Application Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user.  It is required for connecting to the broker.  If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Protocols
        to configure, separated by commas.  Allowed values are: `openwire`, `amqp`,
        `stomp` and `mqtt`.","title":"A-MQ Protocols","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names, separated by commas.  These queues will be automatically created when
        the broker starts.  If left empty, queues will be still created dynamically.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas.  These topics will be automatically created when
        the broker starts.  If left empty, topics will be still created dynamically.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user.  It is required for connecting to the broker.  If
        left empty, it will be generated.","title":"A-MQ Username","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by A-MQ for persisting messages.","title":"A-MQ Volume
        Size","type":"string"}},"required":["APPLICATION_NAME","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1ae93ba4-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aea4305-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1aea4305-0d11-11e8-906a-d094660d31fb","uid":"9612b004-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690705","creationTimestamp":"2018-05-16T20:49:11Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1aea4305-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","MQ_USERNAME","MQ_PASSWORD","AMQ_SECRET","AMQ_TRUSTSTORE","AMQ_TRUSTSTORE_PASSWORD","AMQ_KEYSTORE","AMQ_KEYSTORE_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","AMQ_QUEUE_MEMORY_LIMIT","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_KEYSTORE":{"default":"broker.ks","description":"SSL
        key store filename","title":"A-MQ Keystore Filename","type":"string"},"AMQ_KEYSTORE_PASSWORD":{"default":"","description":"Password
        for accessing SSL keystore","title":"A-MQ Keystore Password","type":"string"},"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_QUEUE_MEMORY_LIMIT":{"default":"","description":"The
        queue memory limit (default is 1mb)","title":"Queue Memory Limit","type":"string"},"AMQ_SECRET":{"default":"amq-app-secret","description":"Name
        of a secret containing SSL related files","title":"Secret Name","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"AMQ_TRUSTSTORE":{"default":"broker.ts","description":"SSL
        trust store filename","title":"Trust Store Filename","type":"string"},"AMQ_TRUSTSTORE_PASSWORD":{"default":"","description":"SSL
        trust store password","title":"Trust Store Password","type":"string"},"APPLICATION_NAME":{"default":"broker","description":"The
        name for the application.","title":"Application Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Protocols
        to configure, separated by commas. Allowed values are: `openwire`, `amqp`,
        `stomp` and `mqtt`. SSL variants of these protocols will be configured automaticaly.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. If left empty, queues will be still created dynamically.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. If left empty, topics will be still created dynamically.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"}},"required":["APPLICATION_NAME","AMQ_SECRET","AMQ_TRUSTSTORE","AMQ_TRUSTSTORE_PASSWORD","AMQ_KEYSTORE","AMQ_KEYSTORE_PASSWORD","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1aea4305-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aeb367d-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1aeb367d-0d11-11e8-906a-d094660d31fb","uid":"994ab19e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690743","creationTimestamp":"2018-05-16T20:49:16Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1aeb367d-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","AMQ_QUEUE_MEMORY_LIMIT","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_QUEUE_MEMORY_LIMIT":{"default":"","description":"The
        queue memory limit (default is 1mb)","title":"Queue Memory Limit","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"broker","description":"The
        name for the application.","title":"Application Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Protocols
        to configure, separated by commas. Allowed values are: `openwire`, `amqp`,
        `stomp` and `mqtt`.","title":"A-MQ Protocols","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. If left empty, queues will be still created dynamically.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. If left empty, topics will be still created dynamically.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"}},"required":["APPLICATION_NAME","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1aeb367d-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aec5f6c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1aec5f6c-0d11-11e8-906a-d094660d31fb","uid":"8ffe4460-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690626","creationTimestamp":"2018-05-16T20:49:01Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1aec5f6c-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","VOLUME_CAPACITY","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_SECRET","AMQ_TRUSTSTORE","AMQ_TRUSTSTORE_PASSWORD","AMQ_KEYSTORE","AMQ_KEYSTORE_PASSWORD","AMQ_STORAGE_USAGE_LIMIT","AMQ_QUEUE_MEMORY_LIMIT","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_KEYSTORE":{"default":"broker.ks","description":"SSL
        key store filename","title":"A-MQ Keystore Filename","type":"string"},"AMQ_KEYSTORE_PASSWORD":{"default":"","description":"Password
        for accessing SSL keystore","title":"A-MQ Keystore Password","type":"string"},"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_QUEUE_MEMORY_LIMIT":{"default":"","description":"The
        queue memory limit (default is 1mb)","title":"Queue Memory Limit","type":"string"},"AMQ_SECRET":{"default":"amq-app-secret","description":"Name
        of a secret containing SSL related files","title":"Secret Name","type":"string"},"AMQ_SPLIT":{"default":"true","description":"Split
        the data directory for each node in a mesh, this is now the default behaviour.","title":"Split
        Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100 gb","description":"The
        A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"AMQ_TRUSTSTORE":{"default":"broker.ts","description":"SSL
        trust store filename","title":"Trust Store Filename","type":"string"},"AMQ_TRUSTSTORE_PASSWORD":{"default":"","description":"SSL
        trust store password","title":"Trust Store Password","type":"string"},"APPLICATION_NAME":{"default":"broker","description":"The
        name for the application.","title":"Application Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user.  It is required for connecting to the broker.  If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Protocols
        to configure, separated by commas.  Allowed values are: `openwire`, `amqp`,
        `stomp` and `mqtt`.","title":"A-MQ Protocols","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names, separated by commas.  These queues will be automatically created when
        the broker starts.  If left empty, queues will be still created dynamically.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas.  These topics will be automatically created when
        the broker starts.  If left empty, topics will be still created dynamically.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user.  It is required for connecting to the broker.  If
        left empty, it will be generated.","title":"A-MQ Username","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by A-MQ for persisting messages.","title":"A-MQ Volume
        Size","type":"string"}},"required":["APPLICATION_NAME","VOLUME_CAPACITY","AMQ_SECRET","AMQ_TRUSTSTORE","AMQ_TRUSTSTORE_PASSWORD","AMQ_KEYSTORE","AMQ_KEYSTORE_PASSWORD","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1aec5f6c-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aed7362-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1aed7362-0d11-11e8-906a-d094660d31fb","uid":"97255849-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690717","creationTimestamp":"2018-05-16T20:49:13Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1aed7362-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","VOLUME_CAPACITY","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","AMQ_QUEUE_MEMORY_LIMIT","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_QUEUE_MEMORY_LIMIT":{"default":"","description":"The
        queue memory limit (default is 1mb)","title":"Queue Memory Limit","type":"string"},"AMQ_SPLIT":{"default":"true","description":"Split
        the data directory for each node in a mesh, this is now the default behaviour.","title":"Split
        Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100 gb","description":"The
        A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"broker","description":"The
        name for the application.","title":"Application Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user.  It is required for connecting to the broker.  If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Protocols
        to configure, separated by commas.  Allowed values are: `openwire`, `amqp`,
        `stomp` and `mqtt`.","title":"A-MQ Protocols","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names, separated by commas.  These queues will be automatically created when
        the broker starts.  If left empty, queues will be still created dynamically.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas.  These topics will be automatically created when
        the broker starts.  If left empty, topics will be still created dynamically.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user.  It is required for connecting to the broker.  If
        left empty, it will be generated.","title":"A-MQ Username","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by A-MQ for persisting messages.","title":"A-MQ Volume
        Size","type":"string"}},"required":["APPLICATION_NAME","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1aed7362-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aee88b9-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1aee88b9-0d11-11e8-906a-d094660d31fb","uid":"91e685cb-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690647","creationTimestamp":"2018-05-16T20:49:04Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1aee88b9-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","MQ_USERNAME","MQ_PASSWORD","AMQ_SECRET","AMQ_TRUSTSTORE","AMQ_TRUSTSTORE_PASSWORD","AMQ_KEYSTORE","AMQ_KEYSTORE_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","AMQ_QUEUE_MEMORY_LIMIT","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_KEYSTORE":{"default":"broker.ks","description":"SSL
        key store filename","title":"A-MQ Keystore Filename","type":"string"},"AMQ_KEYSTORE_PASSWORD":{"default":"","description":"Password
        for accessing SSL keystore","title":"A-MQ Keystore Password","type":"string"},"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_QUEUE_MEMORY_LIMIT":{"default":"","description":"The
        queue memory limit (default is 1mb)","title":"Queue Memory Limit","type":"string"},"AMQ_SECRET":{"default":"amq-app-secret","description":"Name
        of a secret containing SSL related files","title":"Secret Name","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"AMQ_TRUSTSTORE":{"default":"broker.ts","description":"SSL
        trust store filename","title":"Trust Store Filename","type":"string"},"AMQ_TRUSTSTORE_PASSWORD":{"default":"","description":"SSL
        trust store password","title":"Trust Store Password","type":"string"},"APPLICATION_NAME":{"default":"broker","description":"The
        name for the application.","title":"Application Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Protocols
        to configure, separated by commas. Allowed values are: `openwire`, `amqp`,
        `stomp` and `mqtt`. SSL variants of these protocols will be configured automaticaly.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. If left empty, queues will be still created dynamically.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. If left empty, topics will be still created dynamically.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"}},"required":["APPLICATION_NAME","AMQ_SECRET","AMQ_TRUSTSTORE","AMQ_TRUSTSTORE_PASSWORD","AMQ_KEYSTORE","AMQ_KEYSTORE_PASSWORD","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1aee88b9-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1aef8bf0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1aef8bf0-0d11-11e8-906a-d094660d31fb","uid":"95b722d5-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690701","creationTimestamp":"2018-05-16T20:49:10Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1aef8bf0-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","USERNAME","PASSWORD","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_CLUSTER_PASSWORD","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"}},"required":["APPLICATION_NAME","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1aef8bf0-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af099e2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1af099e2-0d11-11e8-906a-d094660d31fb","uid":"9a5d5a60-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690757","creationTimestamp":"2018-05-16T20:49:18Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1af099e2-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","USERNAME","PASSWORD","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"}},"required":["APPLICATION_NAME","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1af099e2-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af1f460-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1af1f460-0d11-11e8-906a-d094660d31fb","uid":"979f6b45-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690722","creationTimestamp":"2018-05-16T20:49:14Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1af1f460-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","USERNAME","PASSWORD","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_JNDI","DB_DATABASE","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:/jboss/datasources/mysql","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","HTTPS_SECRET","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1af1f460-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af39c48-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1af39c48-0d11-11e8-906a-d094660d31fb","uid":"94677694-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690687","creationTimestamp":"2018-05-16T20:49:08Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1af39c48-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","USERNAME","PASSWORD","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_JNDI","DB_DATABASE","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:/jboss/datasources/mysql","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"}},"required":["APPLICATION_NAME","HTTPS_SECRET","DB_DATABASE","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1af39c48-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af4f88b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1af4f88b-0d11-11e8-906a-d094660d31fb","uid":"9dd25e16-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690796","creationTimestamp":"2018-05-16T20:49:24Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1af4f88b-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","USERNAME","PASSWORD","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_JNDI","DB_DATABASE","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/postgresql","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","HTTPS_SECRET","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1af4f88b-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af63c7c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1af63c7c-0d11-11e8-906a-d094660d31fb","uid":"8f28ba59-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690616","creationTimestamp":"2018-05-16T20:48:59Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1af63c7c-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","USERNAME","PASSWORD","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_JNDI","DB_DATABASE","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configurd for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/postgresql","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"}},"required":["APPLICATION_NAME","HTTPS_SECRET","DB_DATABASE","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1af63c7c-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af74b3e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1af74b3e-0d11-11e8-906a-d094660d31fb","uid":"97bdf865-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690723","creationTimestamp":"2018-05-16T20:49:14Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1af74b3e-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","USERNAME","PASSWORD","ADMIN_GROUP","HOTROD_AUTHENTICATION","CONTAINER_SECURITY_ROLE_MAPPER","CONTAINER_SECURITY_ROLES","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_CLUSTER_PASSWORD","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ADMIN_GROUP":{"default":"","description":"Comma
        delimited list of roles/groups associated with the JDG user","title":"JDG
        User Roles/Groups","type":"string"},"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"CONTAINER_SECURITY_ROLES":{"default":"","description":"Comma
        delimited list of role names and assigned permissions","title":"Container
        Security Roles","type":"string"},"CONTAINER_SECURITY_ROLE_MAPPER":{"default":"","description":"Defines
        which role mapper to use for cache authentication","title":"Container Security
        Role Mapper","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOTROD_AUTHENTICATION":{"default":"","description":"Enable
        Hotrod Authentication","title":"Hotrod Authentication","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"}},"required":["APPLICATION_NAME","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1af74b3e-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af852b9-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1af852b9-0d11-11e8-906a-d094660d31fb","uid":"95d5b245-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690702","creationTimestamp":"2018-05-16T20:49:11Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1af852b9-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","USERNAME","PASSWORD","ADMIN_GROUP","HOTROD_AUTHENTICATION","CONTAINER_SECURITY_ROLE_MAPPER","CONTAINER_SECURITY_ROLES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ADMIN_GROUP":{"default":"","description":"Comma
        delimited list of roles/groups associated with the JDG user","title":"JDG
        User Roles/Groups","type":"string"},"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"CONTAINER_SECURITY_ROLES":{"default":"","description":"Comma
        delimited list of role names and assigned permissions","title":"Container
        Security Roles","type":"string"},"CONTAINER_SECURITY_ROLE_MAPPER":{"default":"","description":"Defines
        which role mapper to use for cache authentication","title":"Container Security
        Role Mapper","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HOTROD_AUTHENTICATION":{"default":"","description":"Enable
        Hotrod Authentication","title":"Hotrod Authentication","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"}},"required":["APPLICATION_NAME","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1af852b9-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1af9a98e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1af9a98e-0d11-11e8-906a-d094660d31fb","uid":"9391d0b9-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690676","creationTimestamp":"2018-05-16T20:49:07Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1af9a98e-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","USERNAME","PASSWORD","ADMIN_GROUP","HOTROD_AUTHENTICATION","CONTAINER_SECURITY_ROLE_MAPPER","CONTAINER_SECURITY_ROLES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_JNDI","DB_DATABASE","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ADMIN_GROUP":{"default":"","description":"Comma
        delimited list of roles/groups associated with the JDG user","title":"JDG
        User Roles/Groups","type":"string"},"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"CONTAINER_SECURITY_ROLES":{"default":"","description":"Comma
        delimited list of role names and assigned permissions","title":"Container
        Security Roles","type":"string"},"CONTAINER_SECURITY_ROLE_MAPPER":{"default":"","description":"Defines
        which role mapper to use for cache authentication","title":"Container Security
        Role Mapper","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:/jboss/datasources/mysql","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HOTROD_AUTHENTICATION":{"default":"","description":"Enable
        Hotrod Authentication","title":"Hotrod Authentication","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","HTTPS_SECRET","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1af9a98e-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1afaeb55-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1afaeb55-0d11-11e8-906a-d094660d31fb","uid":"9a3ed072-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690755","creationTimestamp":"2018-05-16T20:49:18Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1afaeb55-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","USERNAME","PASSWORD","ADMIN_GROUP","HOTROD_AUTHENTICATION","CONTAINER_SECURITY_ROLE_MAPPER","CONTAINER_SECURITY_ROLES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_JNDI","DB_DATABASE","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ADMIN_GROUP":{"default":"","description":"Comma
        delimited list of roles/groups associated with the JDG user","title":"JDG
        User Roles/Groups","type":"string"},"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"CONTAINER_SECURITY_ROLES":{"default":"","description":"Comma
        delimited list of role names and assigned permissions","title":"Container
        Security Roles","type":"string"},"CONTAINER_SECURITY_ROLE_MAPPER":{"default":"","description":"Defines
        which role mapper to use for cache authentication","title":"Container Security
        Role Mapper","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:/jboss/datasources/mysql","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HOTROD_AUTHENTICATION":{"default":"","description":"Enable
        Hotrod Authentication","title":"Hotrod Authentication","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"}},"required":["APPLICATION_NAME","HTTPS_SECRET","DB_DATABASE","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1afaeb55-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1afc51e6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1afc51e6-0d11-11e8-906a-d094660d31fb","uid":"8a086ec4-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690556","creationTimestamp":"2018-05-16T20:48:51Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1afc51e6-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","USERNAME","PASSWORD","ADMIN_GROUP","HOTROD_AUTHENTICATION","CONTAINER_SECURITY_ROLE_MAPPER","CONTAINER_SECURITY_ROLES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_JNDI","DB_DATABASE","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ADMIN_GROUP":{"default":"","description":"Comma
        delimited list of roles/groups associated with the JDG user","title":"JDG
        User Roles/Groups","type":"string"},"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"CONTAINER_SECURITY_ROLES":{"default":"","description":"Comma
        delimited list of role names and assigned permissions","title":"Container
        Security Roles","type":"string"},"CONTAINER_SECURITY_ROLE_MAPPER":{"default":"","description":"Defines
        which role mapper to use for cache authentication","title":"Container Security
        Role Mapper","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/postgresql","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HOTROD_AUTHENTICATION":{"default":"","description":"Enable
        Hotrod Authentication","title":"Hotrod Authentication","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","HTTPS_SECRET","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1afc51e6-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1afd8aca-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1afd8aca-0d11-11e8-906a-d094660d31fb","uid":"963139d0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690707","creationTimestamp":"2018-05-16T20:49:11Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1afd8aca-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","USERNAME","PASSWORD","ADMIN_GROUP","HOTROD_AUTHENTICATION","CONTAINER_SECURITY_ROLE_MAPPER","CONTAINER_SECURITY_ROLES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_JNDI","DB_DATABASE","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","REST_SECURITY_DOMAIN","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ADMIN_GROUP":{"default":"","description":"Comma
        delimited list of roles/groups associated with the JDG user","title":"JDG
        User Roles/Groups","type":"string"},"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configurd for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"CONTAINER_SECURITY_ROLES":{"default":"","description":"Comma
        delimited list of role names and assigned permissions","title":"Container
        Security Roles","type":"string"},"CONTAINER_SECURITY_ROLE_MAPPER":{"default":"","description":"Defines
        which role mapper to use for cache authentication","title":"Container Security
        Role Mapper","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/postgresql","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HOTROD_AUTHENTICATION":{"default":"","description":"Enable
        Hotrod Authentication","title":"Hotrod Authentication","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datagrid-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"}},"required":["APPLICATION_NAME","HTTPS_SECRET","DB_DATABASE","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1afd8aca-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1afea652-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1afea652-0d11-11e8-906a-d094660d31fb","uid":"9c459edf-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690778","creationTimestamp":"2018-05-16T20:49:21Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1afea652-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","CONFIGURATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","TEIID_USERNAME","TEIID_PASSWORD","MODESHAPE_USERNAME","MODESHAPE_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","VDB_DIRS","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"datavirt-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","title":"Artifact
        Directories","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONFIGURATION_NAME":{"default":"datavirt-app-config","description":"The
        name of the secret containing configuration properties for the data sources.","title":"Configuration
        Secret Name","type":"string"},"CONTEXT_DIR":{"default":"datavirt/dynamicvdb-datafederation/app","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the GitHub webhook.","title":"Github Webhook
        Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Specify
        a custom hostname for the http route.  Leave blank to use default hostname,
        e.g.: \u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"Password
        used by JGroups to authenticate nodes in the cluster.","title":"JGroups Cluster
        Password","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MODESHAPE_PASSWORD":{"default":"","description":"Password
        for ModeShape user.","title":"ModeShape User Password","type":"string"},"MODESHAPE_USERNAME":{"default":"","description":"Username
        associated with ModeShape.","title":"ModeShape Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"master","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"TEIID_PASSWORD":{"default":"","description":"Password
        for Teiid user.","title":"Teiid User Password","type":"string"},"TEIID_USERNAME":{"default":"","description":"Username
        associated with Teiid data service.","title":"Teiid Username","type":"string"},"VDB_DIRS":{"default":"","description":"Comma
        delimited list of source directories containing VDBs for deployment","title":"VDB
        Deployment Directories","type":"string"}},"required":["APPLICATION_NAME","CONFIGURATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1afea652-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b001f48-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b001f48-0d11-11e8-906a-d094660d31fb","uid":"9ea7fb8d-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690804","creationTimestamp":"2018-05-16T20:49:25Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b001f48-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","CONFIGURATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","HOSTNAME_JDBC","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","EXTENSIONS_REPOSITORY_URL","EXTENSIONS_REPOSITORY_REF","EXTENSIONS_DIR","EXTENSIONS_DOCKERFILE","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","TEIID_USERNAME","TEIID_PASSWORD","MODESHAPE_USERNAME","MODESHAPE_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","VDB_DIRS","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"datavirt-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","title":"Artifact
        Directories","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONFIGURATION_NAME":{"default":"datavirt-app-config","description":"The
        name of the secret containing configuration properties for the data sources.","title":"Configuration
        Secret Name","type":"string"},"CONTEXT_DIR":{"default":"datavirt/dynamicvdb-datafederation/app","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"EXTENSIONS_DIR":{"default":"datavirt/derby-driver-image","description":"Set
        this to the relative path to your project if it is not in the root of your
        extensions repository.","title":"Extensions Context Directory","type":"string"},"EXTENSIONS_DOCKERFILE":{"default":"Dockerfile","description":"Set
        this to the relative path to the Dockerfile in your extensions directory.","title":"Extensions
        Dockerfile","type":"string"},"EXTENSIONS_REPOSITORY_REF":{"default":"master","description":"Set
        this to a branch name, tag or other ref of your extensions repository if you
        are not using the default branch.","title":"Extensions Git Reference","type":"string"},"EXTENSIONS_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"The
        URL of the repository with source code for the extensions image.  The image
        should have all modules, etc., placed in the \"/extensions/\" directory in
        the image.  If the contents are in a different directory, the sourcePath for
        the ImageSource in the BuildConfig must be modified.","title":"Extensions
        Git Repository URL","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the GitHub webhook.","title":"Github Webhook
        Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Specify
        a custom hostname for the http route.  Leave blank to use default hostname,
        e.g.: \u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Specify
        a custom hostname for the https route.  Leave blank to use default hostname,
        e.g.: secure-\u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HOSTNAME_JDBC":{"default":"","description":"Specify
        a custom hostname for the JDBC route.  Leave blank to use default hostname,
        e.g.: secure-\u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        JDBC Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret.","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS).","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate.","title":"Server Certificate
        Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datavirt-app-secret","description":"The
        name of the secret containing the keystore to be used for serving secure content.","title":"Server
        Keystore Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"Password
        used by JGroups to authenticate nodes in the cluster.","title":"JGroups Cluster
        Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the JGroups secret.","title":"JGroups Keystore
        Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"secret-key","description":"The
        name associated with the JGroups server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"password","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datavirt-app-secret","description":"The
        name of the secret containing the keystore to be used for securing JGroups
        communications.","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MODESHAPE_PASSWORD":{"default":"","description":"Password
        for ModeShape user.","title":"ModeShape User Password","type":"string"},"MODESHAPE_USERNAME":{"default":"","description":"Username
        associated with ModeShape.","title":"ModeShape Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"master","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"TEIID_PASSWORD":{"default":"","description":"Password
        for Teiid user.","title":"Teiid User Password","type":"string"},"TEIID_USERNAME":{"default":"","description":"Username
        associated with Teiid data service.","title":"Teiid Username","type":"string"},"VDB_DIRS":{"default":"","description":"Comma
        delimited list of source directories containing VDBs for deployment","title":"VDB
        Deployment Directories","type":"string"}},"required":["APPLICATION_NAME","CONFIGURATION_NAME","SOURCE_REPOSITORY_URL","EXTENSIONS_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b001f48-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b018925-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b018925-0d11-11e8-906a-d094660d31fb","uid":"8eebb18e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690613","creationTimestamp":"2018-05-16T20:48:59Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b018925-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","CONFIGURATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","HOSTNAME_JDBC","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","TEIID_USERNAME","TEIID_PASSWORD","MODESHAPE_USERNAME","MODESHAPE_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","VDB_DIRS","SSO_URL","SSO_SERVICE_URL","SSO_REALM","SSO_USERNAME","SSO_PASSWORD","SSO_PUBLIC_KEY","SSO_BEARER_ONLY","SSO_SAML_KEYSTORE_SECRET","SSO_SAML_KEYSTORE","SSO_SAML_CERTIFICATE_NAME","SSO_SAML_KEYSTORE_PASSWORD","SSO_SECRET","SSO_ENABLE_CORS","SSO_SAML_LOGOUT_PAGE","SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","SSO_OPENIDCONNECT_DEPLOYMENTS","SSO_SAML_DEPLOYMENTS","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"datavirt-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","title":"Artifact
        Directories","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONFIGURATION_NAME":{"default":"datavirt-app-config","description":"The
        name of the secret containing configuration properties for the data sources.","title":"Configuration
        Secret Name","type":"string"},"CONTEXT_DIR":{"default":"datavirt/dynamicvdb-datafederation/app","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the GitHub webhook.","title":"Github Webhook
        Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Specify
        a custom hostname for the http route.  Leave blank to use default hostname,
        e.g.: \u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Specify
        a custom hostname for the https route.  Leave blank to use default hostname,
        e.g.: secure-\u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HOSTNAME_JDBC":{"default":"","description":"Specify
        a custom hostname for the JDBC route.  Leave blank to use default hostname,
        e.g.: secure-\u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        JDBC Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret.","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS).","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate.","title":"Server Certificate
        Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"datavirt-app-secret","description":"The
        name of the secret containing the keystore to be used for serving secure content.","title":"Server
        Keystore Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"Password
        used by JGroups to authenticate nodes in the cluster.","title":"JGroups Cluster
        Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the JGroups secret.","title":"JGroups Keystore
        Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"secret-key","description":"The
        name associated with the JGroups server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"password","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"datavirt-app-secret","description":"The
        name of the secret containing the keystore to be used for securing JGroups
        communications.","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MODESHAPE_PASSWORD":{"default":"","description":"Password
        for ModeShape user.","title":"ModeShape User Password","type":"string"},"MODESHAPE_USERNAME":{"default":"","description":"Username
        associated with ModeShape.","title":"ModeShape Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"master","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"SSO_BEARER_ONLY":{"default":"","description":"SSO Client
        Access Type. true or false","title":"SSO Bearer Only","type":"string"},"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION":{"default":"true","description":"If
        true SSL communication between EAP and the SSO Server will be insecure (i.e.
        certificate validation is disabled with curl)","title":"SSO Disable SSL Certificate
        Validation","type":"string"},"SSO_ENABLE_CORS":{"default":"false","description":"Enable
        CORS for SSO applications. true or false","title":"SSO Enable CORS","type":"string"},"SSO_OPENIDCONNECT_DEPLOYMENTS":{"default":"","description":"Comma
        delimited list of deployments that shoulds be exploded and enabled for SSO
        OpenIDConnect via auth-method","title":"SSO OpenIDConnect Deployments","type":"string"},"SSO_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO User''s Password","type":"string"},"SSO_PUBLIC_KEY":{"default":"","description":"SSO
        Realm Public Key. Public key is recommended to be passed into the template
        to avoid man-in-the-middle security vulnerability.  This can be retrieved
        from the SSO server, for the specified realm.","title":"SSO Realm Public Key","type":"string"},"SSO_REALM":{"default":"","description":"The
        SSO realm to which the application client(s) should be associated (e.g. demo).","title":"SSO
        Realm","type":"string"},"SSO_SAML_CERTIFICATE_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"SSO SAML Certificate
        Alias","type":"string"},"SSO_SAML_DEPLOYMENTS":{"default":"","description":"Comma
        delimited list of deployments that shoulds be exploded and enabled for SSO
        SAML via auth-method","title":"SSO SAML Deployments","type":"string"},"SSO_SAML_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"SSO SAML Keystore File","type":"string"},"SSO_SAML_KEYSTORE_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"SSO SAML Keystore Password","type":"string"},"SSO_SAML_KEYSTORE_SECRET":{"default":"datavirt-app-secret","description":"The
        name of the secret containing the keystore file","title":"SSO SAML Keystore
        Secret","type":"string"},"SSO_SAML_LOGOUT_PAGE":{"default":"/","description":"SSO
        logout page for SAML applications","title":"SSO SAML Logout Page","type":"string"},"SSO_SECRET":{"default":"","description":"The
        SSO Client Secret for Confidential Access","title":"SSO Client Secret","type":"string"},"SSO_SERVICE_URL":{"default":"","description":"The
        URL for the interal SSO service, where secure-sso is the kubernetes service
        exposed by the SSO server.  This is used to create the application client(s)
        (see SSO_USERNAME).  This can also be the same as SSO_URL.","title":"SSO Server
        Service URL","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Truststore File","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Truststore Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"datavirt-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Truststore Secret","type":"string"},"SSO_URL":{"default":"","description":"The
        URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This
        is the URL through which the user will be redirected when a login or token
        is required by the application.","title":"SSO Server URL","type":"string"},"SSO_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used to create the appliction
        client(s) within the specified SSO realm. This should match the SSO_SERVICE_USERNAME
        specified through one of the sso70-* templates.","title":"SSO Username","type":"string"},"TEIID_PASSWORD":{"default":"","description":"Password
        for Teiid user.","title":"Teiid User Password","type":"string"},"TEIID_USERNAME":{"default":"","description":"Username
        associated with Teiid data service.","title":"Teiid Username","type":"string"},"VDB_DIRS":{"default":"","description":"Comma
        delimited list of source directories containing VDBs for deployment","title":"VDB
        Deployment Directories","type":"string"}},"required":["APPLICATION_NAME","CONFIGURATION_NAME","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b018925-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b02cff3-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b02cff3-0d11-11e8-906a-d094660d31fb","uid":"951e883f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690695","creationTimestamp":"2018-05-16T20:49:09Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b02cff3-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_RESPONSE","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_JNDI","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"kube","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CONTEXT_DIR":{"default":"decisionserver/hellorules","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"decisionserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"HelloRulesContainer=org.openshift.quickstarts:decisionserver-hellorules:1.2.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b02cff3-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b03d2e4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b03d2e4-0d11-11e8-906a-d094660d31fb","uid":"912f7536-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690639","creationTimestamp":"2018-05-16T20:49:03Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b03d2e4-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CONTEXT_DIR":{"default":"decisionserver/hellorules","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"HelloRulesContainer=org.openshift.quickstarts:decisionserver-hellorules:1.2.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b03d2e4-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b04db62-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b04db62-0d11-11e8-906a-d094660d31fb","uid":"8c6abe33-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690583","creationTimestamp":"2018-05-16T20:48:55Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b04db62-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CONTEXT_DIR":{"default":"decisionserver/hellorules","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"decisionserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"HelloRulesContainer=org.openshift.quickstarts:decisionserver-hellorules:1.2.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b04db62-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0607d9-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b0607d9-0d11-11e8-906a-d094660d31fb","uid":"9a01c67c-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690751","creationTimestamp":"2018-05-16T20:49:18Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b0607d9-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_REQUEST","KIE_SERVER_JMS_QUEUES_RESPONSE","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_JNDI","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"kube","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"decisionserver/hellorules","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"decisionserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_JMS_QUEUES_REQUEST":{"default":"queue/KIE.SERVER.REQUEST","description":"JNDI
        name of request queue for JMS.","title":"KIE Server JMS Queues Request","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b0607d9-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b07071a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b07071a-0d11-11e8-906a-d094660d31fb","uid":"9b32fa28-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690765","creationTimestamp":"2018-05-16T20:49:20Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b07071a-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"decisionserver/hellorules","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b07071a-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b080b66-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b080b66-0d11-11e8-906a-d094660d31fb","uid":"9d76bdc0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690791","creationTimestamp":"2018-05-16T20:49:23Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b080b66-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"decisionserver/hellorules","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"decisionserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b080b66-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b09409b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b09409b-0d11-11e8-906a-d094660d31fb","uid":"901ce6f6-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690627","creationTimestamp":"2018-05-16T20:49:01Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b09409b-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_REQUEST","KIE_SERVER_JMS_QUEUES_RESPONSE","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_JNDI","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"decisionserver/hellorules","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"decisionserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_JMS_QUEUES_REQUEST":{"default":"queue/KIE.SERVER.REQUEST","description":"JNDI
        name of request queue for JMS.","title":"KIE Server JMS Queues Request","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b09409b-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0a471f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b0a471f-0d11-11e8-906a-d094660d31fb","uid":"9d5834fc-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690790","creationTimestamp":"2018-05-16T20:49:23Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b0a471f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"decisionserver/hellorules","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b0a471f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0b3a89-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b0b3a89-0d11-11e8-906a-d094660d31fb","uid":"8d406e4c-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690594","creationTimestamp":"2018-05-16T20:48:56Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b0b3a89-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"decisionserver/hellorules","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"decisionserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b0b3a89-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0ccb7e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b0ccb7e-0d11-11e8-906a-d094660d31fb","uid":"8b583260-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690570","creationTimestamp":"2018-05-16T20:48:53Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b0ccb7e-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","VOLUME_CAPACITY","MQ_JNDI","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_SPLIT":{"default":"false","description":"Split
        the data directory for each node in a mesh.","title":"Split Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"helloworld-mdb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/ConnectionFactory","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/ConnectionFactory","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"HELLOWORLDMDBQueue","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"HELLOWORLDMDBTopic","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"6.4.x","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by A-MQ for persisting messages.","title":"A-MQ Volume
        Size","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b0ccb7e-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0e1f1b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b0e1f1b-0d11-11e8-906a-d094660d31fb","uid":"948601f9-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690688","creationTimestamp":"2018-05-16T20:49:08Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b0e1f1b-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_JNDI","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"helloworld-mdb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/ConnectionFactory","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/ConnectionFactory","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"HELLOWORLDMDBQueue","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"HELLOWORLDMDBTopic","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"6.4.x","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b0e1f1b-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b0f5a31-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b0f5a31-0d11-11e8-906a-d094660d31fb","uid":"8a828258-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690561","creationTimestamp":"2018-05-16T20:48:52Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b0f5a31-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"kitchensink","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"6.4.x","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b0f5a31-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b10676f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b10676f-0d11-11e8-906a-d094660d31fb","uid":"8b3998c0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690569","creationTimestamp":"2018-05-16T20:48:53Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b10676f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"kitchensink","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"6.4.x","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b10676f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b11ad4b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b11ad4b-0d11-11e8-906a-d094660d31fb","uid":"957a200c-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690699","creationTimestamp":"2018-05-16T20:49:10Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b11ad4b-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","HORNETQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b11ad4b-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b12f175-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b12f175-0d11-11e8-906a-d094660d31fb","uid":"92421f34-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690650","creationTimestamp":"2018-05-16T20:49:05Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b12f175-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","HORNETQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b12f175-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b1440d0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b1440d0-0d11-11e8-906a-d094660d31fb","uid":"9cfcb2a2-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690785","creationTimestamp":"2018-05-16T20:49:23Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b1440d0-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","HORNETQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b1440d0-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b158bdc-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b158bdc-0d11-11e8-906a-d094660d31fb","uid":"8d21f041-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690592","creationTimestamp":"2018-05-16T20:48:56Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b158bdc-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","HORNETQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b158bdc-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b16f0d8-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b16f0d8-0d11-11e8-906a-d094660d31fb","uid":"8bb3b326-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690574","creationTimestamp":"2018-05-16T20:48:54Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b16f0d8-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","HORNETQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b16f0d8-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b182f3f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b182f3f-0d11-11e8-906a-d094660d31fb","uid":"9d39b64b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690788","creationTimestamp":"2018-05-16T20:49:23Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b182f3f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","HORNETQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b182f3f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b19b6a6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b19b6a6-0d11-11e8-906a-d094660d31fb","uid":"96ab5e4a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690713","creationTimestamp":"2018-05-16T20:49:12Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b19b6a6-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","SSO_URL","SSO_SERVICE_URL","SSO_REALM","SSO_USERNAME","SSO_PASSWORD","SSO_PUBLIC_KEY","SSO_BEARER_ONLY","ARTIFACT_DIR","SSO_SAML_KEYSTORE_SECRET","SSO_SAML_KEYSTORE","SSO_SAML_CERTIFICATE_NAME","SSO_SAML_KEYSTORE_PASSWORD","SSO_SECRET","SSO_ENABLE_CORS","SSO_SAML_LOGOUT_PAGE","SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","MAVEN_MIRROR_URL","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"app-jee-jsp/target,service-jee-jaxrs/target,app-profile-jee-jsp/target,app-profile-saml-jee-jsp/target","description":"List
        of directories from which archives will be copied into the deployment folder.  If
        unspecified, all archives in /target will be copied.","title":"Artifact Directories","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Hostname
        for http service route (e.g. eap-app-myproject.example.com).  Required for
        SSO-enabled applications.  This is added to the white list of redirects in
        the SSO server.","title":"Custom http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Hostname
        for https service route (e.g. secure-eap-app-myproject.example.com).  Required
        for SSO-enabled applications.  This is added to the white list of redirects
        in the SSO server.","title":"Custom https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"7.0.x-ose","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/redhat-developer/redhat-sso-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"SSO_BEARER_ONLY":{"default":"","description":"SSO
        Client Access Type","title":"SSO Bearer Only?","type":"string"},"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION":{"default":"true","description":"If
        true SSL communication between EAP and the SSO Server will be insecure (i.e.
        certificate validation is disabled with curl)","title":"Disable SSL Validation
        in EAP-\u003eSSO communication","type":"string"},"SSO_ENABLE_CORS":{"default":"false","description":"Enable
        CORS for SSO applications","title":"Enable CORS for SSO?","type":"string"},"SSO_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Password","type":"string"},"SSO_PUBLIC_KEY":{"default":"","description":"SSO
        Public Key. Public key is recommended to be passed into the template to avoid
        man-in-the-middle security vulnerability.  This can be retrieved from the
        SSO server, for the specified realm.","title":"SSO Public Key","type":"string"},"SSO_REALM":{"default":"","description":"The
        SSO realm to which the application client(s) should be associated (e.g. demo).","title":"SSO
        Realm","type":"string"},"SSO_SAML_CERTIFICATE_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"SSO SAML Certificate
        Name","type":"string"},"SSO_SAML_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"SSO SAML Keystore","type":"string"},"SSO_SAML_KEYSTORE_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"SSO SAML Keystore Password","type":"string"},"SSO_SAML_KEYSTORE_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"SSO SAML Keystore
        Secret","type":"string"},"SSO_SAML_LOGOUT_PAGE":{"default":"/","description":"SSO
        logout page for SAML applications","title":"SSO SAML Logout Page","type":"string"},"SSO_SECRET":{"default":"","description":"The
        SSO Client Secret for Confidential Access","title":"SSO Client Secret","type":"string"},"SSO_SERVICE_URL":{"default":"https://secure-sso:8443/auth","description":"The
        URL for the internal SSO service, where secure-sso is the kubernetes service
        exposed by the SSO server.  This is used to create the application client(s)
        (see SSO_USERNAME).  This can also be the same as SSO_URL.","title":"URL for
        SSO (internal service)","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"},"SSO_URL":{"default":"","description":"The
        URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This
        is the URL through which the user will be redirected when a login or token
        is required by the application.","title":"URL for SSO","type":"string"},"SSO_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used to create the appliction
        client(s) within the specified SSO realm. This should match the SSO_SERVICE_USERNAME
        specified through one of the sso70-* templates.","title":"SSO Username","type":"string"}},"required":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","SSO_URL","SSO_REALM"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b19b6a6-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b1c33a0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b1c33a0-0d11-11e8-906a-d094660d31fb","uid":"9b70833e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690768","creationTimestamp":"2018-05-16T20:49:20Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b1c33a0-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","CONFIGURATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","EXTENSIONS_IMAGE","EXTENSIONS_IMAGE_NAMESPACE","EXTENSIONS_INSTALL_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONFIGURATION_NAME":{"default":"eap-app-config","description":"The
        name of the secret containing configuration properties for the datasources.","title":"Configuration
        Secret Name","type":"string"},"CONTEXT_DIR":{"default":"datavirt/hibernate-webapp","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"EXTENSIONS_IMAGE":{"default":"jboss-datavirt63-driver-openshift:1.1","description":"ImageStreamTag
        definition for the image containing the drivers and configuration, e.g. jboss-datavirt63-driver-openshift:1.1","title":"Drivers
        ImageStreamTag","type":"string"},"EXTENSIONS_IMAGE_NAMESPACE":{"default":"openshift","description":"Namespace
        within which the ImageStream definition for the image containing the drivers
        and configuration is located.","title":"Drivers ImageStream Namespace","type":"string"},"EXTENSIONS_INSTALL_DIR":{"default":"/extensions","description":"Full
        path to the directory within the extensions image where the extensions are
        located (e.g. install.sh, modules/, etc.)","title":"Drivers Image Install
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the GitHub webhook.","title":"Github Webhook
        Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"Admin
        password for HornetQ cluster.","title":"HornetQ Cluster Admin Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names to preconfigure within HornetQ subsystem.","title":"Queue Names","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names to preconfigure within HornetQ subsystem.","title":"Topic Names","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"Password
        used by JGroups to authenticate nodes in the cluster.","title":"JGroups Cluster
        Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the JGroups secret.","title":"JGroups Keystore
        Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"secret-key","description":"The
        name associated with the JGroups server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"password","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore to be used for securing JGroups
        communications.","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"master","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","CONFIGURATION_NAME","SOURCE_REPOSITORY_URL","EXTENSIONS_IMAGE","EXTENSIONS_IMAGE_NAMESPACE","EXTENSIONS_INSTALL_DIR","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b1c33a0-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b1dc092-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b1dc092-0d11-11e8-906a-d094660d31fb","uid":"9ec679bf-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690805","creationTimestamp":"2018-05-16T20:49:26Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b1dc092-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","VOLUME_CAPACITY","MQ_JNDI","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_SPLIT":{"default":"false","description":"Split
        the data directory for each node in a mesh.","title":"Split Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"helloworld-mdb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/ConnectionFactory","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/ConnectionFactory","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"HELLOWORLDMDBQueue","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"HELLOWORLDMDBTopic","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by A-MQ for persisting messages.","title":"A-MQ Volume
        Size","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b1dc092-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b1f2f0b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b1f2f0b-0d11-11e8-906a-d094660d31fb","uid":"8fdff110-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690624","creationTimestamp":"2018-05-16T20:49:01Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b1f2f0b-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_JNDI","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"helloworld-mdb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/ConnectionFactory","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/ConnectionFactory","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"HELLOWORLDMDBQueue","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"HELLOWORLDMDBTopic","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b1f2f0b-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2045dc-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b2045dc-0d11-11e8-906a-d094660d31fb","uid":"98ef0ce0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690738","creationTimestamp":"2018-05-16T20:49:16Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b2045dc-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_QUEUES","MQ_TOPICS","MQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"kitchensink","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"7.0.0.GA","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b2045dc-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b215bad-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b215bad-0d11-11e8-906a-d094660d31fb","uid":"8d5f0581-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690595","creationTimestamp":"2018-05-16T20:48:56Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b215bad-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","MQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"kitchensink","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"7.0.0.GA","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b215bad-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b22a820-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b22a820-0d11-11e8-906a-d094660d31fb","uid":"9cde457c-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690784","creationTimestamp":"2018-05-16T20:49:22Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b22a820-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b22a820-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2418a5-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b2418a5-0d11-11e8-906a-d094660d31fb","uid":"9f220c61-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690812","creationTimestamp":"2018-05-16T20:49:26Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b2418a5-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b2418a5-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2571a9-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b2571a9-0d11-11e8-906a-d094660d31fb","uid":"90b57563-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690633","creationTimestamp":"2018-05-16T20:49:02Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b2571a9-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b2571a9-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b27091e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b27091e-0d11-11e8-906a-d094660d31fb","uid":"9c82ba89-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690780","creationTimestamp":"2018-05-16T20:49:22Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b27091e-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b27091e-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2870cb-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b2870cb-0d11-11e8-906a-d094660d31fb","uid":"8c893dfa-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690584","creationTimestamp":"2018-05-16T20:48:55Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b2870cb-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b2870cb-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b29c289-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b29c289-0d11-11e8-906a-d094660d31fb","uid":"8b76aeba-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690572","creationTimestamp":"2018-05-16T20:48:53Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b29c289-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b29c289-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2b12c2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b2b12c2-0d11-11e8-906a-d094660d31fb","uid":"99c4b869-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690749","creationTimestamp":"2018-05-16T20:49:17Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b2b12c2-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_QUEUES","MQ_TOPICS","MQ_CLUSTER_PASSWORD","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","SSO_URL","SSO_SERVICE_URL","SSO_REALM","SSO_USERNAME","SSO_PASSWORD","SSO_PUBLIC_KEY","SSO_BEARER_ONLY","ARTIFACT_DIR","SSO_SAML_KEYSTORE_SECRET","SSO_SAML_KEYSTORE","SSO_SAML_CERTIFICATE_NAME","SSO_SAML_KEYSTORE_PASSWORD","SSO_SECRET","SSO_ENABLE_CORS","SSO_SAML_LOGOUT_PAGE","SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","MAVEN_MIRROR_URL","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"app-jee-jsp/target,service-jee-jaxrs/target,app-profile-jee-jsp/target,app-profile-saml-jee-jsp/target","description":"List
        of directories from which archives will be copied into the deployment folder.  If
        unspecified, all archives in /target will be copied.","title":"Artifact Directories","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Hostname
        for http service route (e.g. eap-app-myproject.example.com).  Required for
        SSO-enabled applications.  This is added to the white list of redirects in
        the SSO server.","title":"Custom http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Hostname
        for https service route (e.g. secure-eap-app-myproject.example.com).  Required
        for SSO-enabled applications.  This is added to the white list of redirects
        in the SSO server.","title":"Custom https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"7.0.x-ose","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/redhat-developer/redhat-sso-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"SSO_BEARER_ONLY":{"default":"","description":"SSO
        Client Access Type","title":"SSO Bearer Only?","type":"string"},"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION":{"default":"true","description":"If
        true SSL communication between EAP and the SSO Server will be insecure (i.e.
        certificate validation is disabled with curl)","title":"Disable SSL Validation
        in EAP-\u003eSSO communication","type":"string"},"SSO_ENABLE_CORS":{"default":"false","description":"Enable
        CORS for SSO applications","title":"Enable CORS for SSO?","type":"string"},"SSO_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Password","type":"string"},"SSO_PUBLIC_KEY":{"default":"","description":"SSO
        Public Key. Public key is recommended to be passed into the template to avoid
        man-in-the-middle security vulnerability","title":"SSO Public Key","type":"string"},"SSO_REALM":{"default":"","description":"The
        SSO realm to which the application client(s) should be associated (e.g. demo).","title":"SSO
        Realm","type":"string"},"SSO_SAML_CERTIFICATE_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"SSO SAML Certificate
        Name","type":"string"},"SSO_SAML_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"SSO SAML Keystore","type":"string"},"SSO_SAML_KEYSTORE_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"SSO SAML Keystore Password","type":"string"},"SSO_SAML_KEYSTORE_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"SSO SAML Keystore
        Secret","type":"string"},"SSO_SAML_LOGOUT_PAGE":{"default":"/","description":"SSO
        logout page for SAML applications","title":"SSO SAML Logout Page","type":"string"},"SSO_SECRET":{"default":"","description":"The
        SSO Client Secret for Confidential Access","title":"SSO Client Secret","type":"string"},"SSO_SERVICE_URL":{"default":"https://secure-sso:8443/auth","description":"The
        URL for the internal SSO service, where secure-sso (the default) is the kubernetes
        service exposed by the SSO server.  This is used to create the application
        client(s) (see SSO_USERNAME).  This can also be the same as SSO_URL.","title":"URL
        for SSO (internal service)","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"},"SSO_URL":{"default":"","description":"The
        URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This
        is the URL through which the user will be redirected when a login or token
        is required by the application.","title":"URL for SSO","type":"string"},"SSO_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used to create the appliction
        client(s) within the specified SSO realm. This should match the SSO_SERVICE_USERNAME
        specified through one of the sso70-* templates.","title":"SSO Username","type":"string"}},"required":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","SSO_URL","SSO_REALM"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b2b12c2-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2c47f8-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b2c47f8-0d11-11e8-906a-d094660d31fb","uid":"8cc644d5-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690586","creationTimestamp":"2018-05-16T20:48:55Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b2c47f8-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","CONFIGURATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","EXTENSIONS_IMAGE","EXTENSIONS_IMAGE_NAMESPACE","EXTENSIONS_INSTALL_DIR","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","MQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONFIGURATION_NAME":{"default":"eap-app-config","description":"The
        name of the secret containing configuration properties for the datasources.","title":"Configuration
        Secret Name","type":"string"},"CONTEXT_DIR":{"default":"datavirt/hibernate-webapp","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"EXTENSIONS_IMAGE":{"default":"jboss-datavirt63-driver-openshift:1.1","description":"ImageStreamTag
        definition for the image containing the drivers and configuration, e.g. jboss-datavirt63-driver-openshift:1.1","title":"Drivers
        ImageStreamTag","type":"string"},"EXTENSIONS_IMAGE_NAMESPACE":{"default":"openshift","description":"Namespace
        within which the ImageStream definition for the image containing the drivers
        and configuration is located.","title":"Drivers ImageStream Namespace","type":"string"},"EXTENSIONS_INSTALL_DIR":{"default":"/extensions","description":"Full
        path to the directory within the extensions image where the extensions are
        located (e.g. install.sh, modules/, etc.)","title":"Drivers Image Install
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the GitHub webhook.","title":"Github Webhook
        Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"Password
        used by JGroups to authenticate nodes in the cluster.","title":"JGroups Cluster
        Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the JGroups secret.","title":"JGroups Keystore
        Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"secret-key","description":"The
        name associated with the JGroups server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"password","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore to be used for securing JGroups
        communications.","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"Admin
        password for Messaging cluster.","title":"Messaging Cluster Admin Password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names to preconfigure within Messaging subsystem.","title":"Queue Names","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names to preconfigure within Messaging subsystem.","title":"Topic Names","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"master","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","CONFIGURATION_NAME","SOURCE_REPOSITORY_URL","EXTENSIONS_IMAGE","EXTENSIONS_IMAGE_NAMESPACE","EXTENSIONS_INSTALL_DIR","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b2c47f8-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2d95bd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b2d95bd-0d11-11e8-906a-d094660d31fb","uid":"9598a70a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690700","creationTimestamp":"2018-05-16T20:49:10Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b2d95bd-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","VOLUME_CAPACITY","MQ_JNDI","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_SPLIT":{"default":"false","description":"Split
        the data directory for each node in a mesh.","title":"Split Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"helloworld-mdb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/ConnectionFactory","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/ConnectionFactory","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"HELLOWORLDMDBQueue","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"HELLOWORLDMDBTopic","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by A-MQ for persisting messages.","title":"A-MQ Volume
        Size","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b2d95bd-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2ee638-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b2ee638-0d11-11e8-906a-d094660d31fb","uid":"8fc1386f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690623","creationTimestamp":"2018-05-16T20:49:00Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b2ee638-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_JNDI","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","MQ_SERIALIZABLE_PACKAGES","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"helloworld-mdb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/ConnectionFactory","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/ConnectionFactory","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"HELLOWORLDMDBQueue","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_SERIALIZABLE_PACKAGES":{"default":"","description":"List
        of packages that are allowed to be serialized for use in ObjectMessage, separated
        by commas. If your app doesn''t use ObjectMessages, leave this blank. This
        is a security enforcement. For the rationale, see http://activemq.apache.org/objectmessage.html","title":"A-MQ
        Serializable Packages","type":"string"},"MQ_TOPICS":{"default":"HELLOWORLDMDBTopic","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b2ee638-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b2fec21-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b2fec21-0d11-11e8-906a-d094660d31fb","uid":"9c091d2f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690776","creationTimestamp":"2018-05-16T20:49:21Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b2fec21-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_QUEUES","MQ_TOPICS","MQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"kitchensink","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"7.0.0.GA","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b2fec21-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b30f33d-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b30f33d-0d11-11e8-906a-d094660d31fb","uid":"9110f8f7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690637","creationTimestamp":"2018-05-16T20:49:03Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b30f33d-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","MQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"kitchensink","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"7.0.0.GA","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b30f33d-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b323cdd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b323cdd-0d11-11e8-906a-d094660d31fb","uid":"97faff06-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690727","creationTimestamp":"2018-05-16T20:49:14Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b323cdd-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b323cdd-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b33c9c0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b33c9c0-0d11-11e8-906a-d094660d31fb","uid":"8d7d7c74-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690596","creationTimestamp":"2018-05-16T20:48:57Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b33c9c0-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b33c9c0-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3524cd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b3524cd-0d11-11e8-906a-d094660d31fb","uid":"9a20554a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690752","creationTimestamp":"2018-05-16T20:49:18Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b3524cd-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b3524cd-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b367189-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b367189-0d11-11e8-906a-d094660d31fb","uid":"8a6402e3-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690560","creationTimestamp":"2018-05-16T20:48:51Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b367189-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b367189-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b37c2b4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b37c2b4-0d11-11e8-906a-d094660d31fb","uid":"9ab8da35-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690760","creationTimestamp":"2018-05-16T20:49:19Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b37c2b4-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b37c2b4-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3920fe-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b3920fe-0d11-11e8-906a-d094660d31fb","uid":"9bad0f83-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690771","creationTimestamp":"2018-05-16T20:49:20Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b3920fe-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","MQ_CLUSTER_PASSWORD","DB_USERNAME","DB_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/TodoListDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b3920fe-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3a6f10-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b3a6f10-0d11-11e8-906a-d094660d31fb","uid":"989398ae-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690734","creationTimestamp":"2018-05-16T20:49:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b3a6f10-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_QUEUES","MQ_TOPICS","MQ_CLUSTER_PASSWORD","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","SSO_URL","SSO_SERVICE_URL","SSO_REALM","SSO_USERNAME","SSO_PASSWORD","SSO_PUBLIC_KEY","SSO_BEARER_ONLY","ARTIFACT_DIR","SSO_SAML_KEYSTORE_SECRET","SSO_SAML_KEYSTORE","SSO_SAML_CERTIFICATE_NAME","SSO_SAML_KEYSTORE_PASSWORD","SSO_SECRET","SSO_ENABLE_CORS","SSO_SAML_LOGOUT_PAGE","SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","MAVEN_MIRROR_URL","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"app-jee-jsp/target,service-jee-jaxrs/target,app-profile-jee-jsp/target,app-profile-saml-jee-jsp/target","description":"List
        of directories from which archives will be copied into the deployment folder.  If
        unspecified, all archives in /target will be copied.","title":"Artifact Directories","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Hostname
        for http service route (e.g. eap-app-myproject.example.com).  Required for
        SSO-enabled applications.  This is added to the white list of redirects in
        the SSO server.","title":"Custom http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Hostname
        for https service route (e.g. secure-eap-app-myproject.example.com).  Required
        for SSO-enabled applications.  This is added to the white list of redirects
        in the SSO server.","title":"Custom https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"7.0.x-ose","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/redhat-developer/redhat-sso-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"SSO_BEARER_ONLY":{"default":"","description":"SSO
        Client Access Type","title":"SSO Bearer Only?","type":"string"},"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION":{"default":"true","description":"If
        true SSL communication between EAP and the SSO Server will be insecure (i.e.
        certificate validation is disabled with curl)","title":"Disable SSL Validation
        in EAP-\u003eSSO communication","type":"string"},"SSO_ENABLE_CORS":{"default":"false","description":"Enable
        CORS for SSO applications","title":"Enable CORS for SSO?","type":"string"},"SSO_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Password","type":"string"},"SSO_PUBLIC_KEY":{"default":"","description":"SSO
        Public Key. Public key is recommended to be passed into the template to avoid
        man-in-the-middle security vulnerability","title":"SSO Public Key","type":"string"},"SSO_REALM":{"default":"","description":"The
        SSO realm to which the application client(s) should be associated (e.g. demo).","title":"SSO
        Realm","type":"string"},"SSO_SAML_CERTIFICATE_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"SSO SAML Certificate
        Name","type":"string"},"SSO_SAML_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"SSO SAML Keystore","type":"string"},"SSO_SAML_KEYSTORE_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"SSO SAML Keystore Password","type":"string"},"SSO_SAML_KEYSTORE_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the keystore file","title":"SSO SAML Keystore
        Secret","type":"string"},"SSO_SAML_LOGOUT_PAGE":{"default":"/","description":"SSO
        logout page for SAML applications","title":"SSO SAML Logout Page","type":"string"},"SSO_SECRET":{"default":"","description":"The
        SSO Client Secret for Confidential Access","title":"SSO Client Secret","type":"string"},"SSO_SERVICE_URL":{"default":"https://secure-sso:8443/auth","description":"The
        URL for the internal SSO service, where secure-sso (the default) is the kubernetes
        service exposed by the SSO server.  This is used to create the application
        client(s) (see SSO_USERNAME).  This can also be the same as SSO_URL.","title":"URL
        for SSO (internal service)","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"eap7-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"},"SSO_URL":{"default":"","description":"The
        URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This
        is the URL through which the user will be redirected when a login or token
        is required by the application.","title":"URL for SSO","type":"string"},"SSO_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used to create the appliction
        client(s) within the specified SSO realm. This should match the SSO_SERVICE_USERNAME
        specified through one of the sso70-* templates.","title":"SSO Username","type":"string"}},"required":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","SSO_URL","SSO_REALM"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b3a6f10-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3b9a4f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b3b9a4f-0d11-11e8-906a-d094660d31fb","uid":"96c9d95d-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690714","creationTimestamp":"2018-05-16T20:49:12Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b3b9a4f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","CONFIGURATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","EXTENSIONS_IMAGE","EXTENSIONS_IMAGE_NAMESPACE","EXTENSIONS_INSTALL_DIR","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","MQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONFIGURATION_NAME":{"default":"eap-app-config","description":"The
        name of the secret containing configuration properties for the datasources.","title":"Configuration
        Secret Name","type":"string"},"CONTEXT_DIR":{"default":"datavirt/hibernate-webapp","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"EXTENSIONS_IMAGE":{"default":"jboss-datavirt63-driver-openshift:1.1","description":"ImageStreamTag
        definition for the image containing the drivers and configuration, e.g. jboss-datavirt63-driver-openshift:1.1","title":"Drivers
        ImageStreamTag","type":"string"},"EXTENSIONS_IMAGE_NAMESPACE":{"default":"openshift","description":"Namespace
        within which the ImageStream definition for the image containing the drivers
        and configuration is located.","title":"Drivers ImageStream Namespace","type":"string"},"EXTENSIONS_INSTALL_DIR":{"default":"/extensions","description":"Full
        path to the directory within the extensions image where the extensions are
        located (e.g. install.sh, modules/, etc.)","title":"Drivers Image Install
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the GitHub webhook.","title":"Github Webhook
        Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"Password
        used by JGroups to authenticate nodes in the cluster.","title":"JGroups Cluster
        Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the JGroups secret.","title":"JGroups Keystore
        Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"secret-key","description":"The
        name associated with the JGroups server certificate","title":"JGroups Certificate
        Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"password","description":"The
        password for the keystore and certificate","title":"JGroups Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"eap-app-secret","description":"The
        name of the secret containing the keystore to be used for securing JGroups
        communications.","title":"JGroups Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"Admin
        password for Messaging cluster.","title":"Messaging Cluster Admin Password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names to preconfigure within Messaging subsystem.","title":"Queue Names","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names to preconfigure within Messaging subsystem.","title":"Topic Names","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"master","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","CONFIGURATION_NAME","SOURCE_REPOSITORY_URL","EXTENSIONS_IMAGE","EXTENSIONS_IMAGE_NAMESPACE","EXTENSIONS_INSTALL_DIR","HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b3b9a4f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3c99d8-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b3c99d8-0d11-11e8-906a-d094660d31fb","uid":"9e6aeb00-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690802","creationTimestamp":"2018-05-16T20:49:25Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b3c99d8-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"tomcat-websocket-chat","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b3c99d8-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3d897e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b3d897e-0d11-11e8-906a-d094660d31fb","uid":"93b04a37-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690678","creationTimestamp":"2018-05-16T20:49:07Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b3d897e-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"tomcat-websocket-chat","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b3d897e-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3eb4d0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b3eb4d0-0d11-11e8-906a-d094660d31fb","uid":"953d0a2a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690696","creationTimestamp":"2018-05-16T20:49:10Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b3eb4d0-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b3eb4d0-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b3fe350-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b3fe350-0d11-11e8-906a-d094660d31fb","uid":"93ced895-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690679","creationTimestamp":"2018-05-16T20:49:07Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b3fe350-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b3fe350-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b415503-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b415503-0d11-11e8-906a-d094660d31fb","uid":"9317c195-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690672","creationTimestamp":"2018-05-16T20:49:06Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b415503-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/mysqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b415503-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b427d20-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b427d20-0d11-11e8-906a-d094660d31fb","uid":"942a767a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690682","creationTimestamp":"2018-05-16T20:49:08Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b427d20-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/mysqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b427d20-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b43abfc-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b43abfc-0d11-11e8-906a-d094660d31fb","uid":"9e2df0df-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690799","creationTimestamp":"2018-05-16T20:49:25Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b43abfc-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/postgresqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b43abfc-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b44d2d8-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b44d2d8-0d11-11e8-906a-d094660d31fb","uid":"9a9a5211-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690759","creationTimestamp":"2018-05-16T20:49:19Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b44d2d8-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/postgresqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b44d2d8-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b45c444-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b45c444-0d11-11e8-906a-d094660d31fb","uid":"9ad76351-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690762","creationTimestamp":"2018-05-16T20:49:19Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b45c444-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"tomcat-websocket-chat","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b45c444-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b46be0f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b46be0f-0d11-11e8-906a-d094660d31fb","uid":"92bc4114-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690660","creationTimestamp":"2018-05-16T20:49:05Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b46be0f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"tomcat-websocket-chat","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b46be0f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b47db88-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b47db88-0d11-11e8-906a-d094660d31fb","uid":"8e349438-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690604","creationTimestamp":"2018-05-16T20:48:58Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b47db88-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b47db88-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b49061d-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b49061d-0d11-11e8-906a-d094660d31fb","uid":"89cba295-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690553","creationTimestamp":"2018-05-16T20:48:50Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b49061d-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b49061d-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b4a4709-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b4a4709-0d11-11e8-906a-d094660d31fb","uid":"96e85bb0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690715","creationTimestamp":"2018-05-16T20:49:12Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b4a4709-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/mysqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b4a4709-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b4b78fd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b4b78fd-0d11-11e8-906a-d094660d31fb","uid":"93734ba8-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690675","creationTimestamp":"2018-05-16T20:49:07Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b4b78fd-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/mysqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b4b78fd-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b4cab25-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b4cab25-0d11-11e8-906a-d094660d31fb","uid":"97625685-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690720","creationTimestamp":"2018-05-16T20:49:13Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b4cab25-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/postgresqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b4cab25-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b4dd21a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b4dd21a-0d11-11e8-906a-d094660d31fb","uid":"98380ec9-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690729","creationTimestamp":"2018-05-16T20:49:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b4dd21a-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/postgresqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b4dd21a-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b4f1799-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b4f1799-0d11-11e8-906a-d094660d31fb","uid":"9780d84d-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690721","creationTimestamp":"2018-05-16T20:49:13Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b4f1799-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"tomcat-websocket-chat","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b4f1799-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b50193c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b50193c-0d11-11e8-906a-d094660d31fb","uid":"9c64209a-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690779","creationTimestamp":"2018-05-16T20:49:22Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b50193c-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"tomcat-websocket-chat","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b50193c-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b514d1c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b514d1c-0d11-11e8-906a-d094660d31fb","uid":"9b8e7a33-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690770","creationTimestamp":"2018-05-16T20:49:20Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b514d1c-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b514d1c-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b528072-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b528072-0d11-11e8-906a-d094660d31fb","uid":"93364380-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690673","creationTimestamp":"2018-05-16T20:49:06Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b528072-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b528072-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b53b99a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b53b99a-0d11-11e8-906a-d094660d31fb","uid":"9987befa-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690745","creationTimestamp":"2018-05-16T20:49:17Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b53b99a-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/mysqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b53b99a-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b54f013-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b54f013-0d11-11e8-906a-d094660d31fb","uid":"99a64e1e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690747","creationTimestamp":"2018-05-16T20:49:17Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b54f013-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/mysqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b54f013-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5628e0-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b5628e0-0d11-11e8-906a-d094660d31fb","uid":"9059e474-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690629","creationTimestamp":"2018-05-16T20:49:01Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b5628e0-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/postgresqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b5628e0-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5761aa-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b5761aa-0d11-11e8-906a-d094660d31fb","uid":"8fa2b1f6-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690622","creationTimestamp":"2018-05-16T20:49:00Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b5761aa-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/postgresqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b5761aa-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b585a86-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b585a86-0d11-11e8-906a-d094660d31fb","uid":"955b9afe-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690697","creationTimestamp":"2018-05-16T20:49:10Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b585a86-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"tomcat-websocket-chat","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b585a86-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b594bc2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b594bc2-0d11-11e8-906a-d094660d31fb","uid":"9af5ec6b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690763","creationTimestamp":"2018-05-16T20:49:19Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b594bc2-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"tomcat-websocket-chat","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b594bc2-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5a68bf-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b5a68bf-0d11-11e8-906a-d094660d31fb","uid":"8c4c5393-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690581","creationTimestamp":"2018-05-16T20:48:55Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b5a68bf-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b5a68bf-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5b8f2f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b5b8f2f-0d11-11e8-906a-d094660d31fb","uid":"8aa1094e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690562","creationTimestamp":"2018-05-16T20:48:52Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b5b8f2f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MONGODB_NOPREALLOC","MONGODB_SMALLFILES","MONGODB_QUIET","DB_USERNAME","DB_PASSWORD","DB_ADMIN_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MONGODB_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-mongodb","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_ADMIN_PASSWORD":{"default":"","description":"Database
        admin password","title":"Database admin password","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mongodb","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MONGODB_IMAGE_STREAM_TAG":{"default":"3.2","description":"The
        tag to use for the \"mongodb\" image stream.  Typically, this aligns with
        the major.minor version of MongoDB.","title":"MongoDB Image Stream Tag","type":"string"},"MONGODB_NOPREALLOC":{"default":"","description":"Disable
        data file preallocation.","title":"MongoDB No Preallocation","type":"string"},"MONGODB_QUIET":{"default":"","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output.","title":"MongoDB
        Quiet","type":"string"},"MONGODB_SMALLFILES":{"default":"","description":"Set
        MongoDB to use a smaller default data file size.","title":"MongoDB Small Files","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MONGODB_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b5b8f2f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5d0b17-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b5d0b17-0d11-11e8-906a-d094660d31fb","uid":"8f65d3c2-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690618","creationTimestamp":"2018-05-16T20:49:00Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b5d0b17-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/mysqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b5d0b17-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5e40b2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b5e40b2-0d11-11e8-906a-d094660d31fb","uid":"9b517720-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690766","creationTimestamp":"2018-05-16T20:49:20Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b5e40b2-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/mysqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b5e40b2-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b5f72b4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b5f72b4-0d11-11e8-906a-d094660d31fb","uid":"8b9534ea-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690573","creationTimestamp":"2018-05-16T20:48:53Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b5f72b4-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/postgresqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b5f72b4-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b609b10-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b609b10-0d11-11e8-906a-d094660d31fb","uid":"8e902b71-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690609","creationTimestamp":"2018-05-16T20:48:58Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b609b10-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","JWS_HTTPS_SECRET","JWS_HTTPS_CERTIFICATE","JWS_HTTPS_CERTIFICATE_KEY","JWS_HTTPS_CERTIFICATE_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","JWS_ADMIN_USERNAME","JWS_ADMIN_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"jws-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"todolist/todolist-jdbc","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"jboss/datasources/defaultDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. jboss/datasources/postgresqlDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JWS_ADMIN_PASSWORD":{"default":"","description":"JWS
        Admin Password","title":"JWS Admin Password","type":"string"},"JWS_ADMIN_USERNAME":{"default":"","description":"JWS
        Admin User","title":"JWS Admin Username","type":"string"},"JWS_HTTPS_CERTIFICATE":{"default":"server.crt","description":"The
        name of the certificate file within the secret","title":"Certificate Name","type":"string"},"JWS_HTTPS_CERTIFICATE_KEY":{"default":"server.key","description":"The
        name of the certificate key file within the secret","title":"Certificate Key
        Name","type":"string"},"JWS_HTTPS_CERTIFICATE_PASSWORD":{"default":"","description":"The
        certificate password","title":"Certificate Password","type":"string"},"JWS_HTTPS_SECRET":{"default":"jws-app-secret","description":"The
        name of the secret containing the certificate files","title":"Secret Name","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.2","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","JWS_HTTPS_SECRET","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b609b10-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b619a6b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b619a6b-0d11-11e8-906a-d094660d31fb","uid":"8f473ed9-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690617","creationTimestamp":"2018-05-16T20:49:00Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b619a6b-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","SERVICE_NAME","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","ACTIVEMQ_SERVICE_NAME","ACTIVEMQ_USERNAME","ACTIVEMQ_PASSWORD","CPU_REQUEST","MEMORY_REQUEST","CPU_LIMIT","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ACTIVEMQ_PASSWORD":{"default":"","description":"The
        password used to authenticate with the ActiveMQ broker. Leave it empty if
        authentication is disabled.","title":"ActiveMQ Broker Password","type":"string"},"ACTIVEMQ_SERVICE_NAME":{"default":"broker-amq-tcp","description":"Set
        this to the name of the TCP service of the ActiveMQ broker. You may need to
        create a broker first.","title":"ActiveMQ Broker Service","type":"string"},"ACTIVEMQ_USERNAME":{"default":"","description":"The
        username used to authenticate with the ActiveMQ broker. Leave it empty if
        authentication is disabled.","title":"ActiveMQ Broker Username","type":"string"},"APP_NAME":{"default":"s2i-karaf2-camel-amq","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000022","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"karaf2-camel-amq-1.0.0.redhat-000022","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/karaf2-camel-amq.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"install -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"},"MEMORY_LIMIT":{"default":"2G","description":"The
        amount of memory the container is limited to use.","title":"Memory limit","type":"string"},"MEMORY_REQUEST":{"default":"1.5G","description":"The
        amount of memory required for the container to run.","title":"Memory request","type":"string"},"SERVICE_NAME":{"default":"s2i-karaf2-camel-amq","description":"Exposed
        Service name.","title":"Service Name","type":"string"}},"required":["APP_NAME","GIT_REPO","IMAGE_STREAM_NAMESPACE","ACTIVEMQ_SERVICE_NAME","CPU_REQUEST","MEMORY_REQUEST","CPU_LIMIT","MEMORY_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b619a6b-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b62801e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b62801e-0d11-11e8-906a-d094660d31fb","uid":"8abf97e2-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690564","creationTimestamp":"2018-05-16T20:48:52Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b62801e-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","SERVICE_NAME","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","CPU_REQUEST","MEMORY_REQUEST","CPU_LIMIT","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-karaf2-camel-log","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000022","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"karaf2-camel-log-1.0.0.redhat-000022","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/karaf2-camel-log.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"install -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"},"MEMORY_LIMIT":{"default":"2G","description":"The
        amount of memory the container is limited to use.","title":"Memory limit","type":"string"},"MEMORY_REQUEST":{"default":"1.5G","description":"The
        amount of memory required for the container to run.","title":"Memory request","type":"string"},"SERVICE_NAME":{"default":"s2i-karaf2-camel-log","description":"Exposed
        Service name.","title":"Service Name","type":"string"}},"required":["APP_NAME","GIT_REPO","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","MEMORY_REQUEST","CPU_LIMIT","MEMORY_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b62801e-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b636395-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b636395-0d11-11e8-906a-d094660d31fb","uid":"94a48d69-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690689","creationTimestamp":"2018-05-16T20:49:09Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b636395-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","SERVICE_NAME","MYSQL_SERVICE_NAME","MYSQL_SERVICE_DATABASE","MYSQL_SERVICE_USERNAME","MYSQL_SERVICE_PASSWORD","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","MEMORY_REQUEST","CPU_LIMIT","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-karaf2-camel-rest-sql","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000022","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"karaf2-camel-rest-sql-1.0.0.redhat-000022","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/karaf2-camel-rest-sql.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"install -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"},"MEMORY_LIMIT":{"default":"2G","description":"The
        amount of memory the container is limited to use.","title":"Memory limit","type":"string"},"MEMORY_REQUEST":{"default":"1.5G","description":"The
        amount of memory required for the container to run.","title":"Memory request","type":"string"},"MYSQL_SERVICE_DATABASE":{"default":"sampledb","description":"The
        database hosted by the MySQL server to be used by the application.","title":"MySQL
        Server Database","type":"string"},"MYSQL_SERVICE_NAME":{"default":"mysql","description":"Set
        this to the name of the TCP service of the MySQL server. You may need to create
        a server first.","title":"MySQL Server Service","type":"string"},"MYSQL_SERVICE_PASSWORD":{"default":"","description":"The
        password used to authenticate with the MySQL server. Leave it empty if authentication
        is disabled.","title":"MySQL Server Password","type":"string"},"MYSQL_SERVICE_USERNAME":{"default":"","description":"The
        username used to authenticate with the MySQL server. Leave it empty if authentication
        is disabled.","title":"MySQL Server Username","type":"string"},"SERVICE_NAME":{"default":"s2i-karaf2-camel-rest","description":"Exposed
        Service name.","title":"Service Name","type":"string"}},"required":["APP_NAME","GIT_REPO","MYSQL_SERVICE_NAME","MYSQL_SERVICE_DATABASE","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","MEMORY_REQUEST","CPU_LIMIT","MEMORY_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b636395-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b644c87-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b644c87-0d11-11e8-906a-d094660d31fb","uid":"9ca1352c-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690782","creationTimestamp":"2018-05-16T20:49:22Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b644c87-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","SERVICE_NAME","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","MEMORY_REQUEST","CPU_LIMIT","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-karaf2-cxf-rest","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000022","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"karaf2-cxf-rest-1.0.0.redhat-000022","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/karaf2-cxf-rest.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"install -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"},"MEMORY_LIMIT":{"default":"2G","description":"The
        amount of memory the container is limited to use.","title":"Memory limit","type":"string"},"MEMORY_REQUEST":{"default":"1.5G","description":"The
        amount of memory required for the container to run.","title":"Memory request","type":"string"},"SERVICE_NAME":{"default":"s2i-karaf2-cxf-rest","description":"Exposed
        Service name.","title":"Service Name","type":"string"}},"required":["APP_NAME","GIT_REPO","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","MEMORY_REQUEST","CPU_LIMIT","MEMORY_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b644c87-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b652b20-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b652b20-0d11-11e8-906a-d094660d31fb","uid":"8ecd1cb1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690612","creationTimestamp":"2018-05-16T20:48:59Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b652b20-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"openjdk-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CONTEXT_DIR":{"default":"undertow-servlet","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"master","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b652b20-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b668a4a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b668a4a-0d11-11e8-906a-d094660d31fb","uid":"95000885-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690694","creationTimestamp":"2018-05-16T20:49:09Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b668a4a-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_REQUEST","KIE_SERVER_JMS_QUEUES_RESPONSE","KIE_SERVER_EXECUTOR_JMS_QUEUE","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","MQ_JNDI","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"kube","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_SPLIT":{"default":"false","description":"Split
        the data directory for each node in a mesh.","title":"Split Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_EXECUTOR_JMS_QUEUE":{"default":"queue/KIE.SERVER.EXECUTOR","description":"JNDI
        name of executor queue for JMS.","title":"KIE Server Executor JMS Queue","type":"string"},"KIE_SERVER_JMS_QUEUES_REQUEST":{"default":"queue/KIE.SERVER.REQUEST","description":"JNDI
        name of request queue for JMS.","title":"KIE Server JMS Queues Request","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.MySQL5Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b668a4a-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b680368-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b680368-0d11-11e8-906a-d094660d31fb","uid":"98d08eb0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690736","creationTimestamp":"2018-05-16T20:49:16Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b680368-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_REQUEST","KIE_SERVER_JMS_QUEUES_RESPONSE","KIE_SERVER_EXECUTOR_JMS_QUEUE","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","MQ_JNDI","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"kube","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_EXECUTOR_JMS_QUEUE":{"default":"queue/KIE.SERVER.EXECUTOR","description":"JNDI
        name of executor queue for JMS.","title":"KIE Server Executor JMS Queue","type":"string"},"KIE_SERVER_JMS_QUEUES_REQUEST":{"default":"queue/KIE.SERVER.REQUEST","description":"JNDI
        name of request queue for JMS.","title":"KIE Server JMS Queues Request","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.MySQL5Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b680368-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b69897f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b69897f-0d11-11e8-906a-d094660d31fb","uid":"90d3f5be-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690635","creationTimestamp":"2018-05-16T20:49:02Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b69897f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_REQUEST","KIE_SERVER_JMS_QUEUES_RESPONSE","KIE_SERVER_EXECUTOR_JMS_QUEUE","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","MQ_JNDI","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"kube","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_SPLIT":{"default":"false","description":"Split
        the data directory for each node in a mesh.","title":"Split Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_EXECUTOR_JMS_QUEUE":{"default":"queue/KIE.SERVER.EXECUTOR","description":"JNDI
        name of executor queue for JMS.","title":"KIE Server Executor JMS Queue","type":"string"},"KIE_SERVER_JMS_QUEUES_REQUEST":{"default":"queue/KIE.SERVER.REQUEST","description":"JNDI
        name of request queue for JMS.","title":"KIE Server JMS Queues Request","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.PostgreSQL82Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b69897f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b6b4426-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b6b4426-0d11-11e8-906a-d094660d31fb","uid":"91c82339-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690645","creationTimestamp":"2018-05-16T20:49:04Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b6b4426-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_REQUEST","KIE_SERVER_JMS_QUEUES_RESPONSE","KIE_SERVER_EXECUTOR_JMS_QUEUE","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","MQ_JNDI","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"kube","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_EXECUTOR_JMS_QUEUE":{"default":"queue/KIE.SERVER.EXECUTOR","description":"JNDI
        name of executor queue for JMS.","title":"KIE Server Executor JMS Queue","type":"string"},"KIE_SERVER_JMS_QUEUES_REQUEST":{"default":"queue/KIE.SERVER.REQUEST","description":"JNDI
        name of request queue for JMS.","title":"KIE Server JMS Queues Request","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.PostgreSQL82Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b6b4426-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b6c548d-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b6c548d-0d11-11e8-906a-d094660d31fb","uid":"89e9f02b-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690554","creationTimestamp":"2018-05-16T20:48:51Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b6c548d-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.H2Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b6c548d-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b6d7849-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b6d7849-0d11-11e8-906a-d094660d31fb","uid":"914df658-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690641","creationTimestamp":"2018-05-16T20:49:03Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b6d7849-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.MySQL5Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b6d7849-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b6ebde1-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b6ebde1-0d11-11e8-906a-d094660d31fb","uid":"93ed6c70-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690680","creationTimestamp":"2018-05-16T20:49:07Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b6ebde1-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.MySQL5Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b6ebde1-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b701477-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b701477-0d11-11e8-906a-d094660d31fb","uid":"8a26fe27-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690558","creationTimestamp":"2018-05-16T20:48:51Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b701477-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.PostgreSQL82Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b701477-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b715303-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b715303-0d11-11e8-906a-d094660d31fb","uid":"9d9547b6-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690792","creationTimestamp":"2018-05-16T20:49:24Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b715303-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.PostgreSQL82Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b715303-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b72dad7-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b72dad7-0d11-11e8-906a-d094660d31fb","uid":"964fc8f2-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690708","creationTimestamp":"2018-05-16T20:49:11Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b72dad7-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_REQUEST","KIE_SERVER_JMS_QUEUES_RESPONSE","KIE_SERVER_EXECUTOR_JMS_QUEUE","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","MQ_JNDI","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_SPLIT":{"default":"false","description":"Split
        the data directory for each node in a mesh.","title":"Split Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_EXECUTOR_JMS_QUEUE":{"default":"queue/KIE.SERVER.EXECUTOR","description":"JNDI
        name of executor queue for JMS.","title":"KIE Server Executor JMS Queue","type":"string"},"KIE_SERVER_JMS_QUEUES_REQUEST":{"default":"queue/KIE.SERVER.REQUEST","description":"JNDI
        name of request queue for JMS.","title":"KIE Server JMS Queues Request","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.MySQL5Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b72dad7-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b745fc1-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b745fc1-0d11-11e8-906a-d094660d31fb","uid":"8d9bfdf1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690598","creationTimestamp":"2018-05-16T20:48:57Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b745fc1-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_REQUEST","KIE_SERVER_JMS_QUEUES_RESPONSE","KIE_SERVER_EXECUTOR_JMS_QUEUE","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","MQ_JNDI","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_EXECUTOR_JMS_QUEUE":{"default":"queue/KIE.SERVER.EXECUTOR","description":"JNDI
        name of executor queue for JMS.","title":"KIE Server Executor JMS Queue","type":"string"},"KIE_SERVER_JMS_QUEUES_REQUEST":{"default":"queue/KIE.SERVER.REQUEST","description":"JNDI
        name of request queue for JMS.","title":"KIE Server JMS Queues Request","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.MySQL5Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b745fc1-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b75d938-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b75d938-0d11-11e8-906a-d094660d31fb","uid":"940be6b3-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690681","creationTimestamp":"2018-05-16T20:49:08Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b75d938-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_REQUEST","KIE_SERVER_JMS_QUEUES_RESPONSE","KIE_SERVER_EXECUTOR_JMS_QUEUE","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","MQ_JNDI","AMQ_SPLIT","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_SPLIT":{"default":"false","description":"Split
        the data directory for each node in a mesh.","title":"Split Data?","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_EXECUTOR_JMS_QUEUE":{"default":"queue/KIE.SERVER.EXECUTOR","description":"JNDI
        name of executor queue for JMS.","title":"KIE Server Executor JMS Queue","type":"string"},"KIE_SERVER_JMS_QUEUES_REQUEST":{"default":"queue/KIE.SERVER.REQUEST","description":"JNDI
        name of request queue for JMS.","title":"KIE Server JMS Queues Request","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.PostgreSQL82Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b75d938-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b778cd6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b778cd6-0d11-11e8-906a-d094660d31fb","uid":"8f8438b0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690621","creationTimestamp":"2018-05-16T20:49:00Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b778cd6-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_JMS_QUEUES_REQUEST","KIE_SERVER_JMS_QUEUES_RESPONSE","KIE_SERVER_EXECUTOR_JMS_QUEUE","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","MQ_JNDI","MQ_PROTOCOL","MQ_QUEUES","MQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","MQ_USERNAME","MQ_PASSWORD","AMQ_MESH_DISCOVERY_TYPE","AMQ_STORAGE_USAGE_LIMIT","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"AMQ_MESH_DISCOVERY_TYPE":{"default":"dns","description":"The
        discovery agent type to use for discovering mesh endpoints.  ''dns'' will
        use OpenShift''s DNS service to resolve endpoints.  ''kube'' will use Kubernetes
        REST API to resolve service endpoints.  If using ''kube'' the service account
        for the pod must have the ''view'' role, which can be added via ''oc policy
        add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","title":"A-MQ Mesh
        Discovery Type","type":"string"},"AMQ_STORAGE_USAGE_LIMIT":{"default":"100
        gb","description":"The A-MQ storage usage limit","title":"A-MQ Storage Limit","type":"string"},"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_EXECUTOR_JMS_QUEUE":{"default":"queue/KIE.SERVER.EXECUTOR","description":"JNDI
        name of executor queue for JMS.","title":"KIE Server Executor JMS Queue","type":"string"},"KIE_SERVER_JMS_QUEUES_REQUEST":{"default":"queue/KIE.SERVER.REQUEST","description":"JNDI
        name of request queue for JMS.","title":"KIE Server JMS Queues Request","type":"string"},"KIE_SERVER_JMS_QUEUES_RESPONSE":{"default":"queue/KIE.SERVER.RESPONSE","description":"JNDI
        name of response queue for JMS.","title":"KIE Server JMS Queues Response","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.PostgreSQL82Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_JNDI":{"default":"java:/JmsXA","description":"JNDI
        name for connection factory used by applications to connect to the broker,
        e.g. java:/JmsXA","title":"JMS Connection Factory JNDI Name","type":"string"},"MQ_PASSWORD":{"default":"","description":"Password
        for standard broker user. It is required for connecting to the broker. If
        left empty, it will be generated.","title":"A-MQ Password","type":"string"},"MQ_PROTOCOL":{"default":"openwire","description":"Broker
        protocols to configure, separated by commas. Allowed values are: `openwire`,
        `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.","title":"A-MQ
        Protocols","type":"string"},"MQ_QUEUES":{"default":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","title":"Topics","type":"string"},"MQ_USERNAME":{"default":"","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","title":"A-MQ Username","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b778cd6-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b789790-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b789790-0d11-11e8-906a-d094660d31fb","uid":"927f2d42-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690653","creationTimestamp":"2018-05-16T20:49:05Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b789790-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.H2Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts.git","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b789790-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b79cc83-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b79cc83-0d11-11e8-906a-d094660d31fb","uid":"9bcb8a4f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690772","creationTimestamp":"2018-05-16T20:49:21Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b79cc83-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.MySQL5Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b79cc83-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b7b0f60-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b7b0f60-0d11-11e8-906a-d094660d31fb","uid":"9e4c6577-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690800","creationTimestamp":"2018-05-16T20:49:25Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b7b0f60-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.MySQL5Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b7b0f60-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b7c4df6-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b7c4df6-0d11-11e8-906a-d094660d31fb","uid":"981988cf-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690728","creationTimestamp":"2018-05-16T20:49:14Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b7c4df6-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","VOLUME_CAPACITY","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.PostgreSQL82Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b7c4df6-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b7d97f4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b7d97f4-0d11-11e8-906a-d094660d31fb","uid":"929dab2f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690655","creationTimestamp":"2018-05-16T20:49:05Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b7d97f4-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["KIE_CONTAINER_DEPLOYMENT","KIE_SERVER_PROTOCOL","KIE_SERVER_PORT","KIE_SERVER_USER","KIE_SERVER_PASSWORD","KIE_SERVER_DOMAIN","KIE_SERVER_PERSISTENCE_DIALECT","APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","DB_JNDI","DB_DATABASE","HORNETQ_QUEUES","HORNETQ_TOPICS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_NAME","HTTPS_PASSWORD","DB_USERNAME","DB_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","MAVEN_MIRROR_URL","ARTIFACT_DIR","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"kie-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"CONTEXT_DIR":{"default":"processserver/library","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/ExampleDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_NAME":{"default":"jboss","description":"The
        name associated with the server certificate","title":"Server Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"mykeystorepass","description":"The
        password for the keystore and certificate","title":"Server Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"processserver-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"KIE_CONTAINER_DEPLOYMENT":{"default":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final","description":"The
        KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","title":"KIE
        Container Deployment","type":"string"},"KIE_SERVER_DOMAIN":{"default":"other","description":"JAAS
        LoginContext domain that shall be used to authenticate users when using JMS.","title":"KIE
        Server Domain","type":"string"},"KIE_SERVER_PASSWORD":{"default":"","description":"The
        password to access the KIE Server REST or JMS interface. Must be different
        than username; must not be root, admin, or administrator; must contain at
        least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric
        symbol(s).","title":"KIE Server Password","type":"string"},"KIE_SERVER_PERSISTENCE_DIALECT":{"default":"org.hibernate.dialect.PostgreSQL82Dialect","description":"Hibernate
        persistence dialect.","title":"KIE Server Persistence Dialect","type":"string"},"KIE_SERVER_PORT":{"default":"8443","description":"The
        port to access the KIE Server REST interface.","title":"KIE Server Port","type":"string"},"KIE_SERVER_PROTOCOL":{"default":"https","description":"The
        protocol to access the KIE Server REST interface.","title":"KIE Server Protocol","type":"string"},"KIE_SERVER_USER":{"default":"kieserver","description":"The
        user name to access the KIE Server REST or JMS interface.","title":"KIE Server
        Username","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"1.3","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-openshift/openshift-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","DB_DATABASE","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b7d97f4-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b7e878c-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b7e878c-0d11-11e8-906a-d094660d31fb","uid":"8e7198b3-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690608","creationTimestamp":"2018-05-16T20:48:58Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b7e878c-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","ACTIVEMQ_SERVICE_NAME","ACTIVEMQ_BROKER_USERNAME","ACTIVEMQ_BROKER_PASSWORD","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","CPU_REQUEST","CPU_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ACTIVEMQ_BROKER_PASSWORD":{"default":"","description":"The
        password used to authenticate with the ActiveMQ broker. Leave it empty if
        authentication is disabled.","title":"ActiveMQ Broker Password","type":"string"},"ACTIVEMQ_BROKER_USERNAME":{"default":"","description":"The
        username used to authenticate with the ActiveMQ broker. Leave it empty if
        authentication is disabled.","title":"ActiveMQ Broker Username","type":"string"},"ACTIVEMQ_SERVICE_NAME":{"default":"broker-amq-tcp","description":"Set
        this to the name of the TCP service of the ActiveMQ broker. You may need to
        create a broker first.","title":"ActiveMQ Broker Service","type":"string"},"APP_NAME":{"default":"s2i-spring-boot-camel-amq","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000067","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"spring-boot-camel-amq-1.0.0.redhat-000067","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/spring-boot-camel-amq.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"package -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"}},"required":["APP_NAME","GIT_REPO","ACTIVEMQ_SERVICE_NAME","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","CPU_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b7e878c-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b7f6b53-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b7f6b53-0d11-11e8-906a-d094660d31fb","uid":"97dc7ca5-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690725","creationTimestamp":"2018-05-16T20:49:14Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b7f6b53-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","SERVICE_ACCOUNT_NAME","SECRET_NAME","CONFIGMAP_NAME","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-spring-boot-camel-config","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000017","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CONFIGMAP_NAME":{"default":"camel-config","description":"The
        name of the Openshift ConfigMap that will be used to configure the application.
        It must be already present in Openshift.","title":"ConfigMap Name","type":"string"},"GIT_REF":{"default":"spring-boot-camel-config-1.0.0.redhat-000017","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/spring-boot-camel-config.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"package -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"},"SECRET_NAME":{"default":"camel-config","description":"The
        name of the Openshift Secret that will be used to configure the application.
        It must be already present in Openshift.","title":"Secret Name","type":"string"},"SERVICE_ACCOUNT_NAME":{"default":"qs-camel-config","description":"The
        Service Account that will be used to run the container. It must be already
        present in Openshift and have the view role.","title":"Service Account","type":"string"}},"required":["APP_NAME","GIT_REPO","SERVICE_ACCOUNT_NAME","SECRET_NAME","CONFIGMAP_NAME","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b7f6b53-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8042e2-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b8042e2-0d11-11e8-906a-d094660d31fb","uid":"92239043-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690649","creationTimestamp":"2018-05-16T20:49:04Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b8042e2-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","KIESERVER_SERVICE","KIESERVER_USERNAME","KIESERVER_PASSWORD","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","CPU_REQUEST","CPU_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-spring-boot-camel-drools","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000066","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"spring-boot-camel-drools-1.0.0.redhat-000066","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/spring-boot-camel-drools.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"KIESERVER_PASSWORD":{"default":"","description":"The
        password used to authenticate with the Decision Server.","title":"Decision
        Server Password","type":"string"},"KIESERVER_SERVICE":{"default":"kie-app","description":"Set
        this to the name of the Decision Server. You may need to create an instance
        before.","title":"Decision Server Name","type":"string"},"KIESERVER_USERNAME":{"default":"kieserver","description":"The
        username used to authenticate with the Decision Server.","title":"Decision
        Server Username","type":"string"},"MAVEN_ARGS":{"default":"package -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"}},"required":["APP_NAME","GIT_REPO","KIESERVER_SERVICE","KIESERVER_USERNAME","KIESERVER_PASSWORD","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","CPU_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b8042e2-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b81185e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b81185e-0d11-11e8-906a-d094660d31fb","uid":"8a457ec7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690559","creationTimestamp":"2018-05-16T20:48:51Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b81185e-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","INFINISPAN_SERVICE","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","CPU_REQUEST","CPU_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-spring-boot-camel-infinispan","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000036","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"spring-boot-camel-infinispan-1.0.0.redhat-000036","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/spring-boot-camel-infinispan.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"INFINISPAN_SERVICE":{"default":"datagrid-app-hotrod","description":"Set
        this to the name of the Hot Rod service of the JBoss Data Grid. You may need
        to create the data grid first.","title":"JBoss Data Grid Service (Hot Rod)","type":"string"},"MAVEN_ARGS":{"default":"package
        -DskipTests -Dfabric8.skip -e -B","description":"Arguments passed to mvn in
        the build.","title":"Maven Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"}},"required":["APP_NAME","GIT_REPO","INFINISPAN_SERVICE","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","CPU_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b81185e-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b81ff44-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b81ff44-0d11-11e8-906a-d094660d31fb","uid":"98568a65-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690730","creationTimestamp":"2018-05-16T20:49:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b81ff44-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","SERVICE_NAME","MYSQL_SERVICE_NAME","MYSQL_SERVICE_DATABASE","MYSQL_SERVICE_USERNAME","MYSQL_SERVICE_PASSWORD","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","CPU_REQUEST","CPU_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-spring-boot-camel-rest-sql","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000067","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"spring-boot-camel-rest-sql-1.0.0.redhat-000067","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/spring-boot-camel-rest-sql.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"package -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"},"MYSQL_SERVICE_DATABASE":{"default":"sampledb","description":"The
        database hosted by the MySQL server to be used by the application.","title":"MySQL
        Server Database","type":"string"},"MYSQL_SERVICE_NAME":{"default":"mysql","description":"Set
        this to the name of the TCP service of the MySQL server. You may need to create
        a server first.","title":"MySQL Server Service","type":"string"},"MYSQL_SERVICE_PASSWORD":{"default":"","description":"The
        password used to authenticate with the MySQL server. Leave it empty if authentication
        is disabled.","title":"MySQL Server Password","type":"string"},"MYSQL_SERVICE_USERNAME":{"default":"","description":"The
        username used to authenticate with the MySQL server. Leave it empty if authentication
        is disabled.","title":"MySQL Server Username","type":"string"},"SERVICE_NAME":{"default":"camel-rest-sql","description":"Exposed
        service name.","title":"Service Name","type":"string"}},"required":["APP_NAME","GIT_REPO","MYSQL_SERVICE_NAME","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","CPU_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b81ff44-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b82e6e4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b82e6e4-0d11-11e8-906a-d094660d31fb","uid":"8d036498-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690589","creationTimestamp":"2018-05-16T20:48:56Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b82e6e4-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","TEIID_SERVICE_NAME","TEIID_PORT_NAME","TEIID_USERNAME","TEIID_PASSWORD","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","CPU_REQUEST","CPU_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-spring-boot-camel-teiid","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000065","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"spring-boot-camel-teiid-1.0.0.redhat-000065","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/spring-boot-camel-teiid.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"package -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"},"TEIID_PASSWORD":{"default":"","description":"The
        password used to authenticate with the JDV Server.","title":"JDV Server Password","type":"string"},"TEIID_PORT_NAME":{"default":"jdbc","description":"Set
        this to the name of the JDV port to use. Set this value if the JDV service
        contains multiple named ports.","title":"JDV Port Name","type":"string"},"TEIID_SERVICE_NAME":{"default":"datavirt-app","description":"Set
        this to the name of the JDV Server. You may need to create an instance before.","title":"JDV
        Server Name","type":"string"},"TEIID_USERNAME":{"default":"","description":"The
        username used to authenticate with the JDV Server.","title":"JDV Server Username","type":"string"}},"required":["APP_NAME","GIT_REPO","TEIID_SERVICE_NAME","TEIID_USERNAME","TEIID_PASSWORD","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","CPU_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b82e6e4-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b83bf1e-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b83bf1e-0d11-11e8-906a-d094660d31fb","uid":"90f26d68-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690636","creationTimestamp":"2018-05-16T20:49:02Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b83bf1e-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","CPU_REQUEST","CPU_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-spring-boot-camel","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000067","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"spring-boot-camel-1.0.0.redhat-000067","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/spring-boot-camel.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"package -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"}},"required":["APP_NAME","GIT_REPO","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","CPU_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b83bf1e-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b84d28a-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b84d28a-0d11-11e8-906a-d094660d31fb","uid":"9f0389e8-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690810","creationTimestamp":"2018-05-16T20:49:26Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b84d28a-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","CPU_REQUEST","CPU_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-spring-boot-camel-xml","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000067","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"spring-boot-camel-xml-1.0.0.redhat-000067","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/spring-boot-camel-xml.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"package -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"}},"required":["APP_NAME","GIT_REPO","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","CPU_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b84d28a-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b85ae5f-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b85ae5f-0d11-11e8-906a-d094660d31fb","uid":"98751520-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690733","creationTimestamp":"2018-05-16T20:49:15Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b85ae5f-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","SERVICE_NAME","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","CPU_REQUEST","CPU_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-spring-boot-cxf-jaxrs","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000017","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"spring-boot-cxf-jaxrs-1.0.0.redhat-000017","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/spring-boot-cxf-jaxrs.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"package -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"},"SERVICE_NAME":{"default":"cxf-jaxrs","description":"Exposed
        service name.","title":"Service Name","type":"string"}},"required":["APP_NAME","GIT_REPO","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","CPU_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b85ae5f-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b869652-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b869652-0d11-11e8-906a-d094660d31fb","uid":"9a7bd064-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690758","creationTimestamp":"2018-05-16T20:49:18Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b869652-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APP_NAME","GIT_REPO","GIT_REF","SERVICE_NAME","BUILDER_VERSION","APP_VERSION","MAVEN_ARGS","MAVEN_ARGS_APPEND","ARTIFACT_DIR","IMAGE_STREAM_NAMESPACE","BUILD_SECRET","CPU_REQUEST","CPU_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APP_NAME":{"default":"s2i-spring-boot-cxf-jaxws","description":"The
        name assigned to the application.","title":"Application Name","type":"string"},"APP_VERSION":{"default":"1.0.0.redhat-000017","description":"The
        application version.","title":"Application Version","type":"string"},"ARTIFACT_DIR":{"default":"","description":"Directory
        of the artifact to be built, e.g. for multi-module builds.","title":"Maven
        build directory","type":"string"},"BUILDER_VERSION":{"default":"2.0","description":"The
        version of the FIS S2I builder image to use.","title":"Builder version","type":"string"},"BUILD_SECRET":{"default":"","description":"The
        secret needed to trigger a build.","title":"Git Build Secret","type":"string"},"CPU_LIMIT":{"default":"1.0","description":"The
        amount of CPU the container is limited to use.","title":"CPU limit","type":"string"},"CPU_REQUEST":{"default":"0.2","description":"The
        amount of CPU to requests.","title":"CPU request","type":"string"},"GIT_REF":{"default":"spring-boot-cxf-jaxws-1.0.0.redhat-000017","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"GIT_REPO":{"default":"https://github.com/fabric8-quickstarts/spring-boot-cxf-jaxws.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the Fuse ImageStreams are installed. These ImageStreams are normally
        installed in the openshift namespace. You should only need to modify this
        if you''ve installed the ImageStreams in a different namespace/project.","title":"Image
        Stream Namespace","type":"string"},"MAVEN_ARGS":{"default":"package -DskipTests
        -Dfabric8.skip -e -B","description":"Arguments passed to mvn in the build.","title":"Maven
        Arguments","type":"string"},"MAVEN_ARGS_APPEND":{"default":"","description":"Extra
        arguments passed to mvn, e.g. for multi-module builds.","title":"Extra Maven
        Arguments","type":"string"},"SERVICE_NAME":{"default":"cxf-jaxws","description":"Exposed
        service name.","title":"Service Name","type":"string"}},"required":["APP_NAME","GIT_REPO","IMAGE_STREAM_NAMESPACE","CPU_REQUEST","CPU_LIMIT"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b869652-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b87a9db-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b87a9db-0d11-11e8-906a-d094660d31fb","uid":"9e89825f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690803","creationTimestamp":"2018-05-16T20:49:25Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b87a9db-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","SERVICE_ACCOUNT_NAME","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","IMAGE_STREAM_NAMESPACE","SSO_ADMIN_USERNAME","SSO_ADMIN_PASSWORD","SSO_REALM","SSO_SERVICE_USERNAME","SSO_SERVICE_PASSWORD","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"sso","description":"The
        name for the application.","title":"Application Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"SERVICE_ACCOUNT_NAME":{"default":"sso-service-account","description":"The
        name of the service account to use for the deployment.  The service account
        should be configured to allow useage of the secret(s) specified by HTTPS_SECRET
        and JGROUPS_ENCRYPT_SECRET.","title":"Service Account Name","type":"string"},"SSO_ADMIN_PASSWORD":{"default":"","description":"SSO
        Server admin  password","title":"SSO Admin Password","type":"string"},"SSO_ADMIN_USERNAME":{"default":"","description":"SSO
        Server admin username","title":"SSO Admin Username","type":"string"},"SSO_REALM":{"default":"","description":"Realm
        to be created in the SSO server (e.g. demo).","title":"SSO Realm","type":"string"},"SSO_SERVICE_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Service Password","type":"string"},"SSO_SERVICE_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used by clients to create
        the appliction client(s) within the specified SSO realm.","title":"SSO Service
        Username","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"}},"required":["APPLICATION_NAME","SERVICE_ACCOUNT_NAME","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b87a9db-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b88dcce-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b88dcce-0d11-11e8-906a-d094660d31fb","uid":"8ade1d3f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690565","creationTimestamp":"2018-05-16T20:48:52Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b88dcce-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","DB_JNDI","DB_DATABASE","SERVICE_ACCOUNT_NAME","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","VOLUME_CAPACITY","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","IMAGE_STREAM_NAMESPACE","SSO_ADMIN_USERNAME","SSO_ADMIN_PASSWORD","SSO_REALM","SSO_SERVICE_USERNAME","SSO_SERVICE_PASSWORD","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"sso","description":"The
        name for the application.","title":"Application Name","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/KeycloakDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SERVICE_ACCOUNT_NAME":{"default":"sso-service-account","description":"The
        name of the service account to use for the deployment.  The service account
        should be configured to allow useage of the secret(s) specified by HTTPS_SECRET
        and JGROUPS_ENCRYPT_SECRET.","title":"Service Account Name","type":"string"},"SSO_ADMIN_PASSWORD":{"default":"","description":"SSO
        Server admin  password","title":"SSO Admin Password","type":"string"},"SSO_ADMIN_USERNAME":{"default":"","description":"SSO
        Server admin username","title":"SSO Admin Username","type":"string"},"SSO_REALM":{"default":"","description":"Realm
        to be created in the SSO server (e.g. demo).","title":"SSO Realm","type":"string"},"SSO_SERVICE_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Service Password","type":"string"},"SSO_SERVICE_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used by clients to create
        the appliction client(s) within the specified SSO realm.","title":"SSO Service
        Username","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","DB_DATABASE","SERVICE_ACCOUNT_NAME","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b88dcce-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8a1d3b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b8a1d3b-0d11-11e8-906a-d094660d31fb","uid":"8bf0c5ac-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690578","creationTimestamp":"2018-05-16T20:48:54Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b8a1d3b-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","DB_JNDI","DB_DATABASE","SERVICE_ACCOUNT_NAME","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","IMAGE_STREAM_NAMESPACE","SSO_ADMIN_USERNAME","SSO_ADMIN_PASSWORD","SSO_REALM","SSO_SERVICE_USERNAME","SSO_SERVICE_PASSWORD","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","MYSQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"sso","description":"The
        name for the application.","title":"Application Name","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/KeycloakDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SERVICE_ACCOUNT_NAME":{"default":"sso-service-account","description":"The
        name of the service account to use for the deployment.  The service account
        should be configured to allow useage of the secret(s) specified by HTTPS_SECRET
        and JGROUPS_ENCRYPT_SECRET.","title":"Service Account Name","type":"string"},"SSO_ADMIN_PASSWORD":{"default":"","description":"SSO
        Server admin  password","title":"SSO Admin Password","type":"string"},"SSO_ADMIN_USERNAME":{"default":"","description":"SSO
        Server admin username","title":"SSO Admin Username","type":"string"},"SSO_REALM":{"default":"","description":"Realm
        to be created in the SSO server (e.g. demo).","title":"SSO Realm","type":"string"},"SSO_SERVICE_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Service Password","type":"string"},"SSO_SERVICE_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used by clients to create
        the appliction client(s) within the specified SSO realm.","title":"SSO Service
        Username","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"}},"required":["APPLICATION_NAME","DB_DATABASE","SERVICE_ACCOUNT_NAME","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b8a1d3b-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8b58cd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b8b58cd-0d11-11e8-906a-d094660d31fb","uid":"907865b0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690630","creationTimestamp":"2018-05-16T20:49:02Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b8b58cd-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","DB_JNDI","DB_DATABASE","SERVICE_ACCOUNT_NAME","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","VOLUME_CAPACITY","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","IMAGE_STREAM_NAMESPACE","SSO_ADMIN_USERNAME","SSO_ADMIN_PASSWORD","SSO_REALM","SSO_SERVICE_USERNAME","SSO_SERVICE_PASSWORD","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"sso","description":"The
        name for the application.","title":"Application Name","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/KeycloakDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SERVICE_ACCOUNT_NAME":{"default":"sso-service-account","description":"The
        name of the service account to use for the deployment.  The service account
        should be configured to allow useage of the secret(s) specified by HTTPS_SECRET
        and JGROUPS_ENCRYPT_SECRET.","title":"Service Account Name","type":"string"},"SSO_ADMIN_PASSWORD":{"default":"","description":"SSO
        Server admin  password","title":"SSO Admin Password","type":"string"},"SSO_ADMIN_USERNAME":{"default":"","description":"SSO
        Server admin username","title":"SSO Admin Username","type":"string"},"SSO_REALM":{"default":"","description":"Realm
        to be created in the SSO server (e.g. demo).","title":"SSO Realm","type":"string"},"SSO_SERVICE_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Service Password","type":"string"},"SSO_SERVICE_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used by clients to create
        the appliction client(s) within the specified SSO realm.","title":"SSO Service
        Username","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"},"VOLUME_CAPACITY":{"default":"512Mi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","DB_DATABASE","SERVICE_ACCOUNT_NAME","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b8b58cd-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8c9061-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b8c9061-0d11-11e8-906a-d094660d31fb","uid":"9bea0893-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690773","creationTimestamp":"2018-05-16T20:49:21Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b8c9061-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","DB_JNDI","DB_DATABASE","SERVICE_ACCOUNT_NAME","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","IMAGE_STREAM_NAMESPACE","SSO_ADMIN_USERNAME","SSO_ADMIN_PASSWORD","SSO_REALM","SSO_SERVICE_USERNAME","SSO_SERVICE_PASSWORD","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","POSTGRESQL_IMAGE_STREAM_TAG"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"sso","description":"The
        name for the application.","title":"Application Name","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/KeycloakDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SERVICE_ACCOUNT_NAME":{"default":"sso-service-account","description":"The
        name of the service account to use for the deployment.  The service account
        should be configured to allow useage of the secret(s) specified by HTTPS_SECRET
        and JGROUPS_ENCRYPT_SECRET.","title":"Service Account Name","type":"string"},"SSO_ADMIN_PASSWORD":{"default":"","description":"SSO
        Server admin  password","title":"SSO Admin Password","type":"string"},"SSO_ADMIN_USERNAME":{"default":"","description":"SSO
        Server admin username","title":"SSO Admin Username","type":"string"},"SSO_REALM":{"default":"","description":"Realm
        to be created in the SSO server (e.g. demo).","title":"SSO Realm","type":"string"},"SSO_SERVICE_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Service Password","type":"string"},"SSO_SERVICE_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used by clients to create
        the appliction client(s) within the specified SSO realm.","title":"SSO Service
        Username","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"}},"required":["APPLICATION_NAME","DB_DATABASE","SERVICE_ACCOUNT_NAME","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b8c9061-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8dcb19-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b8dcb19-0d11-11e8-906a-d094660d31fb","uid":"9448fc91-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690684","creationTimestamp":"2018-05-16T20:49:08Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b8dcb19-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","IMAGE_STREAM_NAMESPACE","SSO_ADMIN_USERNAME","SSO_ADMIN_PASSWORD","SSO_REALM","SSO_SERVICE_USERNAME","SSO_SERVICE_PASSWORD","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"sso","description":"The
        name for the application.","title":"Application Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"SSO_ADMIN_PASSWORD":{"default":"","description":"SSO
        Server admin  password","title":"SSO Admin Password","type":"string"},"SSO_ADMIN_USERNAME":{"default":"","description":"SSO
        Server admin username","title":"SSO Admin Username","type":"string"},"SSO_REALM":{"default":"","description":"Realm
        to be created in the SSO server (e.g. demo).","title":"SSO Realm","type":"string"},"SSO_SERVICE_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Service Password","type":"string"},"SSO_SERVICE_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used by clients to create
        the appliction client(s) within the specified SSO realm.","title":"SSO Service
        Username","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"}},"required":["APPLICATION_NAME","IMAGE_STREAM_NAMESPACE"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b8dcb19-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b8f17dd-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b8f17dd-0d11-11e8-906a-d094660d31fb","uid":"9354c997-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690674","creationTimestamp":"2018-05-16T20:49:06Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b8f17dd-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","DB_JNDI","DB_DATABASE","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","VOLUME_CAPACITY","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","IMAGE_STREAM_NAMESPACE","SSO_ADMIN_USERNAME","SSO_ADMIN_PASSWORD","SSO_REALM","SSO_SERVICE_USERNAME","SSO_SERVICE_PASSWORD","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"sso","description":"The
        name for the application.","title":"Application Name","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/KeycloakDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SSO_ADMIN_PASSWORD":{"default":"","description":"SSO
        Server admin  password","title":"SSO Admin Password","type":"string"},"SSO_ADMIN_USERNAME":{"default":"","description":"SSO
        Server admin username","title":"SSO Admin Username","type":"string"},"SSO_REALM":{"default":"","description":"Realm
        to be created in the SSO server (e.g. demo).","title":"SSO Realm","type":"string"},"SSO_SERVICE_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Service Password","type":"string"},"SSO_SERVICE_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used by clients to create
        the appliction client(s) within the specified SSO realm.","title":"SSO Service
        Username","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b8f17dd-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b90587b-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b90587b-0d11-11e8-906a-d094660d31fb","uid":"95f4dac4-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690703","creationTimestamp":"2018-05-16T20:49:11Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b90587b-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","DB_JNDI","DB_DATABASE","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","MYSQL_LOWER_CASE_TABLE_NAMES","MYSQL_MAX_CONNECTIONS","MYSQL_FT_MIN_WORD_LEN","MYSQL_FT_MAX_WORD_LEN","MYSQL_AIO","DB_USERNAME","DB_PASSWORD","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","IMAGE_STREAM_NAMESPACE","SSO_ADMIN_USERNAME","SSO_ADMIN_PASSWORD","SSO_REALM","SSO_SERVICE_USERNAME","SSO_SERVICE_PASSWORD","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","MYSQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"sso","description":"The
        name for the application.","title":"Application Name","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/KeycloakDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/mysql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MYSQL_AIO":{"default":"","description":"Controls
        the innodb_use_native_aio setting value if the native AIO is broken.","title":"MySQL
        AIO","type":"string"},"MYSQL_FT_MAX_WORD_LEN":{"default":"","description":"The
        maximum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Maximum Word Length","type":"string"},"MYSQL_FT_MIN_WORD_LEN":{"default":"","description":"The
        minimum length of the word to be included in a FULLTEXT index.","title":"MySQL
        FullText Minimum Word Length","type":"string"},"MYSQL_IMAGE_STREAM_TAG":{"default":"5.7","description":"The
        tag to use for the \"mysql\" image stream.  Typically, this aligns with the
        major.minor version of MySQL.","title":"MySQL Image Stream Tag","type":"string"},"MYSQL_LOWER_CASE_TABLE_NAMES":{"default":"","description":"Sets
        how the table names are stored and compared.","title":"MySQL Lower Case Table
        Names","type":"string"},"MYSQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum permitted number of simultaneous client connections.","title":"MySQL
        Maximum number of connections","type":"string"},"SSO_ADMIN_PASSWORD":{"default":"","description":"SSO
        Server admin  password","title":"SSO Admin Password","type":"string"},"SSO_ADMIN_USERNAME":{"default":"","description":"SSO
        Server admin username","title":"SSO Admin Username","type":"string"},"SSO_REALM":{"default":"","description":"Realm
        to be created in the SSO server (e.g. demo).","title":"SSO Realm","type":"string"},"SSO_SERVICE_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Service Password","type":"string"},"SSO_SERVICE_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used by clients to create
        the appliction client(s) within the specified SSO realm.","title":"SSO Service
        Username","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"}},"required":["APPLICATION_NAME","DB_DATABASE","IMAGE_STREAM_NAMESPACE","MYSQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b90587b-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b9189ec-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b9189ec-0d11-11e8-906a-d094660d31fb","uid":"918b175d-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690643","creationTimestamp":"2018-05-16T20:49:03Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b9189ec-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","DB_JNDI","DB_DATABASE","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","VOLUME_CAPACITY","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","IMAGE_STREAM_NAMESPACE","SSO_ADMIN_USERNAME","SSO_ADMIN_PASSWORD","SSO_REALM","SSO_SERVICE_USERNAME","SSO_SERVICE_PASSWORD","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"sso","description":"The
        name for the application.","title":"Application Name","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/KeycloakDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SSO_ADMIN_PASSWORD":{"default":"","description":"SSO
        Server admin  password","title":"SSO Admin Password","type":"string"},"SSO_ADMIN_USERNAME":{"default":"","description":"SSO
        Server admin username","title":"SSO Admin Username","type":"string"},"SSO_REALM":{"default":"","description":"Realm
        to be created in the SSO server (e.g. demo).","title":"SSO Realm","type":"string"},"SSO_SERVICE_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Service Password","type":"string"},"SSO_SERVICE_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used by clients to create
        the appliction client(s) within the specified SSO realm.","title":"SSO Service
        Username","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of persistent storage for database volume.","title":"Database Volume Capacity","type":"string"}},"required":["APPLICATION_NAME","DB_DATABASE","VOLUME_CAPACITY","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b9189ec-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1b9304c4-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1b9304c4-0d11-11e8-906a-d094660d31fb","uid":"8ce4c63f-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690587","creationTimestamp":"2018-05-16T20:48:56Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1b9304c4-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","HOSTNAME_HTTPS","DB_JNDI","DB_DATABASE","HTTPS_SECRET","HTTPS_KEYSTORE","HTTPS_KEYSTORE_TYPE","HTTPS_NAME","HTTPS_PASSWORD","DB_MIN_POOL_SIZE","DB_MAX_POOL_SIZE","DB_TX_ISOLATION","POSTGRESQL_MAX_CONNECTIONS","POSTGRESQL_SHARED_BUFFERS","DB_USERNAME","DB_PASSWORD","JGROUPS_ENCRYPT_SECRET","JGROUPS_ENCRYPT_KEYSTORE","JGROUPS_ENCRYPT_NAME","JGROUPS_ENCRYPT_PASSWORD","JGROUPS_CLUSTER_PASSWORD","IMAGE_STREAM_NAMESPACE","SSO_ADMIN_USERNAME","SSO_ADMIN_PASSWORD","SSO_REALM","SSO_SERVICE_USERNAME","SSO_SERVICE_PASSWORD","SSO_TRUSTSTORE","SSO_TRUSTSTORE_PASSWORD","SSO_TRUSTSTORE_SECRET","POSTGRESQL_IMAGE_STREAM_TAG","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"sso","description":"The
        name for the application.","title":"Application Name","type":"string"},"DB_DATABASE":{"default":"root","description":"Database
        name","title":"Database Name","type":"string"},"DB_JNDI":{"default":"java:jboss/datasources/KeycloakDS","description":"Database
        JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql","title":"Database
        JNDI Name","type":"string"},"DB_MAX_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/max-pool-size for the configured datasource.","title":"Datasource
        Maximum Pool Size","type":"string"},"DB_MIN_POOL_SIZE":{"default":"","description":"Sets
        xa-pool/min-pool-size for the configured datasource.","title":"Datasource
        Minimum Pool Size","type":"string"},"DB_PASSWORD":{"default":"","description":"Database
        user password","title":"Database Password","type":"string"},"DB_TX_ISOLATION":{"default":"","description":"Sets
        transaction-isolation for the configured datasource.","title":"Datasource
        Transaction Isolation","type":"string"},"DB_USERNAME":{"default":"","description":"Database
        user name","title":"Database Username","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOSTNAME_HTTPS":{"default":"","description":"Custom
        hostname for https service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        https Route Hostname","type":"string"},"HTTPS_KEYSTORE":{"default":"keystore.jks","description":"The
        name of the keystore file within the secret","title":"Server Keystore Filename","type":"string"},"HTTPS_KEYSTORE_TYPE":{"default":"","description":"The
        type of the keystore file (JKS or JCEKS)","title":"Server Keystore Type","type":"string"},"HTTPS_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. jboss)","title":"Server
        Certificate Name","type":"string"},"HTTPS_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)","title":"Server
        Keystore Password","type":"string"},"HTTPS_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"Server Keystore
        Secret Name","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"JGROUPS_ENCRYPT_KEYSTORE":{"default":"jgroups.jceks","description":"The
        name of the keystore file within the secret","title":"JGroups Keystore Filename","type":"string"},"JGROUPS_ENCRYPT_NAME":{"default":"","description":"The
        name associated with the server certificate (e.g. secret-key)","title":"JGroups
        Certificate Name","type":"string"},"JGROUPS_ENCRYPT_PASSWORD":{"default":"","description":"The
        password for the keystore and certificate (e.g. password)","title":"JGroups
        Keystore Password","type":"string"},"JGROUPS_ENCRYPT_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the keystore file","title":"JGroups Secret Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"POSTGRESQL_IMAGE_STREAM_TAG":{"default":"9.5","description":"The
        tag to use for the \"postgresql\" image stream.  Typically, this aligns with
        the major.minor version of PostgreSQL.","title":"PostgreSQL Image Stream Tag","type":"string"},"POSTGRESQL_MAX_CONNECTIONS":{"default":"","description":"The
        maximum number of client connections allowed. This also sets the maximum number
        of prepared transactions.","title":"PostgreSQL Maximum number of connections","type":"string"},"POSTGRESQL_SHARED_BUFFERS":{"default":"","description":"Configures
        how much memory is dedicated to PostgreSQL for caching data.","title":"PostgreSQL
        Shared Buffers","type":"string"},"SSO_ADMIN_PASSWORD":{"default":"","description":"SSO
        Server admin  password","title":"SSO Admin Password","type":"string"},"SSO_ADMIN_USERNAME":{"default":"","description":"SSO
        Server admin username","title":"SSO Admin Username","type":"string"},"SSO_REALM":{"default":"","description":"Realm
        to be created in the SSO server (e.g. demo).","title":"SSO Realm","type":"string"},"SSO_SERVICE_PASSWORD":{"default":"","description":"The
        password for the SSO service user.","title":"SSO Service Password","type":"string"},"SSO_SERVICE_USERNAME":{"default":"","description":"The
        username used to access the SSO service.  This is used by clients to create
        the appliction client(s) within the specified SSO realm.","title":"SSO Service
        Username","type":"string"},"SSO_TRUSTSTORE":{"default":"","description":"The
        name of the truststore file within the secret (e.g. truststore.jks)","title":"SSO
        Trust Store","type":"string"},"SSO_TRUSTSTORE_PASSWORD":{"default":"","description":"The
        password for the truststore and certificate (e.g. mykeystorepass)","title":"SSO
        Trust Store Password","type":"string"},"SSO_TRUSTSTORE_SECRET":{"default":"sso-app-secret","description":"The
        name of the secret containing the truststore file (e.g. truststore-secret).
        Used for volume secretName","title":"SSO Trust Store Secret","type":"string"}},"required":["APPLICATION_NAME","DB_DATABASE","IMAGE_STREAM_NAMESPACE","POSTGRESQL_IMAGE_STREAM_TAG"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1b9304c4-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1e443dec-594a-11e8-ba7e-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1e443dec-594a-11e8-ba7e-d094660d31fb","uid":"9743df27-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690719","creationTimestamp":"2018-05-16T20:49:13Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1e443dec-594a-11e8-ba7e-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["NAME","NAMESPACE","NGINX_VERSION","MEMORY_LIMIT","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","APPLICATION_DOMAIN","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_DOMAIN":{"default":"","description":"The
        exposed hostname that will route to the nginx service, if left blank a value
        will be defaulted.","title":"Application Hostname","type":"string"},"CONTEXT_DIR":{"default":"","description":"Set
        this to the relative path to your project if it is not in the root of your
        repository.","title":"Context Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"A
        secret string used to configure the Generic webhook.","title":"Generic Webhook
        Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"Github
        trigger secret.  A difficult to guess string encoded as part of the webhook
        URL.  Not encrypted.","title":"GitHub Webhook Secret","type":"string"},"MEMORY_LIMIT":{"default":"512Mi","description":"Maximum
        amount of memory the container can use.","title":"Memory Limit","type":"string"},"NAME":{"default":"nginx-example","description":"The
        name assigned to all of the frontend objects defined in this template.","title":"Name","type":"string"},"NAMESPACE":{"default":"openshift","description":"The
        OpenShift Namespace where the ImageStream resides.","title":"Namespace","type":"string"},"NGINX_VERSION":{"default":"1.12","description":"Version
        of NGINX image to be used (1.12 by default).","title":"NGINX Version","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"","description":"Set
        this to a branch name, tag or other ref of your repository if you are not
        using the default branch.","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/sclorg/nginx-ex.git","description":"The
        URL of the repository with your application source code.","title":"Git Repository
        URL","type":"string"}},"required":["NAME","NAMESPACE","NGINX_VERSION","MEMORY_LIMIT","SOURCE_REPOSITORY_URL"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1e443dec-594a-11e8-ba7e-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"1ec7ab69-0d11-11e8-906a-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/1ec7ab69-0d11-11e8-906a-d094660d31fb","uid":"8bd23b14-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690575","creationTimestamp":"2018-05-16T20:48:54Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"1ec7ab69-0d11-11e8-906a-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["IMAGE_PREFIX","IMAGE_BASENAME","IMAGE_VERSION","OPENSHIFT_OAUTH_PROVIDER_URL","COCKPIT_KUBE_URL","OPENSHIFT_OAUTH_CLIENT_SECRET","OPENSHIFT_OAUTH_CLIENT_ID","REGISTRY_HOST"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"COCKPIT_KUBE_URL":{"default":"","description":"The
        registry console URL. This should be created beforehand using ''oc create
        route passthrough --service registry-console --port registry-console -n default'',
        e.g. https://registry-console-default.example.com","type":"string"},"IMAGE_BASENAME":{"default":"registry-console","description":"Specify
        component name for container image; e.g. for \"registry.access.redhat.com/openshift3/registry-console:latest\",
        use base name \"registry-console\"","type":"string"},"IMAGE_PREFIX":{"default":"registry.access.redhat.com/openshift3/","description":"Specify
        \"registry/repository\" prefix for container image; e.g. for \"registry.access.redhat.com/openshift3/registry-console:latest\",
        set prefix \"registry.access.redhat.com/openshift3/\"","type":"string"},"IMAGE_VERSION":{"default":"v3.9","description":"Specify
        image version; e.g. for \"registry.access.redhat.com/openshift3/registry-console:v3.9\",
        set version \"v3.9\"","type":"string"},"OPENSHIFT_OAUTH_CLIENT_ID":{"default":"cockpit-oauth-client","description":"Oauth
        client id","type":"string"},"OPENSHIFT_OAUTH_CLIENT_SECRET":{"default":"","description":"Oauth
        client secret","type":"string"},"OPENSHIFT_OAUTH_PROVIDER_URL":{"default":"","description":"The
        public URL for the Openshift OAuth Provider, e.g. https://openshift.example.com:8443","type":"string"},"REGISTRY_HOST":{"default":"","description":"The
        integrated registry hostname exposed via route, e.g. registry.example.com","type":"string"}},"required":["OPENSHIFT_OAUTH_PROVIDER_URL","COCKPIT_KUBE_URL","REGISTRY_HOST"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"1ec7ab69-0d11-11e8-906a-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"43d3e23d214c26dbebc0879e44425db4","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/43d3e23d214c26dbebc0879e44425db4","uid":"a6a4a193-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690850","creationTimestamp":"2018-05-16T20:49:39Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"default","externalID":"43d3e23d214c26dbebc0879e44425db4","description":"An
        APB that deploys MediaWiki","free":true,"externalMetadata":{"cost":"$0.00","displayName":"Default","longDescription":"This
        plan deploys a single mediawiki instance without a DB","schemas":{"service_binding":{"create":{"openshift_form_definition":[]}},"service_instance":{"create":{"openshift_form_definition":["mediawiki_db_schema","mediawiki_site_name","mediawiki_site_lang","mediawiki_admin_user",{"key":"mediawiki_admin_pass","type":"password"}]},"update":{}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"mediawiki_admin_pass":{"title":"Mediawiki
        Admin User Password","type":"string"},"mediawiki_admin_user":{"default":"admin","title":"Mediawiki
        Admin User (Cannot be the same value as Admin User Password)","type":"string"},"mediawiki_db_schema":{"default":"mediawiki","pattern":"^[a-zA-Z_][a-zA-Z0-9_]*$","title":"Mediawiki
        DB Schema","type":"string"},"mediawiki_site_lang":{"default":"en","pattern":"^[a-z]{2,3}$","title":"Mediawiki
        Site Language","type":"string"},"mediawiki_site_name":{"default":"MediaWiki","pattern":"^[a-zA-Z]+$","title":"Mediawiki
        Site Name","type":"string"}},"required":["mediawiki_db_schema","mediawiki_site_name","mediawiki_site_lang","mediawiki_admin_user","mediawiki_admin_pass"],"type":"object"},"instanceUpdateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"mediawiki_site_name":{"default":"MediaWiki","pattern":"^[a-zA-Z]+$","title":"Mediawiki
        Site Name","type":"string"}},"required":["mediawiki_site_name"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"03b69500305d9859bb9440d9f9023784"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"465063705516630c3d3e2de7798b7041","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/465063705516630c3d3e2de7798b7041","uid":"a6861b28-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690849","creationTimestamp":"2018-05-16T20:49:39Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"prod","externalID":"465063705516630c3d3e2de7798b7041","description":"A
        MySQL server with persistent storage","free":false,"externalMetadata":{"cost":"$5.99
        monthly","displayName":"Production","longDescription":"This plan provides
        a single non-HA MySQL server with 10 GiB of persistent storage","schemas":{"service_binding":{"create":{"openshift_form_definition":[]}},"service_instance":{"create":{"openshift_form_definition":["service_name","mysql_version","mysql_database","mysql_user",{"key":"mysql_password","type":"password"}]},"update":{}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"mysql_database":{"default":"devel","description":"The
        name of the MySQL database","pattern":"^[a-zA-Z0-9_]*[a-zA-Z_]+[a-zA-Z0-9_]*$","type":"string"},"mysql_password":{"description":"Password
        to connect to MySQL (generated if blank)","type":"string"},"mysql_user":{"default":"devel","description":"Username
        that will be used to connect to MySQL","pattern":"^[a-zA-Z0-9_]*[a-zA-Z_]+[a-zA-Z0-9_]*$","type":"string"},"mysql_version":{"default":"5.7","description":"Version
        of MySQL to deploy","enum":["5.6","5.7"],"type":"string"},"service_name":{"default":"mysql","description":"The
        name of the service. Used to name and label resources","pattern":"^[a-zA-Z0-9]+[a-zA-Z0-9-]*[a-zA-Z0-9]+$","type":"string"}},"required":["service_name","mysql_version","mysql_database","mysql_user","mysql_password"],"type":"object"},"instanceUpdateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"mysql_version":{"default":"5.7","description":"Version
        of MySQL to deploy","enum":["5.6","5.7"],"type":"string"}},"required":["mysql_version"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"73ead67495322cc462794387fa9884f5"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"4acaf1511a92890cd8910b1d8473be97","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/4acaf1511a92890cd8910b1d8473be97","uid":"a652b052-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690845","creationTimestamp":"2018-05-16T20:49:38Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"prod","externalID":"4acaf1511a92890cd8910b1d8473be97","description":"A
        single DB server with persistent storage","free":true,"externalMetadata":{"cost":"$0.00","displayName":"Production","longDescription":"This
        plan provides a single non-HA PostgreSQL server with persistent storage","schemas":{"service_binding":{"create":{"openshift_form_definition":[]}},"service_instance":{"create":{"openshift_form_definition":["postgresql_database","postgresql_user",{"key":"postgresql_password","type":"password"},"postgresql_version"]},"update":{}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"postgresql_database":{"default":"admin","pattern":"^[a-zA-Z_][a-zA-Z0-9_]*$","title":"PostgreSQL
        Database Name","type":"string"},"postgresql_password":{"pattern":"^[a-zA-Z0-9_~!@#$%^\u0026*()-=\u003c\u003e,.?;:|]+$","title":"PostgreSQL
        Password","type":"string"},"postgresql_user":{"default":"admin","maxLength":63,"pattern":"^[a-zA-Z_][a-zA-Z0-9_]*$","title":"PostgreSQL
        User","type":"string"},"postgresql_version":{"default":"9.6","enum":["9.6","9.5","9.4"],"title":"PostgreSQL
        Version","type":"string"}},"required":["postgresql_database","postgresql_user","postgresql_password","postgresql_version"],"type":"object"},"instanceUpdateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"postgresql_version":{"default":"9.6","enum":["9.6","9.5","9.4"],"title":"PostgreSQL
        Version","type":"string"}},"required":["postgresql_version"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"d5915e05b253df421efe6e41fb6a66ba"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"93a78b607a2e18776587f0a35ebe92a6","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/93a78b607a2e18776587f0a35ebe92a6","uid":"a65364c1-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690847","creationTimestamp":"2018-05-16T20:49:38Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"prod","externalID":"93a78b607a2e18776587f0a35ebe92a6","description":"This
        plan deploys a single MariaDB instance with 10 GiB of persistent storage","free":true,"externalMetadata":{"cost":"$0.00","displayName":"Production","schemas":{"service_binding":{"create":{"openshift_form_definition":[]}},"service_instance":{"create":{"openshift_form_definition":["mariadb_database",{"key":"mariadb_root_password","type":"password"},"mariadb_user",{"key":"mariadb_password","type":"password"},"mariadb_version"]},"update":{}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"mariadb_database":{"default":"admin","description":"MariaDB
        default database name","pattern":"^[a-zA-Z0-9_]*[a-zA-Z_]+[a-zA-Z0-9_]*$","title":"MariaDB
        Database Name","type":"string"},"mariadb_password":{"title":"MariaDB Password","type":"string"},"mariadb_root_password":{"title":"MariaDB
        Root Password","type":"string"},"mariadb_user":{"default":"admin","pattern":"^[a-zA-Z0-9_]*[a-zA-Z_]+[a-zA-Z0-9_]*$","title":"MariaDB
        User","type":"string"},"mariadb_version":{"default":"10.2","enum":["10.2","10.1","10.0"],"title":"MariaDB
        Version","type":"string"}},"required":["mariadb_database","mariadb_root_password","mariadb_user","mariadb_password","mariadb_version"],"type":"object"},"instanceUpdateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"mariadb_version":{"default":"10.2","enum":["10.2","10.1","10.0"],"title":"MariaDB
        Version","type":"string"}},"required":["mariadb_version"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"2c259ddd8059b9bc65081e07bf20058f"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"9783fc2e859f9179833a7dd003baa841","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/9783fc2e859f9179833a7dd003baa841","uid":"a65252b5-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690844","creationTimestamp":"2018-05-16T20:49:38Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"dev","externalID":"9783fc2e859f9179833a7dd003baa841","description":"A
        single DB server with no storage","free":true,"externalMetadata":{"cost":"$0.00","displayName":"Development","longDescription":"This
        plan provides a single non-HA PostgreSQL server without persistent storage","schemas":{"service_binding":{"create":{"openshift_form_definition":[]}},"service_instance":{"create":{"openshift_form_definition":["postgresql_database","postgresql_user",{"key":"postgresql_password","type":"password"},"postgresql_version"]},"update":{}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"postgresql_database":{"default":"admin","pattern":"^[a-zA-Z_][a-zA-Z0-9_]*$","title":"PostgreSQL
        Database Name","type":"string"},"postgresql_password":{"pattern":"^[a-zA-Z0-9_~!@#$%^\u0026*()-=\u003c\u003e,.?;:|]+$","title":"PostgreSQL
        Password","type":"string"},"postgresql_user":{"default":"admin","maxLength":63,"pattern":"^[a-zA-Z_][a-zA-Z0-9_]*$","title":"PostgreSQL
        User","type":"string"},"postgresql_version":{"default":"9.6","enum":["9.6","9.5","9.4"],"title":"PostgreSQL
        Version","type":"string"}},"required":["postgresql_database","postgresql_user","postgresql_password","postgresql_version"],"type":"object"},"instanceUpdateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"postgresql_version":{"default":"9.6","enum":["9.6","9.5","9.4"],"title":"PostgreSQL
        Version","type":"string"}},"required":["postgresql_version"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"d5915e05b253df421efe6e41fb6a66ba"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"ac68a02cfc1148713f61edb99213a17d","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/ac68a02cfc1148713f61edb99213a17d","uid":"a6679cb7-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690848","creationTimestamp":"2018-05-16T20:49:38Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"dev","externalID":"ac68a02cfc1148713f61edb99213a17d","description":"A
        MySQL server with ephemeral storage","free":true,"externalMetadata":{"cost":"$0.00","displayName":"Development","longDescription":"This
        plan provides a single non-HA MySQL server without persistent storage","schemas":{"service_binding":{"create":{"openshift_form_definition":[]}},"service_instance":{"create":{"openshift_form_definition":["service_name","mysql_version","mysql_database","mysql_user",{"key":"mysql_password","type":"password"}]},"update":{}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"mysql_database":{"default":"devel","description":"The
        name of the MySQL database","pattern":"^[a-zA-Z0-9_]*[a-zA-Z_]+[a-zA-Z0-9_]*$","type":"string"},"mysql_password":{"description":"Password
        to connect to MySQL (generated if blank)","type":"string"},"mysql_user":{"default":"devel","description":"Username
        that will be used to connect to MySQL","pattern":"^[a-zA-Z0-9_]*[a-zA-Z_]+[a-zA-Z0-9_]*$","type":"string"},"mysql_version":{"default":"5.7","description":"Version
        of MySQL to deploy","enum":["5.6","5.7"],"type":"string"},"service_name":{"default":"mysql","description":"The
        name of the service. Used to name and label resources","pattern":"^[a-zA-Z0-9]+[a-zA-Z0-9-]*[a-zA-Z0-9]+$","type":"string"}},"required":["service_name","mysql_version","mysql_database","mysql_user","mysql_password"],"type":"object"},"instanceUpdateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"mysql_version":{"default":"5.7","description":"Version
        of MySQL to deploy","enum":["5.6","5.7"],"type":"string"}},"required":["mysql_version"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"73ead67495322cc462794387fa9884f5"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"ba144caf21607ad5d50c06bdd0f72db3","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/ba144caf21607ad5d50c06bdd0f72db3","uid":"a653094e-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690846","creationTimestamp":"2018-05-16T20:49:38Z"},"spec":{"clusterServiceBrokerName":"ansible-service-broker","externalName":"dev","externalID":"ba144caf21607ad5d50c06bdd0f72db3","description":"This
        plan deploys a single MariaDB instance with ephemeral storage","free":true,"externalMetadata":{"cost":"$0.00","displayName":"Development","schemas":{"service_binding":{"create":{"openshift_form_definition":[]}},"service_instance":{"create":{"openshift_form_definition":["mariadb_database",{"key":"mariadb_root_password","type":"password"},"mariadb_user",{"key":"mariadb_password","type":"password"},"mariadb_version"]},"update":{}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"mariadb_database":{"default":"admin","description":"MariaDB
        default database name","pattern":"^[a-zA-Z0-9_]*[a-zA-Z_]+[a-zA-Z0-9_]*$","title":"MariaDB
        Database Name","type":"string"},"mariadb_password":{"title":"MariaDB Password","type":"string"},"mariadb_root_password":{"title":"MariaDB
        Root Password","type":"string"},"mariadb_user":{"default":"admin","pattern":"^[a-zA-Z0-9_]*[a-zA-Z_]+[a-zA-Z0-9_]*$","title":"MariaDB
        User","type":"string"},"mariadb_version":{"default":"10.2","enum":["10.2","10.1","10.0"],"title":"MariaDB
        Version","type":"string"}},"required":["mariadb_database","mariadb_root_password","mariadb_user","mariadb_password","mariadb_version"],"type":"object"},"instanceUpdateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"mariadb_version":{"default":"10.2","enum":["10.2","10.1","10.0"],"title":"MariaDB
        Version","type":"string"}},"required":["mariadb_version"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"2c259ddd8059b9bc65081e07bf20058f"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"ce13ff23-5888-11e8-8ee7-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/ce13ff23-5888-11e8-8ee7-d094660d31fb","uid":"903b5cb2-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690628","creationTimestamp":"2018-05-16T20:49:01Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"ce13ff23-5888-11e8-8ee7-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","USERNAME","PASSWORD","IMAGE_STREAM_NAMESPACE","INFINISPAN_CONNECTORS","CACHE_NAMES","DATAVIRT_CACHE_NAMES","CACHE_TYPE_DEFAULT","ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","MEMCACHED_CACHE","ADMIN_GROUP","HOTROD_AUTHENTICATION","CONTAINER_SECURITY_ROLE_MAPPER","CONTAINER_SECURITY_ROLES","REST_SECURITY_DOMAIN","JGROUPS_CLUSTER_PASSWORD","VOLUME_CAPACITY","DATAGRID_SPLIT","MEMORY_LIMIT"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"ADMIN_GROUP":{"default":"","description":"Comma
        delimited list of groups/roles for the Application Realm User","title":"ADMIN_GROUP","type":"string"},"APPLICATION_NAME":{"default":"datagrid-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure.  By default, a distributed-cache, with a mode
        of SYNC will be configured for each entry.","title":"Cache Names","type":"string"},"CACHE_TYPE_DEFAULT":{"default":"","description":"Default
        cache type for all caches. If empty then distributed will be the default","title":"Default
        Cache Type","type":"string"},"CONTAINER_SECURITY_ROLES":{"default":"","description":"Comma
        Delimited List of Container Roles","title":"CONTAINER_SECURITY_ROLES","type":"string"},"CONTAINER_SECURITY_ROLE_MAPPER":{"default":"","description":"Container
        Role Mapper","title":"CONTAINER_SECURITY_ROLE_MAPPER","type":"string"},"DATAGRID_SPLIT":{"default":"true","description":"Split
        the data directory for each node in a mesh, this is now the default behaviour.","title":"Split
        Data?","type":"string"},"DATAVIRT_CACHE_NAMES":{"default":"","description":"Comma-separated
        list of caches to configure for use by Red Hat JBoss Data Virtualization for
        materialization of views.  Three caches will be created for each named cache:
        \u003cname\u003e, \u003cname\u003e_staging and \u003cname\u003e_alias.","title":"Datavirt
        Cache Names","type":"string"},"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH":{"default":"","title":"Encryption
        Requires SSL Client Authentication?","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"HOTROD_AUTHENTICATION":{"default":"","description":"True/False
        for HotRod Authentication","title":"HOTROD_AUTHENTICATION","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"INFINISPAN_CONNECTORS":{"default":"hotrod,memcached,rest","description":"Comma-separated
        list of connector types that should be configured (defaults to ''memcached,hotrod,rest'')","title":"Infinispan
        Connectors","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"MEMCACHED_CACHE":{"default":"default","description":"The
        name of the cache to expose through this memcached connector (defaults to
        ''default'')","title":"Memcached Cache Name","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"PASSWORD":{"default":"","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)","title":"Password","type":"string"},"REST_SECURITY_DOMAIN":{"default":"","description":"The
        domain, declared in the security subsystem, that should be used to authenticate
        access to the REST endpoint","title":"REST Security Domain","type":"string"},"USERNAME":{"default":"","description":"User
        name for JDG user.","title":"Username","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by Datagrid for persisting metadata.","title":"Datagrid
        Volume Size","type":"string"}},"required":["APPLICATION_NAME","IMAGE_STREAM_NAMESPACE","VOLUME_CAPACITY"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"ce13ff23-5888-11e8-8ee7-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"ce3bb30f-5888-11e8-8ee7-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/ce3bb30f-5888-11e8-8ee7-d094660d31fb","uid":"8df77b50-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690602","creationTimestamp":"2018-05-16T20:48:57Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"ce3bb30f-5888-11e8-8ee7-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","HORNETQ_QUEUES","HORNETQ_TOPICS","HORNETQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT","VOLUME_CAPACITY","SPLIT_DATA"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"kitchensink","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HORNETQ_CLUSTER_PASSWORD":{"default":"","description":"HornetQ
        cluster admin password","title":"HornetQ Password","type":"string"},"HORNETQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"HORNETQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"6.4.x","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"SPLIT_DATA":{"default":"true","description":"Split
        the data directory for each node in a cluster.","title":"Split the data directory?","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by EAP for persisting data.","title":"EAP Volume Size","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE","VOLUME_CAPACITY"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"ce3bb30f-5888-11e8-8ee7-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"ce482052-5888-11e8-8ee7-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/ce482052-5888-11e8-8ee7-d094660d31fb","uid":"8eaea626-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690610","creationTimestamp":"2018-05-16T20:48:59Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"ce482052-5888-11e8-8ee7-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_QUEUES","MQ_TOPICS","MQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT","VOLUME_CAPACITY","SPLIT_DATA"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"kitchensink","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"7.0.0.GA","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"SPLIT_DATA":{"default":"true","description":"Split
        the data directory for each node in a cluster.","title":"Split the data directory?","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by EAP for persisting data.","title":"EAP Volume Size","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE","VOLUME_CAPACITY"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"ce482052-5888-11e8-8ee7-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}},{"metadata":{"name":"ce54c225-5888-11e8-8ee7-d094660d31fb","selfLink":"/apis/servicecatalog.k8s.io/v1beta1/clusterserviceplans/ce54c225-5888-11e8-8ee7-d094660d31fb","uid":"8c2dcdc0-594a-11e8-8fb9-0a580a800009","resourceVersion":"1690580","creationTimestamp":"2018-05-16T20:48:54Z"},"spec":{"clusterServiceBrokerName":"template-service-broker","externalName":"default","externalID":"ce54c225-5888-11e8-8ee7-d094660d31fb","description":"Default
        plan","bindable":true,"free":true,"externalMetadata":{"schemas":{"service_instance":{"create":{"openshift_form_definition":["APPLICATION_NAME","HOSTNAME_HTTP","SOURCE_REPOSITORY_URL","SOURCE_REPOSITORY_REF","CONTEXT_DIR","MQ_QUEUES","MQ_TOPICS","MQ_CLUSTER_PASSWORD","GITHUB_WEBHOOK_SECRET","GENERIC_WEBHOOK_SECRET","IMAGE_STREAM_NAMESPACE","JGROUPS_CLUSTER_PASSWORD","AUTO_DEPLOY_EXPLODED","MAVEN_MIRROR_URL","ARTIFACT_DIR","MEMORY_LIMIT","VOLUME_CAPACITY","SPLIT_DATA"]}}}},"instanceCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"properties":{"APPLICATION_NAME":{"default":"eap-app","description":"The
        name for the application.","title":"Application Name","type":"string"},"ARTIFACT_DIR":{"default":"","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied.","type":"string"},"AUTO_DEPLOY_EXPLODED":{"default":"false","description":"Controls
        whether exploded deployment content should be automatically deployed","title":"Deploy
        Exploded Archives","type":"string"},"CONTEXT_DIR":{"default":"kitchensink","description":"Path
        within Git project to build; empty for root project directory.","title":"Context
        Directory","type":"string"},"GENERIC_WEBHOOK_SECRET":{"default":"","description":"Generic
        build trigger secret","title":"Generic Webhook Secret","type":"string"},"GITHUB_WEBHOOK_SECRET":{"default":"","description":"GitHub
        trigger secret","title":"Github Webhook Secret","type":"string"},"HOSTNAME_HTTP":{"default":"","description":"Custom
        hostname for http service route.  Leave blank for default hostname, e.g.:
        \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e","title":"Custom
        http Route Hostname","type":"string"},"IMAGE_STREAM_NAMESPACE":{"default":"openshift","description":"Namespace
        in which the ImageStreams for Red Hat Middleware images are installed. These
        ImageStreams are normally installed in the openshift namespace. You should
        only need to modify this if you''ve installed the ImageStreams in a different
        namespace/project.","title":"ImageStream Namespace","type":"string"},"JGROUPS_CLUSTER_PASSWORD":{"default":"","description":"JGroups
        cluster password","title":"JGroups Cluster Password","type":"string"},"MAVEN_MIRROR_URL":{"default":"","description":"Maven
        mirror to use for S2I builds","title":"Maven mirror URL","type":"string"},"MEMORY_LIMIT":{"default":"1Gi","description":"Container
        memory limit","type":"string"},"MQ_CLUSTER_PASSWORD":{"default":"","description":"A-MQ
        cluster admin password","title":"A-MQ cluster password","type":"string"},"MQ_QUEUES":{"default":"","description":"Queue
        names","title":"Queues","type":"string"},"MQ_TOPICS":{"default":"","description":"Topic
        names","title":"Topics","type":"string"},"SOURCE_REPOSITORY_REF":{"default":"7.0.0.GA","description":"Git
        branch/tag reference","title":"Git Reference","type":"string"},"SOURCE_REPOSITORY_URL":{"default":"https://github.com/jboss-developer/jboss-eap-quickstarts","description":"Git
        source URI for application","title":"Git Repository URL","type":"string"},"SPLIT_DATA":{"default":"true","description":"Split
        the data directory for each node in a cluster.","title":"Split the data directory?","type":"string"},"VOLUME_CAPACITY":{"default":"1Gi","description":"Size
        of the volume used by EAP for persisting data.","title":"EAP Volume Size","type":"string"}},"required":["APPLICATION_NAME","SOURCE_REPOSITORY_URL","IMAGE_STREAM_NAMESPACE","VOLUME_CAPACITY"],"type":"object"},"serviceBindingCreateParameterSchema":{"$schema":"http://json-schema.org/draft-04/schema","additionalProperties":false,"type":"object"},"clusterServiceClassRef":{"name":"ce54c225-5888-11e8-8ee7-d094660d31fb"}},"status":{"removedFromBrokerCatalog":false}}]}

        '
    http_version:
  recorded_at: Thu, 23 Aug 2018 06:21:36 GMT
- request:
    method: get
    uri: https://host.example.com:8443/oapi/v1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.4.2p198
      Authorization:
      - Bearer theToken
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Thu, 23 Aug 2018 06:21:36 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"kind":"APIResourceList","groupVersion":"v1","resources":[{"name":"appliedclusterresourcequotas","singularName":"","namespaced":true,"kind":"AppliedClusterResourceQuota","verbs":["get","list"]},{"name":"buildconfigs","singularName":"","namespaced":true,"kind":"BuildConfig","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["bc"]},{"name":"buildconfigs/instantiate","singularName":"","namespaced":true,"kind":"BuildRequest","verbs":["create"]},{"name":"buildconfigs/instantiatebinary","singularName":"","namespaced":true,"kind":"BinaryBuildRequestOptions","verbs":[]},{"name":"buildconfigs/webhooks","singularName":"","namespaced":true,"kind":"Build","verbs":[]},{"name":"builds","singularName":"","namespaced":true,"kind":"Build","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"builds/clone","singularName":"","namespaced":true,"kind":"BuildRequest","verbs":["create"]},{"name":"builds/details","singularName":"","namespaced":true,"kind":"Build","verbs":["update"]},{"name":"builds/log","singularName":"","namespaced":true,"kind":"BuildLog","verbs":["get"]},{"name":"clusternetworks","singularName":"","namespaced":false,"kind":"ClusterNetwork","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"clusterresourcequotas","singularName":"","namespaced":false,"kind":"ClusterResourceQuota","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["clusterquota"]},{"name":"clusterresourcequotas/status","singularName":"","namespaced":false,"kind":"ClusterResourceQuota","verbs":["get","patch","update"]},{"name":"clusterrolebindings","singularName":"","namespaced":false,"kind":"ClusterRoleBinding","verbs":["create","delete","get","list","patch","update"]},{"name":"clusterroles","singularName":"","namespaced":false,"kind":"ClusterRole","verbs":["create","delete","get","list","patch","update"]},{"name":"deploymentconfigs","singularName":"","namespaced":true,"kind":"DeploymentConfig","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["dc"]},{"name":"deploymentconfigs/instantiate","singularName":"","namespaced":true,"kind":"DeploymentRequest","verbs":["create"]},{"name":"deploymentconfigs/log","singularName":"","namespaced":true,"kind":"DeploymentLog","verbs":["get"]},{"name":"deploymentconfigs/rollback","singularName":"","namespaced":true,"kind":"DeploymentConfigRollback","verbs":["create"]},{"name":"deploymentconfigs/scale","singularName":"","namespaced":true,"group":"extensions","version":"v1beta1","kind":"Scale","verbs":["get","patch","update"]},{"name":"deploymentconfigs/status","singularName":"","namespaced":true,"kind":"DeploymentConfig","verbs":["get","patch","update"]},{"name":"egressnetworkpolicies","singularName":"","namespaced":true,"kind":"EgressNetworkPolicy","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"groups","singularName":"","namespaced":false,"kind":"Group","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"hostsubnets","singularName":"","namespaced":false,"kind":"HostSubnet","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"identities","singularName":"","namespaced":false,"kind":"Identity","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"images","singularName":"","namespaced":false,"kind":"Image","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"imagesignatures","singularName":"","namespaced":false,"kind":"ImageSignature","verbs":["create","delete"]},{"name":"imagestreamimages","singularName":"","namespaced":true,"kind":"ImageStreamImage","verbs":["get"],"shortNames":["isimage"]},{"name":"imagestreamimports","singularName":"","namespaced":true,"kind":"ImageStreamImport","verbs":["create"]},{"name":"imagestreammappings","singularName":"","namespaced":true,"kind":"ImageStreamMapping","verbs":["create"]},{"name":"imagestreams","singularName":"","namespaced":true,"kind":"ImageStream","verbs":["create","delete","deletecollection","get","list","patch","update","watch"],"shortNames":["is"]},{"name":"imagestreams/secrets","singularName":"","namespaced":true,"kind":"SecretList","verbs":["get"]},{"name":"imagestreams/status","singularName":"","namespaced":true,"kind":"ImageStream","verbs":["get","patch","update"]},{"name":"imagestreamtags","singularName":"","namespaced":true,"kind":"ImageStreamTag","verbs":["create","delete","get","list","patch","update"],"shortNames":["istag"]},{"name":"localresourceaccessreviews","singularName":"","namespaced":true,"kind":"LocalResourceAccessReview","verbs":["create"]},{"name":"localsubjectaccessreviews","singularName":"","namespaced":true,"kind":"LocalSubjectAccessReview","verbs":["create"]},{"name":"netnamespaces","singularName":"","namespaced":false,"kind":"NetNamespace","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"oauthaccesstokens","singularName":"","namespaced":false,"kind":"OAuthAccessToken","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"oauthauthorizetokens","singularName":"","namespaced":false,"kind":"OAuthAuthorizeToken","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"oauthclientauthorizations","singularName":"","namespaced":false,"kind":"OAuthClientAuthorization","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"oauthclients","singularName":"","namespaced":false,"kind":"OAuthClient","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"podsecuritypolicyreviews","singularName":"","namespaced":true,"kind":"PodSecurityPolicyReview","verbs":["create"]},{"name":"podsecuritypolicyselfsubjectreviews","singularName":"","namespaced":true,"kind":"PodSecurityPolicySelfSubjectReview","verbs":["create"]},{"name":"podsecuritypolicysubjectreviews","singularName":"","namespaced":true,"kind":"PodSecurityPolicySubjectReview","verbs":["create"]},{"name":"processedtemplates","singularName":"","namespaced":true,"kind":"Template","verbs":["create"]},{"name":"projectrequests","singularName":"","namespaced":false,"kind":"ProjectRequest","verbs":["create","list"]},{"name":"projects","singularName":"","namespaced":false,"kind":"Project","verbs":["create","delete","get","list","patch","update","watch"]},{"name":"resourceaccessreviews","singularName":"","namespaced":true,"kind":"ResourceAccessReview","verbs":["create"]},{"name":"rolebindingrestrictions","singularName":"","namespaced":true,"kind":"RoleBindingRestriction","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"rolebindings","singularName":"","namespaced":true,"kind":"RoleBinding","verbs":["create","delete","get","list","patch","update"]},{"name":"roles","singularName":"","namespaced":true,"kind":"Role","verbs":["create","delete","get","list","patch","update"]},{"name":"routes","singularName":"","namespaced":true,"kind":"Route","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"routes/status","singularName":"","namespaced":true,"kind":"Route","verbs":["get","patch","update"]},{"name":"selfsubjectrulesreviews","singularName":"","namespaced":true,"kind":"SelfSubjectRulesReview","verbs":["create"]},{"name":"subjectaccessreviews","singularName":"","namespaced":true,"kind":"SubjectAccessReview","verbs":["create"]},{"name":"subjectrulesreviews","singularName":"","namespaced":true,"kind":"SubjectRulesReview","verbs":["create"]},{"name":"templates","singularName":"","namespaced":true,"kind":"Template","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]},{"name":"useridentitymappings","singularName":"","namespaced":false,"kind":"UserIdentityMapping","verbs":["create","delete","get","patch","update"]},{"name":"users","singularName":"","namespaced":false,"kind":"User","verbs":["create","delete","deletecollection","get","list","patch","update","watch"]}]}

        '
    http_version:
  recorded_at: Thu, 23 Aug 2018 06:21:38 GMT
- request:
    method: get
    uri: https://host.example.com:8443/oapi/v1/templates
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      Accept-Encoding:
      - gzip, deflate
      User-Agent:
      - rest-client/2.0.2 (linux-gnu x86_64) ruby/2.4.2p198
      Authorization:
      - Bearer theToken
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-store
      Content-Type:
      - application/json
      Date:
      - Thu, 23 Aug 2018 06:21:37 GMT
      Transfer-Encoding:
      - chunked
    body:
      encoding: UTF-8
      string: '{"kind":"TemplateList","apiVersion":"v1","metadata":{"selfLink":"/oapi/v1/templates","resourceVersion":"36309858"},"items":[{"metadata":{"name":"cloudforms","namespace":"cfme","selfLink":"/oapi/v1/namespaces/cfme/templates/cloudforms","uid":"99e86aec-853d-11e8-ba7e-d094660d31fb","resourceVersion":"21559585","creationTimestamp":"2018-07-11T19:07:05Z","annotations":{"description":"CloudForms
        appliance with persistent storage","iconClass":"icon-rails","tags":"instant-app,cloudforms,cfme"}},"objects":[{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"cfme-orchestrator"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"cfme-anyuid"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"cfme-privileged"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"cfme-httpd"}},{"apiVersion":"v1","kind":"RoleBinding","metadata":{"name":"view"},"roleRef":{"name":"view"},"subjects":[{"kind":"ServiceAccount","name":"cfme-orchestrator"}]},{"apiVersion":"v1","kind":"RoleBinding","metadata":{"name":"edit"},"roleRef":{"name":"edit"},"subjects":[{"kind":"ServiceAccount","name":"cfme-orchestrator"}]},{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}-secrets"},"stringData":{"admin-password":"${APPLICATION_ADMIN_PASSWORD}","database-url":"postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_SERVICE_NAME}/${DATABASE_NAME}?encoding=utf8\u0026pool=5\u0026wait_timeout=5","pg-password":"${DATABASE_PASSWORD}","v2-key":"${V2_KEY}"}},{"apiVersion":"v1","data":{"01_miq_overrides.conf":"#------------------------------------------------------------------------------\n#
        CONNECTIONS AND AUTHENTICATION\n#------------------------------------------------------------------------------\n\ntcp_keepalives_count
        = 9\ntcp_keepalives_idle = 3\ntcp_keepalives_interval = 75\n\n#------------------------------------------------------------------------------\n#
        RESOURCE USAGE (except WAL)\n#------------------------------------------------------------------------------\n\nshared_preload_libraries
        = ''pglogical,repmgr_funcs''\nmax_worker_processes = 10\n\n#------------------------------------------------------------------------------\n#
        WRITE AHEAD LOG\n#------------------------------------------------------------------------------\n\nwal_level
        = ''logical''\nwal_log_hints = on\nwal_buffers = 16MB\ncheckpoint_completion_target
        = 0.9\n\n#------------------------------------------------------------------------------\n#
        REPLICATION\n#------------------------------------------------------------------------------\n\nmax_wal_senders
        = 10\nwal_sender_timeout = 0\nmax_replication_slots = 10\nhot_standby = on\n\n#------------------------------------------------------------------------------\n#
        ERROR REPORTING AND LOGGING\n#------------------------------------------------------------------------------\n\nlog_filename
        = ''postgresql.log''\nlog_rotation_age = 0\nlog_min_duration_statement = 5000\nlog_connections
        = on\nlog_disconnections = on\nlog_line_prefix = ''%t:%r:%c:%u@%d:[%p]:''\nlog_lock_waits
        = on\n\n#------------------------------------------------------------------------------\n#
        AUTOVACUUM PARAMETERS\n#------------------------------------------------------------------------------\n\nlog_autovacuum_min_duration
        = 0\nautovacuum_naptime = 5min\nautovacuum_vacuum_threshold = 500\nautovacuum_analyze_threshold
        = 500\nautovacuum_vacuum_scale_factor = 0.05\n\n#------------------------------------------------------------------------------\n#
        LOCK MANAGEMENT\n#------------------------------------------------------------------------------\n\ndeadlock_timeout
        = 5s\n\n#------------------------------------------------------------------------------\n#
        VERSION/PLATFORM COMPATIBILITY\n#------------------------------------------------------------------------------\n\nescape_string_warning
        = off\nstandard_conforming_strings = off\n"},"kind":"ConfigMap","metadata":{"name":"${DATABASE_SERVICE_NAME}-configs"}},{"apiVersion":"v1","data":{"application.conf":"#
        Timeout: The number of seconds before receives and sends time out.\nTimeout
        120\n\nRewriteEngine On\nOptions SymLinksIfOwnerMatch\n\n\u003cVirtualHost
        *:80\u003e\n  KeepAlive on\n  # Without ServerName mod_auth_mellon compares
        against http:// and not https:// from the IdP\n  ServerName https://%{REQUEST_HOST}\n\n  ProxyPreserveHost
        on\n\n  RewriteCond %{REQUEST_URI}     ^/ws        [NC]\n  RewriteCond %{HTTP:UPGRADE}    ^websocket$
        [NC]\n  RewriteCond %{HTTP:CONNECTION} ^Upgrade$   [NC]\n  RewriteRule .*
        ws://${NAME}%{REQUEST_URI}  [P,QSA,L]\n\n  # For httpd, some ErrorDocuments
        must by served by the httpd pod\n  RewriteCond %{REQUEST_URI} !^/proxy_pages\n\n  #
        For SAML /saml2 is only served by mod_auth_mellon in the httpd pod\n  RewriteCond
        %{REQUEST_URI} !^/saml2\n\n  # For OpenID-Connect /openid-connect is only
        served by mod_auth_openidc\n  RewriteCond %{REQUEST_URI} !^/openid-connect\n\n  RewriteRule
        ^/ http://${NAME}%{REQUEST_URI} [P,QSA,L]\n  ProxyPassReverse / http://${NAME}/\n\n  #
        Ensures httpd stdout/stderr are seen by ''docker logs''.\n  ErrorLog  \"|
        /usr/bin/tee /proc/1/fd/2 /var/log/httpd/error_log\"\n  CustomLog \"| /usr/bin/tee
        /proc/1/fd/1 /var/log/httpd/access_log\" common\n\u003c/VirtualHost\u003e\n","authentication.conf":"#
        Load appropriate authentication configuration files\n#\nInclude \"conf.d/configuration-${HTTPD_AUTH_TYPE}-auth\"\n","configuration-active-directory-auth":"Include
        \"conf.d/external-auth-load-modules-conf\"\n\n\u003cLocation /dashboard/kerberos_authenticate\u003e\n  AuthType                   Kerberos\n  AuthName                   \"Kerberos
        Login\"\n  KrbMethodNegotiate         On\n  KrbMethodK5Passwd          Off\n  KrbAuthRealms              ${HTTPD_AUTH_KERBEROS_REALMS}\n  Krb5KeyTab                 /etc/krb5.keytab\n  KrbServiceName             Any\n  Require                    pam-account
        httpd-auth\n\n  ErrorDocument 401 /proxy_pages/invalid_sso_credentials.js\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-login-form-conf\"\nInclude \"conf.d/external-auth-application-api-conf\"\nInclude
        \"conf.d/external-auth-lookup-user-details-conf\"\nInclude \"conf.d/external-auth-remote-user-conf\"\n","configuration-external-auth":"Include
        \"conf.d/external-auth-load-modules-conf\"\n\n\u003cLocation /dashboard/kerberos_authenticate\u003e\n  AuthType                   Kerberos\n  AuthName                   \"Kerberos
        Login\"\n  KrbMethodNegotiate         On\n  KrbMethodK5Passwd          Off\n  KrbAuthRealms              ${HTTPD_AUTH_KERBEROS_REALMS}\n  Krb5KeyTab                 /etc/http.keytab\n  KrbServiceName             Any\n  Require                    pam-account
        httpd-auth\n\n  ErrorDocument 401 /proxy_pages/invalid_sso_credentials.js\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-login-form-conf\"\nInclude \"conf.d/external-auth-application-api-conf\"\nInclude
        \"conf.d/external-auth-lookup-user-details-conf\"\nInclude \"conf.d/external-auth-remote-user-conf\"\n","configuration-internal-auth":"#
        Internal authentication\n#\n","configuration-openid-connect-auth":"LoadModule
        auth_openidc_module modules/mod_auth_openidc.so\n\nOIDCProviderMetadataURL      ${HTTPD_AUTH_OIDC_PROVIDER_METADATA_URL}\nOIDCClientID                 ${HTTPD_AUTH_OIDC_CLIENT_ID}\nOIDCClientSecret             ${HTTPD_AUTH_OIDC_CLIENT_SECRET}\n\nOIDCRedirectURI              \"https://${APPLICATION_DOMAIN}/oidc_login/redirect_uri\"\nOIDCOAuthRemoteUserClaim     username\n\nOIDCCryptoPassphrase         sp-secret\n\n\u003cLocation
        /oidc_login\u003e\n  AuthType                   openid-connect\n  Require                    valid-user\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-openid-connect-remote-user-conf\"\n","configuration-saml-auth":"LoadModule
        auth_mellon_module modules/mod_auth_mellon.so\n\n\u003cLocation /\u003e\n  MellonEnable               \"info\"\n\n  MellonIdPMetadataFile      \"/etc/httpd/saml2/idp-metadata.xml\"\n\n  MellonSPPrivateKeyFile     \"/etc/httpd/saml2/sp-key.key\"\n  MellonSPCertFile           \"/etc/httpd/saml2/sp-cert.cert\"\n  MellonSPMetadataFile       \"/etc/httpd/saml2/sp-metadata.xml\"\n\n  MellonVariable             \"sp-cookie\"\n  MellonSecureCookie         On\n  MellonCookiePath           \"/\"\n\n  MellonIdP                  \"IDP\"\n\n  MellonEndpointPath         \"/saml2\"\n\n  MellonUser                 username\n  MellonMergeEnvVars         On\n\n  MellonSetEnvNoPrefix       \"REMOTE_USER\"            username\n  MellonSetEnvNoPrefix       \"REMOTE_USER_EMAIL\"      email\n  MellonSetEnvNoPrefix       \"REMOTE_USER_FIRSTNAME\"  firstname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_LASTNAME\"   lastname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_FULLNAME\"   fullname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_GROUPS\"     groups\n\u003c/Location\u003e\n\n\u003cLocation
        /saml_login\u003e\n  AuthType                   \"Mellon\"\n  MellonEnable               \"auth\"\n  Require                    valid-user\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-remote-user-conf\"\n","external-auth-application-api-conf":"\u003cLocationMatch
        ^/api\u003e\n  SetEnvIf Authorization     ''^Basic +YWRtaW46'' let_admin_in\n  SetEnvIf
        X-Auth-Token      ''^.+$''             let_api_token_in\n  SetEnvIf X-MIQ-Token       ''^.+$''             let_sys_token_in\n\n  AuthType                   Basic\n  AuthName                   \"External
        Authentication (httpd) for API\"\n  AuthBasicProvider          PAM\n\n  AuthPAMService             httpd-auth\n  Require                    valid-user\n  Order                      Allow,Deny\n  Allow
        from                 env=let_admin_in\n  Allow from                 env=let_api_token_in\n  Allow
        from                 env=let_sys_token_in\n  Satisfy                    Any\n\u003c/LocationMatch\u003e\n","external-auth-load-modules-conf":"LoadModule
        authnz_pam_module            modules/mod_authnz_pam.so\nLoadModule intercept_form_submit_module
        modules/mod_intercept_form_submit.so\nLoadModule lookup_identity_module       modules/mod_lookup_identity.so\nLoadModule
        auth_kerb_module             modules/mod_auth_kerb.so\n","external-auth-login-form-conf":"\u003cLocation
        /dashboard/external_authenticate\u003e\n  InterceptFormPAMService    httpd-auth\n  InterceptFormLogin         user_name\n  InterceptFormPassword      user_password\n  InterceptFormLoginSkip     admin\n  InterceptFormClearRemoteUserForSkipped
        on\n\u003c/Location\u003e\n","external-auth-lookup-user-details-conf":"\u003cLocationMatch
        ^/dashboard/external_authenticate$|^/dashboard/kerberos_authenticate$|^/api\u003e\n  LookupUserAttr
        mail        REMOTE_USER_EMAIL\n  LookupUserAttr givenname   REMOTE_USER_FIRSTNAME\n  LookupUserAttr
        sn          REMOTE_USER_LASTNAME\n  LookupUserAttr displayname REMOTE_USER_FULLNAME\n  LookupUserAttr
        domainname  REMOTE_USER_DOMAIN\n\n  LookupUserGroups           REMOTE_USER_GROUPS
        \":\"\n  LookupDbusTimeout          5000\n\u003c/LocationMatch\u003e\n","external-auth-openid-connect-remote-user-conf":"RequestHeader
        unset X_REMOTE_USER\n\nRequestHeader set X_REMOTE_USER           %{OIDC_CLAIM_PREFERRED_USERNAME}e
        env=OIDC_CLAIM_PREFERRED_USERNAME\nRequestHeader set X_EXTERNAL_AUTH_ERROR   %{EXTERNAL_AUTH_ERROR}e           env=EXTERNAL_AUTH_ERROR\nRequestHeader
        set X_REMOTE_USER_EMAIL     %{OIDC_CLAIM_EMAIL}e              env=OIDC_CLAIM_EMAIL\nRequestHeader
        set X_REMOTE_USER_FIRSTNAME %{OIDC_CLAIM_GIVEN_NAME}e         env=OIDC_CLAIM_GIVEN_NAME\nRequestHeader
        set X_REMOTE_USER_LASTNAME  %{OIDC_CLAIM_FAMILY_NAME}e        env=OIDC_CLAIM_FAMILY_NAME\nRequestHeader
        set X_REMOTE_USER_FULLNAME  %{OIDC_CLAIM_NAME}e               env=OIDC_CLAIM_NAME\nRequestHeader
        set X_REMOTE_USER_GROUPS    %{OIDC_CLAIM_GROUPS}e             env=OIDC_CLAIM_GROUPS\nRequestHeader
        set X_REMOTE_USER_DOMAIN    %{OIDC_CLAIM_DOMAIN}e             env=OIDC_CLAIM_DOMAIN\n","external-auth-remote-user-conf":"RequestHeader
        unset X_REMOTE_USER\n\nRequestHeader set X_REMOTE_USER           %{REMOTE_USER}e           env=REMOTE_USER\nRequestHeader
        set X_EXTERNAL_AUTH_ERROR   %{EXTERNAL_AUTH_ERROR}e   env=EXTERNAL_AUTH_ERROR\nRequestHeader
        set X_REMOTE_USER_EMAIL     %{REMOTE_USER_EMAIL}e     env=REMOTE_USER_EMAIL\nRequestHeader
        set X_REMOTE_USER_FIRSTNAME %{REMOTE_USER_FIRSTNAME}e env=REMOTE_USER_FIRSTNAME\nRequestHeader
        set X_REMOTE_USER_LASTNAME  %{REMOTE_USER_LASTNAME}e  env=REMOTE_USER_LASTNAME\nRequestHeader
        set X_REMOTE_USER_FULLNAME  %{REMOTE_USER_FULLNAME}e  env=REMOTE_USER_FULLNAME\nRequestHeader
        set X_REMOTE_USER_GROUPS    %{REMOTE_USER_GROUPS}e    env=REMOTE_USER_GROUPS\nRequestHeader
        set X_REMOTE_USER_DOMAIN    %{REMOTE_USER_DOMAIN}e    env=REMOTE_USER_DOMAIN\n"},"kind":"ConfigMap","metadata":{"name":"${HTTPD_SERVICE_NAME}-configs"}},{"apiVersion":"v1","data":{"auth-configuration.conf":"#
        External Authentication Configuration File\n#\n# For details on usage please
        see https://github.com/ManageIQ/manageiq-pods/blob/master/README.md#configuring-external-authentication\n","auth-kerberos-realms":"undefined","auth-oidc-client-id":"undefined","auth-oidc-client-secret":"undefined","auth-oidc-provider-metadata-url":"undefined","auth-type":"internal"},"kind":"ConfigMap","metadata":{"name":"${HTTPD_SERVICE_NAME}-auth-configs"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances CloudForms pods"},"name":"${NAME}"},"spec":{"clusterIP":"None","ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":80}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${HTTPD_SERVICE_NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","port":{"targetPort":"http"},"tls":{"insecureEdgeTerminationPolicy":"Redirect","termination":"edge"},"to":{"kind":"Service","name":"${HTTPD_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${NAME}-${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${DATABASE_VOLUME_CAPACITY}"}}}},{"apiVersion":"apps/v1beta1","kind":"StatefulSet","metadata":{"annotations":{"description":"Defines
        how to deploy the CloudForms appliance"},"name":"${NAME}"},"spec":{"replicas":"${APPLICATION_REPLICA_COUNT}","serviceName":"${NAME}","template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"ALLOW_INSECURE_SESSION","value":"true"},{"name":"APPLICATION_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"admin-password","name":"${NAME}-secrets"}}},{"name":"DATABASE_REGION","value":"${DATABASE_REGION}"},{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"key":"database-url","name":"${NAME}-secrets"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"key":"v2-key","name":"${NAME}-secrets"}}}],"image":"${FRONTEND_APPLICATION_IMG_NAME}:${FRONTEND_APPLICATION_IMG_TAG}","lifecycle":{"preStop":{"exec":{"command":["/opt/rh/cfme-container-scripts/sync-pv-data"]}}},"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3},"name":"cloudforms","ports":[{"containerPort":80,"protocol":"TCP"}],"readinessProbe":{"initialDelaySeconds":200,"tcpSocket":{"port":80},"timeoutSeconds":3},"resources":{"limits":{"memory":"${APPLICATION_MEM_LIMIT}"},"requests":{"cpu":"${APPLICATION_CPU_REQ}","memory":"${APPLICATION_MEM_REQ}"}},"volumeMounts":[{"mountPath":"/persistent","name":"${NAME}-server"}]}],"serviceAccount":"cfme-orchestrator","serviceAccountName":"cfme-orchestrator","terminationGracePeriodSeconds":90}},"volumeClaimTemplates":[{"metadata":{"annotations":null,"name":"${NAME}-server"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${APPLICATION_VOLUME_CAPACITY}"}}}}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Headless
        service for CloudForms backend pods"},"name":"${NAME}-backend"},"spec":{"clusterIP":"None","selector":{"name":"${NAME}-backend"}}},{"apiVersion":"apps/v1beta1","kind":"StatefulSet","metadata":{"annotations":{"description":"Defines
        how to deploy the CloudForms appliance"},"name":"${NAME}-backend"},"spec":{"replicas":0,"serviceName":"${NAME}-backend","template":{"metadata":{"labels":{"name":"${NAME}-backend"},"name":"${NAME}-backend"},"spec":{"containers":[{"env":[{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"key":"database-url","name":"${NAME}-secrets"}}},{"name":"MIQ_SERVER_DEFAULT_ROLES","value":"database_operations,event,reporting,scheduler,smartstate,ems_operations,ems_inventory,automate"},{"name":"FRONTEND_SERVICE_NAME","value":"${NAME}"},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"key":"v2-key","name":"${NAME}-secrets"}}}],"image":"${BACKEND_APPLICATION_IMG_NAME}:${BACKEND_APPLICATION_IMG_TAG}","lifecycle":{"preStop":{"exec":{"command":["/opt/rh/cfme-container-scripts/sync-pv-data"]}}},"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3},"name":"cloudforms","resources":{"limits":{"memory":"${APPLICATION_MEM_LIMIT}"},"requests":{"cpu":"${APPLICATION_CPU_REQ}","memory":"${APPLICATION_MEM_REQ}"}},"volumeMounts":[{"mountPath":"/persistent","name":"${NAME}-server"}]}],"serviceAccount":"cfme-orchestrator","serviceAccountName":"cfme-orchestrator","terminationGracePeriodSeconds":90}},"volumeClaimTemplates":[{"metadata":{"annotations":null,"name":"${NAME}-server"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${APPLICATION_VOLUME_CAPACITY}"}}}}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the memcached server"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"ports":[{"name":"memcached","port":11211,"targetPort":11211}],"selector":{"name":"${MEMCACHED_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy memcached"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${MEMCACHED_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${MEMCACHED_SERVICE_NAME}"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"MEMCACHED_MAX_MEMORY","value":"${MEMCACHED_MAX_MEMORY}"},{"name":"MEMCACHED_MAX_CONNECTIONS","value":"${MEMCACHED_MAX_CONNECTIONS}"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","value":"${MEMCACHED_SLAB_PAGE_SIZE}"}],"image":"${MEMCACHED_IMG_NAME}:${MEMCACHED_IMG_TAG}","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":11211},"timeoutSeconds":1},"name":"memcached","ports":[{"containerPort":11211}],"readinessProbe":{"initialDelaySeconds":5,"tcpSocket":{"port":11211},"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMCACHED_MEM_LIMIT}"},"requests":{"cpu":"${MEMCACHED_CPU_REQ}","memory":"${MEMCACHED_MEM_REQ}"}},"volumeMounts":[]}],"volumes":[]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","port":5432,"targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DATABASE_USER}"},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"pg-password","name":"${NAME}-secrets"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"${POSTGRESQL_IMG_NAME}:${POSTGRESQL_IMG_TAG}","livenessProbe":{"initialDelaySeconds":60,"tcpSocket":{"port":5432},"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":15,"timeoutSeconds":1},"resources":{"limits":{"memory":"${POSTGRESQL_MEM_LIMIT}"},"requests":{"cpu":"${POSTGRESQL_CPU_REQ}","memory":"${POSTGRESQL_MEM_REQ}"}},"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"cfme-pgdb-volume"},{"mountPath":"/opt/app-root/src/postgresql-cfg/","name":"cfme-pg-configs"}]}],"volumes":[{"name":"cfme-pgdb-volume","persistentVolumeClaim":{"claimName":"${NAME}-${DATABASE_SERVICE_NAME}"}},{"configMap":{"name":"${DATABASE_SERVICE_NAME}-configs"},"name":"cfme-pg-configs"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the httpd server"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"ports":[{"name":"http","port":80,"targetPort":80}],"selector":{"name":"httpd"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the httpd server dbus api"},"name":"${HTTPD_DBUS_API_SERVICE_NAME}"},"spec":{"ports":[{"name":"http-dbus-api","port":8080,"targetPort":8080}],"selector":{"name":"httpd"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy httpd"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${HTTPD_SERVICE_NAME}"},"strategy":{"recreateParams":{"timeoutSeconds":1200},"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${HTTPD_SERVICE_NAME}"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"APPLICATION_DOMAIN","value":"${APPLICATION_DOMAIN}"},{"name":"HTTPD_AUTH_TYPE","valueFrom":{"configMapKeyRef":{"key":"auth-type","name":"${HTTPD_SERVICE_NAME}-auth-configs"}}},{"name":"HTTPD_AUTH_KERBEROS_REALMS","valueFrom":{"configMapKeyRef":{"key":"auth-kerberos-realms","name":"${HTTPD_SERVICE_NAME}-auth-configs"}}},{"name":"HTTPD_AUTH_OIDC_PROVIDER_METADATA_URL","valueFrom":{"configMapKeyRef":{"key":"auth-oidc-provider-metadata-url","name":"${HTTPD_SERVICE_NAME}-auth-configs","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_ID","valueFrom":{"configMapKeyRef":{"key":"auth-oidc-client-id","name":"${HTTPD_SERVICE_NAME}-auth-configs","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_SECRET","valueFrom":{"configMapKeyRef":{"key":"auth-oidc-client-secret","name":"${HTTPD_SERVICE_NAME}-auth-configs","optional":true}}}],"image":"${HTTPD_IMG_NAME}:${HTTPD_IMG_TAG}","lifecycle":{"postStart":{"exec":{"command":["/usr/bin/save-container-environment"]}}},"livenessProbe":{"exec":{"command":["pidof","httpd"]},"initialDelaySeconds":15,"timeoutSeconds":3},"name":"httpd","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":8080,"protocol":"TCP"}],"readinessProbe":{"initialDelaySeconds":10,"tcpSocket":{"port":80},"timeoutSeconds":3},"resources":{"limits":{"memory":"${HTTPD_MEM_LIMIT}"},"requests":{"cpu":"${HTTPD_CPU_REQ}","memory":"${HTTPD_MEM_REQ}"}},"volumeMounts":[{"mountPath":"${HTTPD_CONFIG_DIR}","name":"httpd-config"},{"mountPath":"${HTTPD_AUTH_CONFIG_DIR}","name":"httpd-auth-config"}]}],"serviceAccount":"cfme-httpd","serviceAccountName":"cfme-httpd","volumes":[{"configMap":{"name":"${HTTPD_SERVICE_NAME}-configs"},"name":"httpd-config"},{"configMap":{"name":"${HTTPD_SERVICE_NAME}-auth-configs"},"name":"httpd-auth-config"}]}},"triggers":[{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"cloudforms","required":true},{"name":"V2_KEY","displayName":"CloudForms
        Encryption Key","description":"Encryption Key for CloudForms Passwords","generate":"expression","from":"[a-zA-Z0-9]{43}","required":true},{"name":"DATABASE_SERVICE_NAME","displayName":"PostgreSQL
        Service Name","description":"The name of the OpenShift Service exposed for
        the PostgreSQL container.","value":"postgresql","required":true},{"name":"DATABASE_USER","displayName":"PostgreSQL
        User","description":"PostgreSQL user that will access the database.","value":"root","required":true},{"name":"DATABASE_PASSWORD","displayName":"PostgreSQL
        Password","description":"Password for the PostgreSQL user.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DATABASE_NAME","displayName":"PostgreSQL
        Database Name","description":"Name of the PostgreSQL database accessed.","value":"vmdb_production","required":true},{"name":"DATABASE_REGION","displayName":"Application
        Database Region","description":"Database region that will be used for application.","value":"0","required":true},{"name":"APPLICATION_ADMIN_PASSWORD","displayName":"Application
        Admin Password","description":"Admin password that will be set on the application.","value":"smartvm","required":true},{"name":"MEMCACHED_SERVICE_NAME","displayName":"Memcached
        Service Name","description":"The name of the OpenShift Service exposed for
        the Memcached container.","value":"memcached","required":true},{"name":"MEMCACHED_MAX_MEMORY","displayName":"Memcached
        Max Memory","description":"Memcached maximum memory for memcached object storage
        in MB.","value":"64"},{"name":"MEMCACHED_MAX_CONNECTIONS","displayName":"Memcached
        Max Connections","description":"Memcached maximum number of connections allowed.","value":"1024"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","displayName":"Memcached
        Slab Page Size","description":"Memcached size of each slab page.","value":"1m"},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Max Connections","description":"PostgreSQL maximum number of database connections
        allowed.","value":"1000"},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffer Amount","description":"Amount of memory dedicated for PostgreSQL
        shared memory buffers.","value":"1GB"},{"name":"APPLICATION_CPU_REQ","displayName":"Application
        Min CPU Requested","description":"Minimum amount of CPU time the Application
        container will need (expressed in millicores).","value":"1000m","required":true},{"name":"POSTGRESQL_CPU_REQ","displayName":"PostgreSQL
        Min CPU Requested","description":"Minimum amount of CPU time the PostgreSQL
        container will need (expressed in millicores).","value":"500m","required":true},{"name":"MEMCACHED_CPU_REQ","displayName":"Memcached
        Min CPU Requested","description":"Minimum amount of CPU time the Memcached
        container will need (expressed in millicores).","value":"200m","required":true},{"name":"APPLICATION_MEM_REQ","displayName":"Application
        Min RAM Requested","description":"Minimum amount of memory the Application
        container will need.","value":"6144Mi","required":true},{"name":"POSTGRESQL_MEM_REQ","displayName":"PostgreSQL
        Min RAM Requested","description":"Minimum amount of memory the PostgreSQL
        container will need.","value":"4Gi","required":true},{"name":"MEMCACHED_MEM_REQ","displayName":"Memcached
        Min RAM Requested","description":"Minimum amount of memory the Memcached container
        will need.","value":"64Mi","required":true},{"name":"APPLICATION_MEM_LIMIT","displayName":"Application
        Max RAM Limit","description":"Maximum amount of memory the Application container
        can consume.","value":"16384Mi","required":true},{"name":"POSTGRESQL_MEM_LIMIT","displayName":"PostgreSQL
        Max RAM Limit","description":"Maximum amount of memory the PostgreSQL container
        can consume.","value":"8Gi","required":true},{"name":"MEMCACHED_MEM_LIMIT","displayName":"Memcached
        Max RAM Limit","description":"Maximum amount of memory the Memcached container
        can consume.","value":"256Mi","required":true},{"name":"POSTGRESQL_IMG_NAME","displayName":"PostgreSQL
        Image Name","description":"This is the PostgreSQL image name requested to
        deploy.","value":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-postgresql"},{"name":"POSTGRESQL_IMG_TAG","displayName":"PostgreSQL
        Image Tag","description":"This is the PostgreSQL image tag/version requested
        to deploy.","value":"latest"},{"name":"MEMCACHED_IMG_NAME","displayName":"Memcached
        Image Name","description":"This is the Memcached image name requested to deploy.","value":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-memcached"},{"name":"MEMCACHED_IMG_TAG","displayName":"Memcached
        Image Tag","description":"This is the Memcached image tag/version requested
        to deploy.","value":"latest"},{"name":"FRONTEND_APPLICATION_IMG_NAME","displayName":"Frontend
        Application Image Name","description":"This is the Frontend Application image
        name requested to deploy.","value":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-app-ui"},{"name":"BACKEND_APPLICATION_IMG_NAME","displayName":"Backend
        Application Image Name","description":"This is the Backend Application image
        name requested to deploy.","value":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-app"},{"name":"FRONTEND_APPLICATION_IMG_TAG","displayName":"Front
        end Application Image Tag","description":"This is the CloudForms Frontend
        Application image tag/version requested to deploy.","value":"latest"},{"name":"BACKEND_APPLICATION_IMG_TAG","displayName":"Back
        end Application Image Tag","description":"This is the CloudForms Backend Application
        image tag/version requested to deploy.","value":"latest"},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the application
        service, if left blank a value will be defaulted."},{"name":"APPLICATION_REPLICA_COUNT","displayName":"Application
        Replica Count","description":"This is the number of Application replicas requested
        to deploy.","value":"1"},{"name":"APPLICATION_VOLUME_CAPACITY","displayName":"Application
        Volume Capacity","description":"Volume space available for application data.","value":"5Gi","required":true},{"name":"DATABASE_VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Volume space available for database.","value":"15Gi","required":true},{"name":"HTTPD_SERVICE_NAME","displayName":"Apache
        httpd Service Name","description":"The name of the OpenShift Service exposed
        for the httpd container.","value":"httpd","required":true},{"name":"HTTPD_DBUS_API_SERVICE_NAME","displayName":"Apache
        httpd DBus API Service Name","description":"The name of httpd dbus api service.","value":"httpd-dbus-api","required":true},{"name":"HTTPD_IMG_NAME","displayName":"Apache
        httpd Image Name","description":"This is the httpd image name requested to
        deploy.","value":"brew-pulp-docker01.web.prod.ext.phx2.redhat.com:8888/cloudforms47/cfme-openshift-httpd"},{"name":"HTTPD_IMG_TAG","displayName":"Apache
        httpd Image Tag","description":"This is the httpd image tag/version requested
        to deploy.","value":"latest"},{"name":"HTTPD_CONFIG_DIR","displayName":"Apache
        Configuration Directory","description":"Directory used to store the Apache
        configuration files.","value":"/etc/httpd/conf.d"},{"name":"HTTPD_AUTH_CONFIG_DIR","displayName":"External
        Authentication Configuration Directory","description":"Directory used to store
        the external authentication configuration files.","value":"/etc/httpd/auth-conf.d"},{"name":"HTTPD_CPU_REQ","displayName":"Apache
        httpd Min CPU Requested","description":"Minimum amount of CPU time the httpd
        container will need (expressed in millicores).","value":"500m","required":true},{"name":"HTTPD_MEM_REQ","displayName":"Apache
        httpd Min RAM Requested","description":"Minimum amount of memory the httpd
        container will need.","value":"512Mi","required":true},{"name":"HTTPD_MEM_LIMIT","displayName":"Apache
        httpd Max RAM Limit","description":"Maximum amount of memory the httpd container
        can consume.","value":"8192Mi","required":true}],"labels":{"template":"cloudforms"}},{"metadata":{"name":"elastic-log-ripper","namespace":"customer-logging","selfLink":"/oapi/v1/namespaces/customer-logging/templates/elastic-log-ripper","uid":"8b416a0b-5f91-11e8-ba7e-d094660d31fb","resourceVersion":"5290078","creationTimestamp":"2018-05-24T20:32:14Z","annotations":{"description":"Tooling
        to rip interesting information out of logs and store it in elasticsearch","iconClass":"icon-rails","tags":"instant-app,elastic-log-ripper"}},"objects":[{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"app-data"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"100Gi"}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the redis server"},"name":"redis"},"spec":{"ports":[{"name":"redis","port":6379,"targetPort":6379}],"selector":{"name":"redis"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the sinatra server"},"name":"sinatra"},"spec":{"ports":[{"name":"sinatra","port":4567,"targetPort":4567}],"selector":{"name":"sinatra"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the sinatra server"},"name":"sidekiq-ui"},"spec":{"ports":[{"name":"sidekiq-ui","port":9292,"targetPort":9292}],"selector":{"name":"sidekiq-ui"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Headless
        service for sidekiq-worker pods"},"name":"sidekiq-worker"},"spec":{"clusterIP":"None","selector":{"name":"sidekiq-worker"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy sinatra"},"name":"sinatra"},"spec":{"replicas":1,"selector":{"name":"sinatra"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"sinatra"},"name":"sinatra"},"spec":{"containers":[{"command":["bin/sinatra"],"env":[{"name":"APP_ENV","value":"production"},{"name":"ELASTICSEARCH_URL","value":"http://customer-elasticsearch.cloudforms.lab.eng.rdu2.redhat.com:9200/"},{"name":"REDIS_URL","value":"redis://redis:6379/1"}],"image":"bdunne/elastic_log_ripper:latest","livenessProbe":{"httpGet":{"path":"/ping","port":4567},"initialDelaySeconds":15,"timeoutSeconds":1},"name":"sinatra","ports":[{"containerPort":4567}],"readinessProbe":{"httpGet":{"path":"/ping","port":4567},"initialDelaySeconds":15,"timeoutSeconds":1},"volumeMounts":[{"mountPath":"/opt/elastic_log_ripper/data","name":"app-data"}]}],"volumes":[{"name":"app-data","persistentVolumeClaim":{"claimName":"app-data"}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy sidekiq-worker"},"name":"sidekiq-worker"},"spec":{"replicas":1,"selector":{"name":"sidekiq-worker"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"sidekiq-worker"},"name":"sidekiq-worker"},"spec":{"containers":[{"command":["bin/sidekiq-worker"],"env":[{"name":"APP_ENV","value":"production"},{"name":"ELASTICSEARCH_URL","value":"http://customer-elasticsearch.cloudforms.lab.eng.rdu2.redhat.com:9200/"},{"name":"REDIS_URL","value":"redis://redis:6379/1"}],"image":"bdunne/elastic_log_ripper:latest","livenessProbe":{"exec":{"command":["pgrep","sidekiq-worker"]},"initialDelaySeconds":15,"timeoutSeconds":1},"name":"sidekiq-worker","readinessProbe":{"exec":{"command":["pgrep","sidekiq-worker"]},"initialDelaySeconds":15,"timeoutSeconds":1},"volumeMounts":[{"mountPath":"/opt/elastic_log_ripper/data","name":"app-data"}]}],"volumes":[{"name":"app-data","persistentVolumeClaim":{"claimName":"app-data"}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy sidekiq-ui"},"name":"sidekiq-ui"},"spec":{"replicas":1,"selector":{"name":"sidekiq-ui"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"sidekiq-ui"},"name":"sidekiq-ui"},"spec":{"containers":[{"command":["bin/sidekiq-ui"],"env":[{"name":"REDIS_URL","value":"redis://redis:6379/1"}],"image":"bdunne/elastic_log_ripper:latest","name":"sidekiq-ui","ports":[{"containerPort":9292}]}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy redis"},"name":"redis"},"spec":{"replicas":1,"selector":{"name":"redis"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"redis"},"name":"redis"},"spec":{"containers":[{"image":"manageiq/redis:latest","name":"redis","ports":[{"containerPort":6379}]}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"sinatra"},"spec":{"host":"customer-logging.cloudforms.lab.eng.rdu2.redhat.com","port":{"targetPort":"sinatra"},"tls":{"insecureEdgeTerminationPolicy":"Redirect","termination":"edge"},"to":{"kind":"Service","name":"sinatra"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"sidekiq-ui"},"spec":{"port":{"targetPort":"sidekiq-ui"},"tls":{"insecureEdgeTerminationPolicy":"Redirect","termination":"edge"},"to":{"kind":"Service","name":"sidekiq-ui"}}}],"labels":{"template":"elastic-log-ripper"}},{"metadata":{"name":"manageiq","namespace":"insights","selfLink":"/oapi/v1/namespaces/insights/templates/manageiq","uid":"61fdeb3d-9f37-11e8-ba7e-d094660d31fb","resourceVersion":"32781457","creationTimestamp":"2018-08-13T20:28:05Z","annotations":{"description":"ManageIQ
        appliance with persistent storage","iconClass":"icon-rails","tags":"instant-app,manageiq,miq"}},"objects":[{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"miq-orchestrator"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"miq-anyuid"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"miq-privileged"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"miq-httpd"}},{"apiVersion":"v1","kind":"RoleBinding","metadata":{"name":"view"},"roleRef":{"name":"view"},"subjects":[{"kind":"ServiceAccount","name":"miq-orchestrator"}]},{"apiVersion":"v1","kind":"RoleBinding","metadata":{"name":"edit"},"roleRef":{"name":"edit"},"subjects":[{"kind":"ServiceAccount","name":"miq-orchestrator"}]},{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}-secrets"},"stringData":{"admin-password":"${APPLICATION_ADMIN_PASSWORD}","database-url":"postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_SERVICE_NAME}/${DATABASE_NAME}?encoding=utf8\u0026pool=5\u0026wait_timeout=5","pg-password":"${DATABASE_PASSWORD}","v2-key":"${V2_KEY}"}},{"apiVersion":"v1","data":{"01_miq_overrides.conf":"#------------------------------------------------------------------------------\n#
        CONNECTIONS AND AUTHENTICATION\n#------------------------------------------------------------------------------\n\ntcp_keepalives_count
        = 9\ntcp_keepalives_idle = 3\ntcp_keepalives_interval = 75\n\n#------------------------------------------------------------------------------\n#
        RESOURCE USAGE (except WAL)\n#------------------------------------------------------------------------------\n\nshared_preload_libraries
        = ''pglogical,repmgr''\nmax_worker_processes = 10\n\n#------------------------------------------------------------------------------\n#
        WRITE AHEAD LOG\n#------------------------------------------------------------------------------\n\nwal_level
        = ''logical''\nwal_log_hints = on\nwal_buffers = 16MB\ncheckpoint_completion_target
        = 0.9\n\n#------------------------------------------------------------------------------\n#
        REPLICATION\n#------------------------------------------------------------------------------\n\nmax_wal_senders
        = 10\nwal_sender_timeout = 0\nmax_replication_slots = 10\nhot_standby = on\n\n#------------------------------------------------------------------------------\n#
        ERROR REPORTING AND LOGGING\n#------------------------------------------------------------------------------\n\nlog_filename
        = ''postgresql.log''\nlog_rotation_age = 0\nlog_min_duration_statement = 5000\nlog_connections
        = on\nlog_disconnections = on\nlog_line_prefix = ''%t:%r:%c:%u@%d:[%p]:''\nlog_lock_waits
        = on\n\n#------------------------------------------------------------------------------\n#
        AUTOVACUUM PARAMETERS\n#------------------------------------------------------------------------------\n\nlog_autovacuum_min_duration
        = 0\nautovacuum_naptime = 5min\nautovacuum_vacuum_threshold = 500\nautovacuum_analyze_threshold
        = 500\nautovacuum_vacuum_scale_factor = 0.05\n\n#------------------------------------------------------------------------------\n#
        LOCK MANAGEMENT\n#------------------------------------------------------------------------------\n\ndeadlock_timeout
        = 5s\n\n#------------------------------------------------------------------------------\n#
        VERSION/PLATFORM COMPATIBILITY\n#------------------------------------------------------------------------------\n\nescape_string_warning
        = off\nstandard_conforming_strings = off\n"},"kind":"ConfigMap","metadata":{"name":"${DATABASE_SERVICE_NAME}-configs"}},{"apiVersion":"v1","data":{"application.conf":"#
        Timeout: The number of seconds before receives and sends time out.\nTimeout
        120\n\nRewriteEngine On\nOptions SymLinksIfOwnerMatch\n\n\u003cVirtualHost
        *:80\u003e\n  KeepAlive on\n  # Without ServerName mod_auth_mellon compares
        against http:// and not https:// from the IdP\n  ServerName https://%{REQUEST_HOST}\n\n  ProxyPreserveHost
        on\n\n  RewriteCond %{REQUEST_URI}     ^/ws        [NC]\n  RewriteCond %{HTTP:UPGRADE}    ^websocket$
        [NC]\n  RewriteCond %{HTTP:CONNECTION} ^Upgrade$   [NC]\n  RewriteRule .*
        ws://${NAME}%{REQUEST_URI}  [P,QSA,L]\n\n  # For httpd, some ErrorDocuments
        must by served by the httpd pod\n  RewriteCond %{REQUEST_URI} !^/proxy_pages\n\n  #
        For SAML /saml2 is only served by mod_auth_mellon in the httpd pod\n  RewriteCond
        %{REQUEST_URI} !^/saml2\n\n  # For OpenID-Connect /openid-connect is only
        served by mod_auth_openidc\n  RewriteCond %{REQUEST_URI} !^/openid-connect\n\n  RewriteRule
        ^/ http://${NAME}%{REQUEST_URI} [P,QSA,L]\n  ProxyPassReverse / http://${NAME}/\n\n  #
        Ensures httpd stdout/stderr are seen by ''docker logs''.\n  ErrorLog  \"|
        /usr/bin/tee /proc/1/fd/2 /var/log/httpd/error_log\"\n  CustomLog \"| /usr/bin/tee
        /proc/1/fd/1 /var/log/httpd/access_log\" common\n\u003c/VirtualHost\u003e\n","authentication.conf":"#
        Load appropriate authentication configuration files\n#\nInclude \"conf.d/configuration-${HTTPD_AUTH_TYPE}-auth\"\n","configuration-active-directory-auth":"Include
        \"conf.d/external-auth-load-modules-conf\"\n\n\u003cLocation /dashboard/kerberos_authenticate\u003e\n  AuthType                   Kerberos\n  AuthName                   \"Kerberos
        Login\"\n  KrbMethodNegotiate         On\n  KrbMethodK5Passwd          Off\n  KrbAuthRealms              ${HTTPD_AUTH_KERBEROS_REALMS}\n  Krb5KeyTab                 /etc/krb5.keytab\n  KrbServiceName             Any\n  Require                    pam-account
        httpd-auth\n\n  ErrorDocument 401 /proxy_pages/invalid_sso_credentials.js\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-login-form-conf\"\nInclude \"conf.d/external-auth-application-api-conf\"\nInclude
        \"conf.d/external-auth-lookup-user-details-conf\"\nInclude \"conf.d/external-auth-remote-user-conf\"\n","configuration-external-auth":"Include
        \"conf.d/external-auth-load-modules-conf\"\n\n\u003cLocation /dashboard/kerberos_authenticate\u003e\n  AuthType                   Kerberos\n  AuthName                   \"Kerberos
        Login\"\n  KrbMethodNegotiate         On\n  KrbMethodK5Passwd          Off\n  KrbAuthRealms              ${HTTPD_AUTH_KERBEROS_REALMS}\n  Krb5KeyTab                 /etc/http.keytab\n  KrbServiceName             Any\n  Require                    pam-account
        httpd-auth\n\n  ErrorDocument 401 /proxy_pages/invalid_sso_credentials.js\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-login-form-conf\"\nInclude \"conf.d/external-auth-application-api-conf\"\nInclude
        \"conf.d/external-auth-lookup-user-details-conf\"\nInclude \"conf.d/external-auth-remote-user-conf\"\n","configuration-internal-auth":"#
        Internal authentication\n#\n","configuration-openid-connect-auth":"LoadModule
        auth_openidc_module modules/mod_auth_openidc.so\n\nOIDCProviderMetadataURL      ${HTTPD_AUTH_OIDC_PROVIDER_METADATA_URL}\nOIDCClientID                 ${HTTPD_AUTH_OIDC_CLIENT_ID}\nOIDCClientSecret             ${HTTPD_AUTH_OIDC_CLIENT_SECRET}\n\nOIDCRedirectURI              \"https://${APPLICATION_DOMAIN}/oidc_login/redirect_uri\"\nOIDCOAuthRemoteUserClaim     username\n\nOIDCCryptoPassphrase         sp-secret\n\n\u003cLocation
        /oidc_login\u003e\n  AuthType                   openid-connect\n  Require                    valid-user\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-openid-connect-remote-user-conf\"\n","configuration-saml-auth":"LoadModule
        auth_mellon_module modules/mod_auth_mellon.so\n\n\u003cLocation /\u003e\n  MellonEnable               \"info\"\n\n  MellonIdPMetadataFile      \"/etc/httpd/saml2/idp-metadata.xml\"\n\n  MellonSPPrivateKeyFile     \"/etc/httpd/saml2/sp-key.key\"\n  MellonSPCertFile           \"/etc/httpd/saml2/sp-cert.cert\"\n  MellonSPMetadataFile       \"/etc/httpd/saml2/sp-metadata.xml\"\n\n  MellonVariable             \"sp-cookie\"\n  MellonSecureCookie         On\n  MellonCookiePath           \"/\"\n\n  MellonIdP                  \"IDP\"\n\n  MellonEndpointPath         \"/saml2\"\n\n  MellonUser                 username\n  MellonMergeEnvVars         On\n\n  MellonSetEnvNoPrefix       \"REMOTE_USER\"            username\n  MellonSetEnvNoPrefix       \"REMOTE_USER_EMAIL\"      email\n  MellonSetEnvNoPrefix       \"REMOTE_USER_FIRSTNAME\"  firstname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_LASTNAME\"   lastname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_FULLNAME\"   fullname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_GROUPS\"     groups\n\u003c/Location\u003e\n\n\u003cLocation
        /saml_login\u003e\n  AuthType                   \"Mellon\"\n  MellonEnable               \"auth\"\n  Require                    valid-user\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-remote-user-conf\"\n","external-auth-application-api-conf":"\u003cLocationMatch
        ^/api\u003e\n  SetEnvIf Authorization     ''^Basic +YWRtaW46'' let_admin_in\n  SetEnvIf
        X-Auth-Token      ''^.+$''             let_api_token_in\n  SetEnvIf X-MIQ-Token       ''^.+$''             let_sys_token_in\n\n  AuthType                   Basic\n  AuthName                   \"External
        Authentication (httpd) for API\"\n  AuthBasicProvider          PAM\n\n  AuthPAMService             httpd-auth\n  Require                    valid-user\n  Order                      Allow,Deny\n  Allow
        from                 env=let_admin_in\n  Allow from                 env=let_api_token_in\n  Allow
        from                 env=let_sys_token_in\n  Satisfy                    Any\n\u003c/LocationMatch\u003e\n","external-auth-load-modules-conf":"LoadModule
        authnz_pam_module            modules/mod_authnz_pam.so\nLoadModule intercept_form_submit_module
        modules/mod_intercept_form_submit.so\nLoadModule lookup_identity_module       modules/mod_lookup_identity.so\nLoadModule
        auth_kerb_module             modules/mod_auth_kerb.so\n","external-auth-login-form-conf":"\u003cLocation
        /dashboard/external_authenticate\u003e\n  InterceptFormPAMService    httpd-auth\n  InterceptFormLogin         user_name\n  InterceptFormPassword      user_password\n  InterceptFormLoginSkip     admin\n  InterceptFormClearRemoteUserForSkipped
        on\n\u003c/Location\u003e\n","external-auth-lookup-user-details-conf":"\u003cLocationMatch
        ^/dashboard/external_authenticate$|^/dashboard/kerberos_authenticate$|^/api\u003e\n  LookupUserAttr
        mail        REMOTE_USER_EMAIL\n  LookupUserAttr givenname   REMOTE_USER_FIRSTNAME\n  LookupUserAttr
        sn          REMOTE_USER_LASTNAME\n  LookupUserAttr displayname REMOTE_USER_FULLNAME\n  LookupUserAttr
        domainname  REMOTE_USER_DOMAIN\n\n  LookupUserGroups           REMOTE_USER_GROUPS
        \":\"\n  LookupDbusTimeout          5000\n\u003c/LocationMatch\u003e\n","external-auth-openid-connect-remote-user-conf":"RequestHeader
        unset X_REMOTE_USER\n\nRequestHeader set X_REMOTE_USER           %{OIDC_CLAIM_PREFERRED_USERNAME}e
        env=OIDC_CLAIM_PREFERRED_USERNAME\nRequestHeader set X_EXTERNAL_AUTH_ERROR   %{EXTERNAL_AUTH_ERROR}e           env=EXTERNAL_AUTH_ERROR\nRequestHeader
        set X_REMOTE_USER_EMAIL     %{OIDC_CLAIM_EMAIL}e              env=OIDC_CLAIM_EMAIL\nRequestHeader
        set X_REMOTE_USER_FIRSTNAME %{OIDC_CLAIM_GIVEN_NAME}e         env=OIDC_CLAIM_GIVEN_NAME\nRequestHeader
        set X_REMOTE_USER_LASTNAME  %{OIDC_CLAIM_FAMILY_NAME}e        env=OIDC_CLAIM_FAMILY_NAME\nRequestHeader
        set X_REMOTE_USER_FULLNAME  %{OIDC_CLAIM_NAME}e               env=OIDC_CLAIM_NAME\nRequestHeader
        set X_REMOTE_USER_GROUPS    %{OIDC_CLAIM_GROUPS}e             env=OIDC_CLAIM_GROUPS\nRequestHeader
        set X_REMOTE_USER_DOMAIN    %{OIDC_CLAIM_DOMAIN}e             env=OIDC_CLAIM_DOMAIN\n","external-auth-remote-user-conf":"RequestHeader
        unset X_REMOTE_USER\n\nRequestHeader set X_REMOTE_USER           %{REMOTE_USER}e           env=REMOTE_USER\nRequestHeader
        set X_EXTERNAL_AUTH_ERROR   %{EXTERNAL_AUTH_ERROR}e   env=EXTERNAL_AUTH_ERROR\nRequestHeader
        set X_REMOTE_USER_EMAIL     %{REMOTE_USER_EMAIL}e     env=REMOTE_USER_EMAIL\nRequestHeader
        set X_REMOTE_USER_FIRSTNAME %{REMOTE_USER_FIRSTNAME}e env=REMOTE_USER_FIRSTNAME\nRequestHeader
        set X_REMOTE_USER_LASTNAME  %{REMOTE_USER_LASTNAME}e  env=REMOTE_USER_LASTNAME\nRequestHeader
        set X_REMOTE_USER_FULLNAME  %{REMOTE_USER_FULLNAME}e  env=REMOTE_USER_FULLNAME\nRequestHeader
        set X_REMOTE_USER_GROUPS    %{REMOTE_USER_GROUPS}e    env=REMOTE_USER_GROUPS\nRequestHeader
        set X_REMOTE_USER_DOMAIN    %{REMOTE_USER_DOMAIN}e    env=REMOTE_USER_DOMAIN\n"},"kind":"ConfigMap","metadata":{"name":"${HTTPD_SERVICE_NAME}-configs"}},{"apiVersion":"v1","data":{"auth-configuration.conf":"#
        External Authentication Configuration File\n#\n# For details on usage please
        see https://github.com/ManageIQ/manageiq-pods/blob/master/README.md#configuring-external-authentication\n","auth-kerberos-realms":"undefined","auth-oidc-client-id":"undefined","auth-oidc-client-secret":"undefined","auth-oidc-provider-metadata-url":"undefined","auth-type":"internal"},"kind":"ConfigMap","metadata":{"name":"${HTTPD_SERVICE_NAME}-auth-configs"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances ManageIQ pods"},"name":"${NAME}"},"spec":{"clusterIP":"None","ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":80}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${HTTPD_SERVICE_NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","port":{"targetPort":"http"},"tls":{"insecureEdgeTerminationPolicy":"Redirect","termination":"edge"},"to":{"kind":"Service","name":"${HTTPD_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${NAME}-${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${DATABASE_VOLUME_CAPACITY}"}}}},{"apiVersion":"apps/v1beta1","kind":"StatefulSet","metadata":{"annotations":{"description":"Defines
        how to deploy the ManageIQ appliance"},"name":"${NAME}"},"spec":{"replicas":"${{APPLICATION_REPLICA_COUNT}}","serviceName":"${NAME}","template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"ALLOW_INSECURE_SESSION","value":"true"},{"name":"APPLICATION_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"admin-password","name":"${NAME}-secrets"}}},{"name":"DATABASE_REGION","value":"${DATABASE_REGION}"},{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"key":"database-url","name":"${NAME}-secrets"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"key":"v2-key","name":"${NAME}-secrets"}}}],"image":"${APPLICATION_IMG_NAME}:${FRONTEND_APPLICATION_IMG_TAG}","lifecycle":{"preStop":{"exec":{"command":["/opt/manageiq/container-scripts/sync-pv-data"]}}},"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3},"name":"manageiq","ports":[{"containerPort":80,"protocol":"TCP"}],"readinessProbe":{"initialDelaySeconds":200,"tcpSocket":{"port":80},"timeoutSeconds":3},"volumeMounts":[{"mountPath":"/persistent","name":"${NAME}-server"}]}],"serviceAccount":"miq-orchestrator","serviceAccountName":"miq-orchestrator","terminationGracePeriodSeconds":90}},"volumeClaimTemplates":[{"metadata":{"annotations":null,"name":"${NAME}-server"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${APPLICATION_VOLUME_CAPACITY}"}}}}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Headless
        service for ManageIQ backend pods"},"name":"${NAME}-backend"},"spec":{"clusterIP":"None","selector":{"name":"${NAME}-backend"}}},{"apiVersion":"apps/v1beta1","kind":"StatefulSet","metadata":{"annotations":{"description":"Defines
        how to deploy the ManageIQ appliance"},"name":"${NAME}-backend"},"spec":{"replicas":0,"serviceName":"${NAME}-backend","template":{"metadata":{"labels":{"name":"${NAME}-backend"},"name":"${NAME}-backend"},"spec":{"containers":[{"env":[{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"key":"database-url","name":"${NAME}-secrets"}}},{"name":"MIQ_SERVER_DEFAULT_ROLES","value":"database_operations,event,reporting,scheduler,smartstate,ems_operations,ems_inventory,automate"},{"name":"FRONTEND_SERVICE_NAME","value":"${NAME}"},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"key":"v2-key","name":"${NAME}-secrets"}}}],"image":"${APPLICATION_IMG_NAME}:${BACKEND_APPLICATION_IMG_TAG}","lifecycle":{"preStop":{"exec":{"command":["/opt/manageiq/container-scripts/sync-pv-data"]}}},"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3},"name":"manageiq","volumeMounts":[{"mountPath":"/persistent","name":"${NAME}-server"}]}],"serviceAccount":"miq-orchestrator","serviceAccountName":"miq-orchestrator","terminationGracePeriodSeconds":90}},"volumeClaimTemplates":[{"metadata":{"annotations":null,"name":"${NAME}-server"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${APPLICATION_VOLUME_CAPACITY}"}}}}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the memcached server"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"ports":[{"name":"memcached","port":11211,"targetPort":11211}],"selector":{"name":"${MEMCACHED_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy memcached"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${MEMCACHED_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${MEMCACHED_SERVICE_NAME}"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"MEMCACHED_MAX_MEMORY","value":"${MEMCACHED_MAX_MEMORY}"},{"name":"MEMCACHED_MAX_CONNECTIONS","value":"${MEMCACHED_MAX_CONNECTIONS}"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","value":"${MEMCACHED_SLAB_PAGE_SIZE}"}],"image":"${MEMCACHED_IMG_NAME}:${MEMCACHED_IMG_TAG}","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":11211},"timeoutSeconds":1},"name":"memcached","ports":[{"containerPort":11211}],"readinessProbe":{"initialDelaySeconds":5,"tcpSocket":{"port":11211},"timeoutSeconds":1},"volumeMounts":[]}],"volumes":[]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","port":5432,"targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DATABASE_USER}"},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"pg-password","name":"${NAME}-secrets"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"${POSTGRESQL_IMG_NAME}:${POSTGRESQL_IMG_TAG}","livenessProbe":{"initialDelaySeconds":60,"tcpSocket":{"port":5432},"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":15,"timeoutSeconds":1},"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"miq-pgdb-volume"},{"mountPath":"/opt/app-root/src/postgresql-cfg/","name":"miq-pg-configs"}]}],"volumes":[{"name":"miq-pgdb-volume","persistentVolumeClaim":{"claimName":"${NAME}-${DATABASE_SERVICE_NAME}"}},{"configMap":{"name":"${DATABASE_SERVICE_NAME}-configs"},"name":"miq-pg-configs"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the httpd server"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"ports":[{"name":"http","port":80,"targetPort":80}],"selector":{"name":"httpd"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the httpd server dbus api"},"name":"${HTTPD_DBUS_API_SERVICE_NAME}"},"spec":{"ports":[{"name":"http-dbus-api","port":8080,"targetPort":8080}],"selector":{"name":"httpd"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy httpd"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${HTTPD_SERVICE_NAME}"},"strategy":{"recreateParams":{"timeoutSeconds":1200},"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${HTTPD_SERVICE_NAME}"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"APPLICATION_DOMAIN","value":"${APPLICATION_DOMAIN}"},{"name":"HTTPD_AUTH_TYPE","valueFrom":{"configMapKeyRef":{"key":"auth-type","name":"${HTTPD_SERVICE_NAME}-auth-configs"}}},{"name":"HTTPD_AUTH_KERBEROS_REALMS","valueFrom":{"configMapKeyRef":{"key":"auth-kerberos-realms","name":"${HTTPD_SERVICE_NAME}-auth-configs"}}},{"name":"HTTPD_AUTH_OIDC_PROVIDER_METADATA_URL","valueFrom":{"configMapKeyRef":{"key":"auth-oidc-provider-metadata-url","name":"${HTTPD_SERVICE_NAME}-auth-configs","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_ID","valueFrom":{"configMapKeyRef":{"key":"auth-oidc-client-id","name":"${HTTPD_SERVICE_NAME}-auth-configs","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_SECRET","valueFrom":{"configMapKeyRef":{"key":"auth-oidc-client-secret","name":"${HTTPD_SERVICE_NAME}-auth-configs","optional":true}}}],"image":"${HTTPD_IMG_NAME}:${HTTPD_IMG_TAG}","lifecycle":{"postStart":{"exec":{"command":["/usr/bin/save-container-environment"]}}},"livenessProbe":{"exec":{"command":["pidof","httpd"]},"initialDelaySeconds":15,"timeoutSeconds":3},"name":"httpd","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":8080,"protocol":"TCP"}],"readinessProbe":{"initialDelaySeconds":10,"tcpSocket":{"port":80},"timeoutSeconds":3},"volumeMounts":[{"mountPath":"${HTTPD_CONFIG_DIR}","name":"httpd-config"},{"mountPath":"${HTTPD_AUTH_CONFIG_DIR}","name":"httpd-auth-config"}]}],"serviceAccount":"miq-httpd","serviceAccountName":"miq-httpd","volumes":[{"configMap":{"name":"${HTTPD_SERVICE_NAME}-configs"},"name":"httpd-config"},{"configMap":{"name":"${HTTPD_SERVICE_NAME}-auth-configs"},"name":"httpd-auth-config"}]}},"triggers":[{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"manageiq","required":true},{"name":"V2_KEY","displayName":"ManageIQ
        Encryption Key","description":"Encryption Key for ManageIQ Passwords","generate":"expression","from":"[a-zA-Z0-9]{43}","required":true},{"name":"DATABASE_SERVICE_NAME","displayName":"PostgreSQL
        Service Name","description":"The name of the OpenShift Service exposed for
        the PostgreSQL container.","value":"postgresql","required":true},{"name":"DATABASE_USER","displayName":"PostgreSQL
        User","description":"PostgreSQL user that will access the database.","value":"root","required":true},{"name":"DATABASE_PASSWORD","displayName":"PostgreSQL
        Password","description":"Password for the PostgreSQL user.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DATABASE_NAME","displayName":"PostgreSQL
        Database Name","description":"Name of the PostgreSQL database accessed.","value":"vmdb_production","required":true},{"name":"DATABASE_REGION","displayName":"Application
        Database Region","description":"Database region that will be used for application.","value":"0","required":true},{"name":"APPLICATION_ADMIN_PASSWORD","displayName":"Application
        Admin Password","description":"Admin password that will be set on the application.","value":"smartvm","required":true},{"name":"MEMCACHED_SERVICE_NAME","displayName":"Memcached
        Service Name","description":"The name of the OpenShift Service exposed for
        the Memcached container.","value":"memcached","required":true},{"name":"MEMCACHED_MAX_MEMORY","displayName":"Memcached
        Max Memory","description":"Memcached maximum memory for memcached object storage
        in MB.","value":"64"},{"name":"MEMCACHED_MAX_CONNECTIONS","displayName":"Memcached
        Max Connections","description":"Memcached maximum number of connections allowed.","value":"1024"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","displayName":"Memcached
        Slab Page Size","description":"Memcached size of each slab page.","value":"1m"},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Max Connections","description":"PostgreSQL maximum number of database connections
        allowed.","value":"1000"},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffer Amount","description":"Amount of memory dedicated for PostgreSQL
        shared memory buffers.","value":"1GB"},{"name":"APPLICATION_CPU_REQ","displayName":"Application
        Min CPU Requested","description":"Minimum amount of CPU time the Application
        container will need (expressed in millicores).","value":"1000m","required":true},{"name":"POSTGRESQL_CPU_REQ","displayName":"PostgreSQL
        Min CPU Requested","description":"Minimum amount of CPU time the PostgreSQL
        container will need (expressed in millicores).","value":"500m","required":true},{"name":"MEMCACHED_CPU_REQ","displayName":"Memcached
        Min CPU Requested","description":"Minimum amount of CPU time the Memcached
        container will need (expressed in millicores).","value":"200m","required":true},{"name":"APPLICATION_MEM_REQ","displayName":"Application
        Min RAM Requested","description":"Minimum amount of memory the Application
        container will need.","value":"6144Mi","required":true},{"name":"POSTGRESQL_MEM_REQ","displayName":"PostgreSQL
        Min RAM Requested","description":"Minimum amount of memory the PostgreSQL
        container will need.","value":"4Gi","required":true},{"name":"MEMCACHED_MEM_REQ","displayName":"Memcached
        Min RAM Requested","description":"Minimum amount of memory the Memcached container
        will need.","value":"64Mi","required":true},{"name":"APPLICATION_MEM_LIMIT","displayName":"Application
        Max RAM Limit","description":"Maximum amount of memory the Application container
        can consume.","value":"16384Mi","required":true},{"name":"POSTGRESQL_MEM_LIMIT","displayName":"PostgreSQL
        Max RAM Limit","description":"Maximum amount of memory the PostgreSQL container
        can consume.","value":"8Gi","required":true},{"name":"MEMCACHED_MEM_LIMIT","displayName":"Memcached
        Max RAM Limit","description":"Maximum amount of memory the Memcached container
        can consume.","value":"256Mi","required":true},{"name":"POSTGRESQL_IMG_NAME","displayName":"PostgreSQL
        Image Name","description":"This is the PostgreSQL image name requested to
        deploy.","value":"docker.io/manageiq/postgresql"},{"name":"POSTGRESQL_IMG_TAG","displayName":"PostgreSQL
        Image Tag","description":"This is the PostgreSQL image tag/version requested
        to deploy.","value":"latest"},{"name":"MEMCACHED_IMG_NAME","displayName":"Memcached
        Image Name","description":"This is the Memcached image name requested to deploy.","value":"docker.io/manageiq/memcached"},{"name":"MEMCACHED_IMG_TAG","displayName":"Memcached
        Image Tag","description":"This is the Memcached image tag/version requested
        to deploy.","value":"latest"},{"name":"APPLICATION_IMG_NAME","displayName":"Application
        Image Name","description":"This is the Application image name requested to
        deploy.","value":"docker.io/carbonin/manageiq-pods"},{"name":"FRONTEND_APPLICATION_IMG_TAG","displayName":"Front
        end Application Image Tag","description":"This is the ManageIQ Frontend Application
        image tag/version requested to deploy.","value":"frontend-latest-hammer"},{"name":"BACKEND_APPLICATION_IMG_TAG","displayName":"Back
        end Application Image Tag","description":"This is the ManageIQ Backend Application
        image tag/version requested to deploy.","value":"backend-latest-hammer"},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the application
        service, if left blank a value will be defaulted."},{"name":"APPLICATION_REPLICA_COUNT","displayName":"Application
        Replica Count","description":"This is the number of Application replicas requested
        to deploy.","value":"1"},{"name":"APPLICATION_VOLUME_CAPACITY","displayName":"Application
        Volume Capacity","description":"Volume space available for application data.","value":"5Gi","required":true},{"name":"DATABASE_VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Volume space available for database.","value":"15Gi","required":true},{"name":"HTTPD_SERVICE_NAME","displayName":"Apache
        httpd Service Name","description":"The name of the OpenShift Service exposed
        for the httpd container.","value":"httpd","required":true},{"name":"HTTPD_DBUS_API_SERVICE_NAME","displayName":"Apache
        httpd DBus API Service Name","description":"The name of httpd dbus api service.","value":"httpd-dbus-api","required":true},{"name":"HTTPD_IMG_NAME","displayName":"Apache
        httpd Image Name","description":"This is the httpd image name requested to
        deploy.","value":"docker.io/manageiq/httpd"},{"name":"HTTPD_IMG_TAG","displayName":"Apache
        httpd Image Tag","description":"This is the httpd image tag/version requested
        to deploy.","value":"latest"},{"name":"HTTPD_CONFIG_DIR","displayName":"Apache
        Configuration Directory","description":"Directory used to store the Apache
        configuration files.","value":"/etc/httpd/conf.d"},{"name":"HTTPD_AUTH_CONFIG_DIR","displayName":"External
        Authentication Configuration Directory","description":"Directory used to store
        the external authentication configuration files.","value":"/etc/httpd/auth-conf.d"},{"name":"HTTPD_CPU_REQ","displayName":"Apache
        httpd Min CPU Requested","description":"Minimum amount of CPU time the httpd
        container will need (expressed in millicores).","value":"500m","required":true},{"name":"HTTPD_MEM_REQ","displayName":"Apache
        httpd Min RAM Requested","description":"Minimum amount of memory the httpd
        container will need.","value":"512Mi","required":true},{"name":"HTTPD_MEM_LIMIT","displayName":"Apache
        httpd Max RAM Limit","description":"Maximum amount of memory the httpd container
        can consume.","value":"8192Mi","required":true}],"labels":{"template":"manageiq"}},{"metadata":{"name":"service-catalog-role-bindings","namespace":"kube-service-catalog","selfLink":"/oapi/v1/namespaces/kube-service-catalog/templates/service-catalog-role-bindings","uid":"4391837c-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1689773","creationTimestamp":"2018-05-16T20:46:53Z"},"objects":[{"apiVersion":"authorization.openshift.io/v1","kind":"ClusterRole","metadata":{"name":"servicecatalog-serviceclass-viewer"},"rules":[{"apiGroups":["servicecatalog.k8s.io"],"resources":["clusterserviceclasses","clusterserviceplans"],"verbs":["list","watch","get"]}]},{"apiVersion":"authorization.openshift.io/v1","groupNames":["system:authenticated"],"kind":"ClusterRoleBinding","metadata":{"name":"servicecatalog-serviceclass-viewer-binding"},"roleRef":{"name":"servicecatalog-serviceclass-viewer"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"service-catalog-controller"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"service-catalog-apiserver"}},{"apiVersion":"authorization.openshift.io/v1","kind":"ClusterRole","metadata":{"name":"sar-creator"},"rules":[{"apiGroups":[""],"resources":["subjectaccessreviews.authorization.k8s.io"],"verbs":["create"]}]},{"apiVersion":"authorization.openshift.io/v1","kind":"ClusterRoleBinding","metadata":{"name":"service-catalog-sar-creator-binding"},"roleRef":{"name":"sar-creator"},"subjects":[{"kind":"ServiceAccount","name":"service-catalog-apiserver","namespace":"kube-service-catalog"}]},{"apiVersion":"authorization.openshift.io/v1","kind":"ClusterRole","metadata":{"name":"namespace-viewer"},"rules":[{"apiGroups":[""],"resources":["namespaces"],"verbs":["list","watch","get"]}]},{"apiVersion":"authorization.openshift.io/v1","kind":"ClusterRoleBinding","metadata":{"name":"service-catalog-namespace-viewer-binding"},"roleRef":{"name":"namespace-viewer"},"subjects":[{"kind":"ServiceAccount","name":"service-catalog-apiserver","namespace":"kube-service-catalog"}]},{"apiVersion":"authorization.openshift.io/v1","kind":"ClusterRoleBinding","metadata":{"name":"service-catalog-controller-namespace-viewer-binding"},"roleRef":{"name":"namespace-viewer"},"subjects":[{"kind":"ServiceAccount","name":"service-catalog-controller","namespace":"kube-service-catalog"}]},{"apiVersion":"authorization.openshift.io/v1","kind":"ClusterRole","metadata":{"name":"service-catalog-controller"},"rules":[{"apiGroups":[""],"resources":["secrets"],"verbs":["create","update","patch","delete","get","list","watch"]},{"apiGroups":["servicecatalog.k8s.io"],"resources":["clusterservicebrokers/status","clusterserviceclasses/status","clusterserviceplans/status","serviceinstances/status","servicebindings/status","servicebindings/finalizers","serviceinstances/reference"],"verbs":["update"]},{"apiGroups":["servicecatalog.k8s.io"],"resources":["clusterservicebrokers","serviceinstances","servicebindings"],"verbs":["list","get","watch"]},{"apiGroups":[""],"resources":["events"],"verbs":["patch","create"]},{"apiGroups":["servicecatalog.k8s.io"],"resources":["clusterserviceclasses","clusterserviceplans"],"verbs":["create","delete","update","patch","get","list","watch"]},{"apiGroups":["settings.k8s.io"],"resources":["podpresets"],"verbs":["create","update","delete","get","list","watch"]}]},{"apiVersion":"authorization.openshift.io/v1","kind":"ClusterRoleBinding","metadata":{"name":"service-catalog-controller-binding"},"roleRef":{"name":"service-catalog-controller"},"subjects":[{"kind":"ServiceAccount","name":"service-catalog-controller","namespace":"kube-service-catalog"}]},{"apiVersion":"authorization.openshift.io/v1","kind":"Role","metadata":{"name":"endpoint-accessor"},"rules":[{"apiGroups":[""],"resources":["endpoints"],"verbs":["list","watch","get","create","update"]}]},{"apiVersion":"authorization.openshift.io/v1","kind":"RoleBinding","metadata":{"name":"endpointer-accessor-binding"},"roleRef":{"name":"endpoint-accessor","namespace":"kube-service-catalog"},"subjects":[{"kind":"ServiceAccount","name":"service-catalog-controller","namespace":"kube-service-catalog"}]},{"apiVersion":"authorization.openshift.io/v1","kind":"ClusterRoleBinding","metadata":{"name":"system:auth-delegator-binding"},"roleRef":{"name":"system:auth-delegator"},"subjects":[{"kind":"ServiceAccount","name":"service-catalog-apiserver","namespace":"kube-service-catalog"}]}]},{"metadata":{"name":"kube-system-service-catalog-role-bindings","namespace":"kube-system","selfLink":"/oapi/v1/namespaces/kube-system/templates/kube-system-service-catalog-role-bindings","uid":"4a68ab6b-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1689839","creationTimestamp":"2018-05-16T20:47:04Z"},"objects":[{"apiVersion":"authorization.openshift.io/v1","kind":"Role","metadata":{"name":"extension-apiserver-authentication-reader","namespace":"${KUBE_SYSTEM_NAMESPACE}"},"rules":[{"apiGroups":[""],"resourceNames":["extension-apiserver-authentication"],"resources":["configmaps"],"verbs":["get"]}]},{"apiVersion":"authorization.openshift.io/v1","kind":"RoleBinding","metadata":{"name":"extension-apiserver-authentication-reader-binding","namespace":"${KUBE_SYSTEM_NAMESPACE}"},"roleRef":{"name":"extension-apiserver-authentication-reader","namespace":"${KUBE_SYSTEM_NAMESPACE}"},"subjects":[{"kind":"ServiceAccount","name":"service-catalog-apiserver","namespace":"kube-service-catalog"}]}],"parameters":[{"name":"KUBE_SYSTEM_NAMESPACE","displayName":"Name
        of the kube-system namespace","description":"Do not change this value.","value":"kube-system","required":true}]},{"metadata":{"name":"manageiq","namespace":"miq-demo","selfLink":"/oapi/v1/namespaces/miq-demo/templates/manageiq","uid":"d0d2324c-a16e-11e8-ba7e-d094660d31fb","resourceVersion":"33819516","creationTimestamp":"2018-08-16T16:09:55Z","annotations":{"description":"ManageIQ
        appliance with persistent storage","iconClass":"icon-rails","tags":"instant-app,manageiq,miq"}},"objects":[{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"miq-orchestrator"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"miq-anyuid"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"miq-privileged"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"miq-httpd"}},{"apiVersion":"v1","kind":"RoleBinding","metadata":{"name":"view"},"roleRef":{"name":"view"},"subjects":[{"kind":"ServiceAccount","name":"miq-orchestrator"}]},{"apiVersion":"v1","kind":"RoleBinding","metadata":{"name":"edit"},"roleRef":{"name":"edit"},"subjects":[{"kind":"ServiceAccount","name":"miq-orchestrator"}]},{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}-secrets"},"stringData":{"admin-password":"${APPLICATION_ADMIN_PASSWORD}","database-url":"postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_SERVICE_NAME}/${DATABASE_NAME}?encoding=utf8\u0026pool=5\u0026wait_timeout=5","pg-password":"${DATABASE_PASSWORD}","v2-key":"${V2_KEY}"}},{"apiVersion":"v1","data":{"miq_logs.conf":"/var/www/miq/vmdb/log/*.log
        /var/www/miq/vmdb/log/apache/*.log {\n  daily\n  dateext\n  missingok\n  rotate
        14\n  notifempty\n  compress\n  copytruncate\n  lastaction\n    /sbin/service
        httpd reload \u003e /dev/null 2\u003e\u00261 || true\n  endscript\n}\n"},"kind":"ConfigMap","metadata":{"name":"miq-logs-config"}},{"apiVersion":"v1","data":{"01_miq_overrides.conf":"#------------------------------------------------------------------------------\n#
        CONNECTIONS AND AUTHENTICATION\n#------------------------------------------------------------------------------\n\ntcp_keepalives_count
        = 9\ntcp_keepalives_idle = 3\ntcp_keepalives_interval = 75\n\n#------------------------------------------------------------------------------\n#
        RESOURCE USAGE (except WAL)\n#------------------------------------------------------------------------------\n\nshared_preload_libraries
        = ''pglogical,repmgr''\nmax_worker_processes = 10\n\n#------------------------------------------------------------------------------\n#
        WRITE AHEAD LOG\n#------------------------------------------------------------------------------\n\nwal_level
        = ''logical''\nwal_log_hints = on\nwal_buffers = 16MB\ncheckpoint_completion_target
        = 0.9\n\n#------------------------------------------------------------------------------\n#
        REPLICATION\n#------------------------------------------------------------------------------\n\nmax_wal_senders
        = 10\nwal_sender_timeout = 0\nmax_replication_slots = 10\nhot_standby = on\n\n#------------------------------------------------------------------------------\n#
        ERROR REPORTING AND LOGGING\n#------------------------------------------------------------------------------\n\nlog_filename
        = ''postgresql.log''\nlog_rotation_age = 0\nlog_min_duration_statement = 5000\nlog_connections
        = on\nlog_disconnections = on\nlog_line_prefix = ''%t:%r:%c:%u@%d:[%p]:''\nlog_lock_waits
        = on\n\n#------------------------------------------------------------------------------\n#
        AUTOVACUUM PARAMETERS\n#------------------------------------------------------------------------------\n\nlog_autovacuum_min_duration
        = 0\nautovacuum_naptime = 5min\nautovacuum_vacuum_threshold = 500\nautovacuum_analyze_threshold
        = 500\nautovacuum_vacuum_scale_factor = 0.05\n\n#------------------------------------------------------------------------------\n#
        LOCK MANAGEMENT\n#------------------------------------------------------------------------------\n\ndeadlock_timeout
        = 5s\n\n#------------------------------------------------------------------------------\n#
        VERSION/PLATFORM COMPATIBILITY\n#------------------------------------------------------------------------------\n\nescape_string_warning
        = off\nstandard_conforming_strings = off\n"},"kind":"ConfigMap","metadata":{"name":"${DATABASE_SERVICE_NAME}-configs"}},{"apiVersion":"v1","data":{"application.conf":"#
        Timeout: The number of seconds before receives and sends time out.\nTimeout
        120\n\nRewriteEngine On\nOptions SymLinksIfOwnerMatch\n\n\u003cVirtualHost
        *:80\u003e\n  KeepAlive on\n  # Without ServerName mod_auth_mellon compares
        against http:// and not https:// from the IdP\n  ServerName https://%{REQUEST_HOST}\n\n  ProxyPreserveHost
        on\n\n  RewriteCond %{REQUEST_URI}     ^/ws        [NC]\n  RewriteCond %{HTTP:UPGRADE}    ^websocket$
        [NC]\n  RewriteCond %{HTTP:CONNECTION} ^Upgrade$   [NC]\n  RewriteRule .*
        ws://${NAME}%{REQUEST_URI}  [P,QSA,L]\n\n  # For httpd, some ErrorDocuments
        must by served by the httpd pod\n  RewriteCond %{REQUEST_URI} !^/proxy_pages\n\n  #
        For SAML /saml2 is only served by mod_auth_mellon in the httpd pod\n  RewriteCond
        %{REQUEST_URI} !^/saml2\n\n  # For OpenID-Connect /openid-connect is only
        served by mod_auth_openidc\n  RewriteCond %{REQUEST_URI} !^/openid-connect\n\n  RewriteRule
        ^/ http://${NAME}%{REQUEST_URI} [P,QSA,L]\n  ProxyPassReverse / http://${NAME}/\n\n  #
        Ensures httpd stdout/stderr are seen by ''docker logs''.\n  ErrorLog  \"|
        /usr/bin/tee /proc/1/fd/2 /var/log/httpd/error_log\"\n  CustomLog \"| /usr/bin/tee
        /proc/1/fd/1 /var/log/httpd/access_log\" common\n\u003c/VirtualHost\u003e\n","authentication.conf":"#
        Load appropriate authentication configuration files\n#\nInclude \"conf.d/configuration-${HTTPD_AUTH_TYPE}-auth\"\n","configuration-active-directory-auth":"Include
        \"conf.d/external-auth-load-modules-conf\"\n\n\u003cLocation /dashboard/kerberos_authenticate\u003e\n  AuthType                   Kerberos\n  AuthName                   \"Kerberos
        Login\"\n  KrbMethodNegotiate         On\n  KrbMethodK5Passwd          Off\n  KrbAuthRealms              ${HTTPD_AUTH_KERBEROS_REALMS}\n  Krb5KeyTab                 /etc/krb5.keytab\n  KrbServiceName             Any\n  Require                    pam-account
        httpd-auth\n\n  ErrorDocument 401 /proxy_pages/invalid_sso_credentials.js\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-login-form-conf\"\nInclude \"conf.d/external-auth-application-api-conf\"\nInclude
        \"conf.d/external-auth-lookup-user-details-conf\"\nInclude \"conf.d/external-auth-remote-user-conf\"\n","configuration-external-auth":"Include
        \"conf.d/external-auth-load-modules-conf\"\n\n\u003cLocation /dashboard/kerberos_authenticate\u003e\n  AuthType                   Kerberos\n  AuthName                   \"Kerberos
        Login\"\n  KrbMethodNegotiate         On\n  KrbMethodK5Passwd          Off\n  KrbAuthRealms              ${HTTPD_AUTH_KERBEROS_REALMS}\n  Krb5KeyTab                 /etc/http.keytab\n  KrbServiceName             Any\n  Require                    pam-account
        httpd-auth\n\n  ErrorDocument 401 /proxy_pages/invalid_sso_credentials.js\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-login-form-conf\"\nInclude \"conf.d/external-auth-application-api-conf\"\nInclude
        \"conf.d/external-auth-lookup-user-details-conf\"\nInclude \"conf.d/external-auth-remote-user-conf\"\n","configuration-internal-auth":"#
        Internal authentication\n#\n","configuration-openid-connect-auth":"LoadModule
        auth_openidc_module modules/mod_auth_openidc.so\n\nOIDCProviderMetadataURL      ${HTTPD_AUTH_OIDC_PROVIDER_METADATA_URL}\nOIDCClientID                 ${HTTPD_AUTH_OIDC_CLIENT_ID}\nOIDCClientSecret             ${HTTPD_AUTH_OIDC_CLIENT_SECRET}\n\nOIDCRedirectURI              \"https://${APPLICATION_DOMAIN}/oidc_login/redirect_uri\"\nOIDCOAuthRemoteUserClaim     username\n\nOIDCCryptoPassphrase         sp-secret\n\n\u003cLocation
        /oidc_login\u003e\n  AuthType                   openid-connect\n  Require                    valid-user\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-openid-connect-remote-user-conf\"\n","configuration-saml-auth":"LoadModule
        auth_mellon_module modules/mod_auth_mellon.so\n\n\u003cLocation /\u003e\n  MellonEnable               \"info\"\n\n  MellonIdPMetadataFile      \"/etc/httpd/saml2/idp-metadata.xml\"\n\n  MellonSPPrivateKeyFile     \"/etc/httpd/saml2/sp-key.key\"\n  MellonSPCertFile           \"/etc/httpd/saml2/sp-cert.cert\"\n  MellonSPMetadataFile       \"/etc/httpd/saml2/sp-metadata.xml\"\n\n  MellonVariable             \"sp-cookie\"\n  MellonSecureCookie         On\n  MellonCookiePath           \"/\"\n\n  MellonIdP                  \"IDP\"\n\n  MellonEndpointPath         \"/saml2\"\n\n  MellonUser                 username\n  MellonMergeEnvVars         On\n\n  MellonSetEnvNoPrefix       \"REMOTE_USER\"            username\n  MellonSetEnvNoPrefix       \"REMOTE_USER_EMAIL\"      email\n  MellonSetEnvNoPrefix       \"REMOTE_USER_FIRSTNAME\"  firstname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_LASTNAME\"   lastname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_FULLNAME\"   fullname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_GROUPS\"     groups\n\u003c/Location\u003e\n\n\u003cLocation
        /saml_login\u003e\n  AuthType                   \"Mellon\"\n  MellonEnable               \"auth\"\n  Require                    valid-user\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-remote-user-conf\"\n","external-auth-application-api-conf":"\u003cLocationMatch
        ^/api\u003e\n  SetEnvIf Authorization     ''^Basic +YWRtaW46'' let_admin_in\n  SetEnvIf
        X-Auth-Token      ''^.+$''             let_api_token_in\n  SetEnvIf X-MIQ-Token       ''^.+$''             let_sys_token_in\n\n  AuthType                   Basic\n  AuthName                   \"External
        Authentication (httpd) for API\"\n  AuthBasicProvider          PAM\n\n  AuthPAMService             httpd-auth\n  Require                    valid-user\n  Order                      Allow,Deny\n  Allow
        from                 env=let_admin_in\n  Allow from                 env=let_api_token_in\n  Allow
        from                 env=let_sys_token_in\n  Satisfy                    Any\n\u003c/LocationMatch\u003e\n","external-auth-load-modules-conf":"LoadModule
        authnz_pam_module            modules/mod_authnz_pam.so\nLoadModule intercept_form_submit_module
        modules/mod_intercept_form_submit.so\nLoadModule lookup_identity_module       modules/mod_lookup_identity.so\nLoadModule
        auth_kerb_module             modules/mod_auth_kerb.so\n","external-auth-login-form-conf":"\u003cLocation
        /dashboard/external_authenticate\u003e\n  InterceptFormPAMService    httpd-auth\n  InterceptFormLogin         user_name\n  InterceptFormPassword      user_password\n  InterceptFormLoginSkip     admin\n  InterceptFormClearRemoteUserForSkipped
        on\n\u003c/Location\u003e\n","external-auth-lookup-user-details-conf":"\u003cLocationMatch
        ^/dashboard/external_authenticate$|^/dashboard/kerberos_authenticate$|^/api\u003e\n  LookupUserAttr
        mail        REMOTE_USER_EMAIL\n  LookupUserAttr givenname   REMOTE_USER_FIRSTNAME\n  LookupUserAttr
        sn          REMOTE_USER_LASTNAME\n  LookupUserAttr displayname REMOTE_USER_FULLNAME\n  LookupUserAttr
        domainname  REMOTE_USER_DOMAIN\n\n  LookupUserGroups           REMOTE_USER_GROUPS
        \":\"\n  LookupDbusTimeout          5000\n\u003c/LocationMatch\u003e\n","external-auth-openid-connect-remote-user-conf":"RequestHeader
        unset X_REMOTE_USER\n\nRequestHeader set X_REMOTE_USER           %{OIDC_CLAIM_PREFERRED_USERNAME}e
        env=OIDC_CLAIM_PREFERRED_USERNAME\nRequestHeader set X_EXTERNAL_AUTH_ERROR   %{EXTERNAL_AUTH_ERROR}e           env=EXTERNAL_AUTH_ERROR\nRequestHeader
        set X_REMOTE_USER_EMAIL     %{OIDC_CLAIM_EMAIL}e              env=OIDC_CLAIM_EMAIL\nRequestHeader
        set X_REMOTE_USER_FIRSTNAME %{OIDC_CLAIM_GIVEN_NAME}e         env=OIDC_CLAIM_GIVEN_NAME\nRequestHeader
        set X_REMOTE_USER_LASTNAME  %{OIDC_CLAIM_FAMILY_NAME}e        env=OIDC_CLAIM_FAMILY_NAME\nRequestHeader
        set X_REMOTE_USER_FULLNAME  %{OIDC_CLAIM_NAME}e               env=OIDC_CLAIM_NAME\nRequestHeader
        set X_REMOTE_USER_GROUPS    %{OIDC_CLAIM_GROUPS}e             env=OIDC_CLAIM_GROUPS\nRequestHeader
        set X_REMOTE_USER_DOMAIN    %{OIDC_CLAIM_DOMAIN}e             env=OIDC_CLAIM_DOMAIN\n","external-auth-remote-user-conf":"RequestHeader
        unset X_REMOTE_USER\n\nRequestHeader set X_REMOTE_USER           %{REMOTE_USER}e           env=REMOTE_USER\nRequestHeader
        set X_EXTERNAL_AUTH_ERROR   %{EXTERNAL_AUTH_ERROR}e   env=EXTERNAL_AUTH_ERROR\nRequestHeader
        set X_REMOTE_USER_EMAIL     %{REMOTE_USER_EMAIL}e     env=REMOTE_USER_EMAIL\nRequestHeader
        set X_REMOTE_USER_FIRSTNAME %{REMOTE_USER_FIRSTNAME}e env=REMOTE_USER_FIRSTNAME\nRequestHeader
        set X_REMOTE_USER_LASTNAME  %{REMOTE_USER_LASTNAME}e  env=REMOTE_USER_LASTNAME\nRequestHeader
        set X_REMOTE_USER_FULLNAME  %{REMOTE_USER_FULLNAME}e  env=REMOTE_USER_FULLNAME\nRequestHeader
        set X_REMOTE_USER_GROUPS    %{REMOTE_USER_GROUPS}e    env=REMOTE_USER_GROUPS\nRequestHeader
        set X_REMOTE_USER_DOMAIN    %{REMOTE_USER_DOMAIN}e    env=REMOTE_USER_DOMAIN\n"},"kind":"ConfigMap","metadata":{"name":"${HTTPD_SERVICE_NAME}-configs"}},{"apiVersion":"v1","data":{"auth-configuration.conf":"#
        External Authentication Configuration File\n#\n# For details on usage please
        see https://github.com/ManageIQ/manageiq-pods/blob/master/README.md#configuring-external-authentication\n","auth-kerberos-realms":"undefined","auth-oidc-client-id":"undefined","auth-oidc-client-secret":"undefined","auth-oidc-provider-metadata-url":"undefined","auth-type":"internal"},"kind":"ConfigMap","metadata":{"name":"${HTTPD_SERVICE_NAME}-auth-configs"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances ManageIQ pods"},"name":"${NAME}"},"spec":{"clusterIP":"None","ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":80}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${HTTPD_SERVICE_NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","port":{"targetPort":"http"},"tls":{"insecureEdgeTerminationPolicy":"Redirect","termination":"edge"},"to":{"kind":"Service","name":"${HTTPD_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${NAME}-${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${DATABASE_VOLUME_CAPACITY}"}}}},{"apiVersion":"apps/v1beta1","kind":"StatefulSet","metadata":{"annotations":{"description":"Defines
        how to deploy the ManageIQ appliance"},"name":"${NAME}"},"spec":{"replicas":"${{APPLICATION_REPLICA_COUNT}}","serviceName":"${NAME}","template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"ALLOW_INSECURE_SESSION","value":"true"},{"name":"APPLICATION_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"admin-password","name":"${NAME}-secrets"}}},{"name":"DATABASE_REGION","value":"${DATABASE_REGION}"},{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"key":"database-url","name":"${NAME}-secrets"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"key":"v2-key","name":"${NAME}-secrets"}}}],"image":"${APPLICATION_IMG_NAME}:${FRONTEND_APPLICATION_IMG_TAG}","lifecycle":{"preStop":{"exec":{"command":["/opt/manageiq/container-scripts/sync-pv-data"]}}},"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3},"name":"manageiq","ports":[{"containerPort":80,"protocol":"TCP"}],"readinessProbe":{"initialDelaySeconds":200,"tcpSocket":{"port":80},"timeoutSeconds":3},"resources":{"limits":{"memory":"${APPLICATION_MEM_LIMIT}"},"requests":{"cpu":"${APPLICATION_CPU_REQ}","memory":"${APPLICATION_MEM_REQ}"}},"volumeMounts":[{"mountPath":"/persistent","name":"${NAME}-server"},{"mountPath":"/etc/logrotate.d/miq_logs.conf","name":"miq-logs-config","subPath":"miq_logs.conf"}]}],"serviceAccount":"miq-orchestrator","serviceAccountName":"miq-orchestrator","terminationGracePeriodSeconds":90,"volumes":[{"configMap":{"name":"miq-logs-config"},"name":"miq-logs-config"}]}},"volumeClaimTemplates":[{"metadata":{"annotations":null,"name":"${NAME}-server"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${APPLICATION_VOLUME_CAPACITY}"}}}}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Headless
        service for ManageIQ backend pods"},"name":"${NAME}-backend"},"spec":{"clusterIP":"None","selector":{"name":"${NAME}-backend"}}},{"apiVersion":"apps/v1beta1","kind":"StatefulSet","metadata":{"annotations":{"description":"Defines
        how to deploy the ManageIQ appliance"},"name":"${NAME}-backend"},"spec":{"replicas":0,"serviceName":"${NAME}-backend","template":{"metadata":{"labels":{"name":"${NAME}-backend"},"name":"${NAME}-backend"},"spec":{"containers":[{"env":[{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"key":"database-url","name":"${NAME}-secrets"}}},{"name":"MIQ_SERVER_DEFAULT_ROLES","value":"database_operations,event,reporting,scheduler,smartstate,ems_operations,ems_inventory,automate"},{"name":"FRONTEND_SERVICE_NAME","value":"${NAME}"},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"key":"v2-key","name":"${NAME}-secrets"}}}],"image":"${APPLICATION_IMG_NAME}:${BACKEND_APPLICATION_IMG_TAG}","lifecycle":{"preStop":{"exec":{"command":["/opt/manageiq/container-scripts/sync-pv-data"]}}},"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3},"name":"manageiq","resources":{"limits":{"memory":"${APPLICATION_MEM_LIMIT}"},"requests":{"cpu":"${APPLICATION_CPU_REQ}","memory":"${APPLICATION_MEM_REQ}"}},"volumeMounts":[{"mountPath":"/persistent","name":"${NAME}-server"}]}],"serviceAccount":"miq-orchestrator","serviceAccountName":"miq-orchestrator","terminationGracePeriodSeconds":90}},"volumeClaimTemplates":[{"metadata":{"annotations":null,"name":"${NAME}-server"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${APPLICATION_VOLUME_CAPACITY}"}}}}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the memcached server"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"ports":[{"name":"memcached","port":11211,"targetPort":11211}],"selector":{"name":"${MEMCACHED_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy memcached"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${MEMCACHED_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${MEMCACHED_SERVICE_NAME}"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"MEMCACHED_MAX_MEMORY","value":"${MEMCACHED_MAX_MEMORY}"},{"name":"MEMCACHED_MAX_CONNECTIONS","value":"${MEMCACHED_MAX_CONNECTIONS}"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","value":"${MEMCACHED_SLAB_PAGE_SIZE}"}],"image":"${MEMCACHED_IMG_NAME}:${MEMCACHED_IMG_TAG}","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":11211},"timeoutSeconds":1},"name":"memcached","ports":[{"containerPort":11211}],"readinessProbe":{"initialDelaySeconds":5,"tcpSocket":{"port":11211},"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMCACHED_MEM_LIMIT}"},"requests":{"cpu":"${MEMCACHED_CPU_REQ}","memory":"${MEMCACHED_MEM_REQ}"}},"volumeMounts":[]}],"volumes":[]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","port":5432,"targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DATABASE_USER}"},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"pg-password","name":"${NAME}-secrets"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"${POSTGRESQL_IMG_NAME}:${POSTGRESQL_IMG_TAG}","livenessProbe":{"initialDelaySeconds":60,"tcpSocket":{"port":5432},"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":15,"timeoutSeconds":1},"resources":{"limits":{"memory":"${POSTGRESQL_MEM_LIMIT}"},"requests":{"cpu":"${POSTGRESQL_CPU_REQ}","memory":"${POSTGRESQL_MEM_REQ}"}},"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"miq-pgdb-volume"},{"mountPath":"/opt/app-root/src/postgresql-cfg/","name":"miq-pg-configs"}]}],"volumes":[{"name":"miq-pgdb-volume","persistentVolumeClaim":{"claimName":"${NAME}-${DATABASE_SERVICE_NAME}"}},{"configMap":{"name":"${DATABASE_SERVICE_NAME}-configs"},"name":"miq-pg-configs"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the httpd server"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"ports":[{"name":"http","port":80,"targetPort":80}],"selector":{"name":"httpd"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the httpd server dbus api"},"name":"${HTTPD_DBUS_API_SERVICE_NAME}"},"spec":{"ports":[{"name":"http-dbus-api","port":8080,"targetPort":8080}],"selector":{"name":"httpd"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy httpd"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${HTTPD_SERVICE_NAME}"},"strategy":{"recreateParams":{"timeoutSeconds":1200},"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${HTTPD_SERVICE_NAME}"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"APPLICATION_DOMAIN","value":"${APPLICATION_DOMAIN}"},{"name":"HTTPD_AUTH_TYPE","valueFrom":{"configMapKeyRef":{"key":"auth-type","name":"${HTTPD_SERVICE_NAME}-auth-configs"}}},{"name":"HTTPD_AUTH_KERBEROS_REALMS","valueFrom":{"configMapKeyRef":{"key":"auth-kerberos-realms","name":"${HTTPD_SERVICE_NAME}-auth-configs"}}},{"name":"HTTPD_AUTH_OIDC_PROVIDER_METADATA_URL","valueFrom":{"configMapKeyRef":{"key":"auth-oidc-provider-metadata-url","name":"${HTTPD_SERVICE_NAME}-auth-configs","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_ID","valueFrom":{"configMapKeyRef":{"key":"auth-oidc-client-id","name":"${HTTPD_SERVICE_NAME}-auth-configs","optional":true}}},{"name":"HTTPD_AUTH_OIDC_CLIENT_SECRET","valueFrom":{"configMapKeyRef":{"key":"auth-oidc-client-secret","name":"${HTTPD_SERVICE_NAME}-auth-configs","optional":true}}}],"image":"${HTTPD_IMG_NAME}:${HTTPD_IMG_TAG}","lifecycle":{"postStart":{"exec":{"command":["/usr/bin/save-container-environment"]}}},"livenessProbe":{"exec":{"command":["pidof","httpd"]},"initialDelaySeconds":15,"timeoutSeconds":3},"name":"httpd","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":8080,"protocol":"TCP"}],"readinessProbe":{"initialDelaySeconds":10,"tcpSocket":{"port":80},"timeoutSeconds":3},"resources":{"limits":{"memory":"${HTTPD_MEM_LIMIT}"},"requests":{"cpu":"${HTTPD_CPU_REQ}","memory":"${HTTPD_MEM_REQ}"}},"volumeMounts":[{"mountPath":"${HTTPD_CONFIG_DIR}","name":"httpd-config"},{"mountPath":"${HTTPD_AUTH_CONFIG_DIR}","name":"httpd-auth-config"}]}],"serviceAccount":"miq-httpd","serviceAccountName":"miq-httpd","volumes":[{"configMap":{"name":"${HTTPD_SERVICE_NAME}-configs"},"name":"httpd-config"},{"configMap":{"name":"${HTTPD_SERVICE_NAME}-auth-configs"},"name":"httpd-auth-config"}]}},"triggers":[{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"manageiq","required":true},{"name":"V2_KEY","displayName":"ManageIQ
        Encryption Key","description":"Encryption Key for ManageIQ Passwords","generate":"expression","from":"[a-zA-Z0-9]{43}","required":true},{"name":"DATABASE_SERVICE_NAME","displayName":"PostgreSQL
        Service Name","description":"The name of the OpenShift Service exposed for
        the PostgreSQL container.","value":"postgresql","required":true},{"name":"DATABASE_USER","displayName":"PostgreSQL
        User","description":"PostgreSQL user that will access the database.","value":"root","required":true},{"name":"DATABASE_PASSWORD","displayName":"PostgreSQL
        Password","description":"Password for the PostgreSQL user.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DATABASE_NAME","displayName":"PostgreSQL
        Database Name","description":"Name of the PostgreSQL database accessed.","value":"vmdb_production","required":true},{"name":"DATABASE_REGION","displayName":"Application
        Database Region","description":"Database region that will be used for application.","value":"0","required":true},{"name":"APPLICATION_ADMIN_PASSWORD","displayName":"Application
        Admin Password","description":"Admin password that will be set on the application.","value":"smartvm","required":true},{"name":"MEMCACHED_SERVICE_NAME","displayName":"Memcached
        Service Name","description":"The name of the OpenShift Service exposed for
        the Memcached container.","value":"memcached","required":true},{"name":"MEMCACHED_MAX_MEMORY","displayName":"Memcached
        Max Memory","description":"Memcached maximum memory for memcached object storage
        in MB.","value":"64"},{"name":"MEMCACHED_MAX_CONNECTIONS","displayName":"Memcached
        Max Connections","description":"Memcached maximum number of connections allowed.","value":"1024"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","displayName":"Memcached
        Slab Page Size","description":"Memcached size of each slab page.","value":"1m"},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Max Connections","description":"PostgreSQL maximum number of database connections
        allowed.","value":"1000"},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffer Amount","description":"Amount of memory dedicated for PostgreSQL
        shared memory buffers.","value":"1GB"},{"name":"APPLICATION_CPU_REQ","displayName":"Application
        Min CPU Requested","description":"Minimum amount of CPU time the Application
        container will need (expressed in millicores).","value":"1000m","required":true},{"name":"POSTGRESQL_CPU_REQ","displayName":"PostgreSQL
        Min CPU Requested","description":"Minimum amount of CPU time the PostgreSQL
        container will need (expressed in millicores).","value":"500m","required":true},{"name":"MEMCACHED_CPU_REQ","displayName":"Memcached
        Min CPU Requested","description":"Minimum amount of CPU time the Memcached
        container will need (expressed in millicores).","value":"200m","required":true},{"name":"APPLICATION_MEM_REQ","displayName":"Application
        Min RAM Requested","description":"Minimum amount of memory the Application
        container will need.","value":"6144Mi","required":true},{"name":"POSTGRESQL_MEM_REQ","displayName":"PostgreSQL
        Min RAM Requested","description":"Minimum amount of memory the PostgreSQL
        container will need.","value":"4Gi","required":true},{"name":"MEMCACHED_MEM_REQ","displayName":"Memcached
        Min RAM Requested","description":"Minimum amount of memory the Memcached container
        will need.","value":"64Mi","required":true},{"name":"APPLICATION_MEM_LIMIT","displayName":"Application
        Max RAM Limit","description":"Maximum amount of memory the Application container
        can consume.","value":"16384Mi","required":true},{"name":"POSTGRESQL_MEM_LIMIT","displayName":"PostgreSQL
        Max RAM Limit","description":"Maximum amount of memory the PostgreSQL container
        can consume.","value":"8Gi","required":true},{"name":"MEMCACHED_MEM_LIMIT","displayName":"Memcached
        Max RAM Limit","description":"Maximum amount of memory the Memcached container
        can consume.","value":"256Mi","required":true},{"name":"POSTGRESQL_IMG_NAME","displayName":"PostgreSQL
        Image Name","description":"This is the PostgreSQL image name requested to
        deploy.","value":"docker.io/manageiq/postgresql"},{"name":"POSTGRESQL_IMG_TAG","displayName":"PostgreSQL
        Image Tag","description":"This is the PostgreSQL image tag/version requested
        to deploy.","value":"latest"},{"name":"MEMCACHED_IMG_NAME","displayName":"Memcached
        Image Name","description":"This is the Memcached image name requested to deploy.","value":"docker.io/manageiq/memcached"},{"name":"MEMCACHED_IMG_TAG","displayName":"Memcached
        Image Tag","description":"This is the Memcached image tag/version requested
        to deploy.","value":"latest"},{"name":"APPLICATION_IMG_NAME","displayName":"Application
        Image Name","description":"This is the Application image name requested to
        deploy.","value":"docker.io/manageiq/manageiq-pods"},{"name":"FRONTEND_APPLICATION_IMG_TAG","displayName":"Front
        end Application Image Tag","description":"This is the ManageIQ Frontend Application
        image tag/version requested to deploy.","value":"frontend-latest-hammer"},{"name":"BACKEND_APPLICATION_IMG_TAG","displayName":"Back
        end Application Image Tag","description":"This is the ManageIQ Backend Application
        image tag/version requested to deploy.","value":"backend-latest-hammer"},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the application
        service, if left blank a value will be defaulted."},{"name":"APPLICATION_REPLICA_COUNT","displayName":"Application
        Replica Count","description":"This is the number of Application replicas requested
        to deploy.","value":"1"},{"name":"APPLICATION_VOLUME_CAPACITY","displayName":"Application
        Volume Capacity","description":"Volume space available for application data.","value":"5Gi","required":true},{"name":"DATABASE_VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Volume space available for database.","value":"15Gi","required":true},{"name":"HTTPD_SERVICE_NAME","displayName":"Apache
        httpd Service Name","description":"The name of the OpenShift Service exposed
        for the httpd container.","value":"httpd","required":true},{"name":"HTTPD_DBUS_API_SERVICE_NAME","displayName":"Apache
        httpd DBus API Service Name","description":"The name of httpd dbus api service.","value":"httpd-dbus-api","required":true},{"name":"HTTPD_IMG_NAME","displayName":"Apache
        httpd Image Name","description":"This is the httpd image name requested to
        deploy.","value":"docker.io/manageiq/httpd"},{"name":"HTTPD_IMG_TAG","displayName":"Apache
        httpd Image Tag","description":"This is the httpd image tag/version requested
        to deploy.","value":"latest"},{"name":"HTTPD_CONFIG_DIR","displayName":"Apache
        Configuration Directory","description":"Directory used to store the Apache
        configuration files.","value":"/etc/httpd/conf.d"},{"name":"HTTPD_AUTH_CONFIG_DIR","displayName":"External
        Authentication Configuration Directory","description":"Directory used to store
        the external authentication configuration files.","value":"/etc/httpd/auth-conf.d"},{"name":"HTTPD_CPU_REQ","displayName":"Apache
        httpd Min CPU Requested","description":"Minimum amount of CPU time the httpd
        container will need (expressed in millicores).","value":"500m","required":true},{"name":"HTTPD_MEM_REQ","displayName":"Apache
        httpd Min RAM Requested","description":"Minimum amount of memory the httpd
        container will need.","value":"512Mi","required":true},{"name":"HTTPD_MEM_LIMIT","displayName":"Apache
        httpd Max RAM Limit","description":"Maximum amount of memory the httpd container
        can consume.","value":"8192Mi","required":true}],"labels":{"template":"manageiq"}},{"metadata":{"name":"cloudforms","namespace":"openshift-management","selfLink":"/oapi/v1/namespaces/openshift-management/templates/cloudforms","uid":"a33e3ff7-5ea1-11e8-ba7e-d094660d31fb","resourceVersion":"4842558","creationTimestamp":"2018-05-23T15:54:55Z","annotations":{"description":"CloudForms
        appliance with persistent storage","iconClass":"icon-rails","tags":"instant-app,cloudforms,cfme"}},"objects":[{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"cfme-orchestrator"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"cfme-anyuid"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"cfme-privileged"}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"name":"cfme-httpd"}},{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}-secrets"},"stringData":{"admin-password":"${APPLICATION_ADMIN_PASSWORD}","database-url":"postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_SERVICE_NAME}/${DATABASE_NAME}?encoding=utf8\u0026pool=5\u0026wait_timeout=5","pg-password":"${DATABASE_PASSWORD}","v2-key":"${V2_KEY}"}},{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${ANSIBLE_SERVICE_NAME}-secrets"},"stringData":{"admin-password":"${ANSIBLE_ADMIN_PASSWORD}","rabbit-password":"${ANSIBLE_RABBITMQ_PASSWORD}","secret-key":"${ANSIBLE_SECRET_KEY}"}},{"apiVersion":"v1","data":{"01_miq_overrides.conf":"#------------------------------------------------------------------------------\n#
        CONNECTIONS AND AUTHENTICATION\n#------------------------------------------------------------------------------\n\ntcp_keepalives_count
        = 9\ntcp_keepalives_idle = 3\ntcp_keepalives_interval = 75\n\n#------------------------------------------------------------------------------\n#
        RESOURCE USAGE (except WAL)\n#------------------------------------------------------------------------------\n\nshared_preload_libraries
        = ''pglogical,repmgr_funcs''\nmax_worker_processes = 10\n\n#------------------------------------------------------------------------------\n#
        WRITE AHEAD LOG\n#------------------------------------------------------------------------------\n\nwal_level
        = ''logical''\nwal_log_hints = on\nwal_buffers = 16MB\ncheckpoint_completion_target
        = 0.9\n\n#------------------------------------------------------------------------------\n#
        REPLICATION\n#------------------------------------------------------------------------------\n\nmax_wal_senders
        = 10\nwal_sender_timeout = 0\nmax_replication_slots = 10\nhot_standby = on\n\n#------------------------------------------------------------------------------\n#
        ERROR REPORTING AND LOGGING\n#------------------------------------------------------------------------------\n\nlog_filename
        = ''postgresql.log''\nlog_rotation_age = 0\nlog_min_duration_statement = 5000\nlog_connections
        = on\nlog_disconnections = on\nlog_line_prefix = ''%t:%r:%c:%u@%d:[%p]:''\nlog_lock_waits
        = on\n\n#------------------------------------------------------------------------------\n#
        AUTOVACUUM PARAMETERS\n#------------------------------------------------------------------------------\n\nlog_autovacuum_min_duration
        = 0\nautovacuum_naptime = 5min\nautovacuum_vacuum_threshold = 500\nautovacuum_analyze_threshold
        = 500\nautovacuum_vacuum_scale_factor = 0.05\n\n#------------------------------------------------------------------------------\n#
        LOCK MANAGEMENT\n#------------------------------------------------------------------------------\n\ndeadlock_timeout
        = 5s\n\n#------------------------------------------------------------------------------\n#
        VERSION/PLATFORM COMPATIBILITY\n#------------------------------------------------------------------------------\n\nescape_string_warning
        = off\nstandard_conforming_strings = off\n"},"kind":"ConfigMap","metadata":{"name":"${DATABASE_SERVICE_NAME}-configs"}},{"apiVersion":"v1","data":{"application.conf":"#
        Timeout: The number of seconds before receives and sends time out.\nTimeout
        120\n\nRewriteEngine On\nOptions SymLinksIfOwnerMatch\n\n\u003cVirtualHost
        *:80\u003e\n  KeepAlive on\n  # Without ServerName mod_auth_mellon compares
        against http:// and not https:// from the IdP\n  ServerName https://%{REQUEST_HOST}\n\n  ProxyPreserveHost
        on\n\n  RewriteCond %{REQUEST_URI}     ^/ws        [NC]\n  RewriteCond %{HTTP:UPGRADE}    ^websocket$
        [NC]\n  RewriteCond %{HTTP:CONNECTION} ^Upgrade$   [NC]\n  RewriteRule .*
        ws://${NAME}%{REQUEST_URI}  [P,QSA,L]\n\n  # For httpd, some ErrorDocuments
        must by served by the httpd pod\n  RewriteCond %{REQUEST_URI} !^/proxy_pages\n\n  #
        For SAML /saml2 is only served by mod_auth_mellon in the httpd pod\n  RewriteCond
        %{REQUEST_URI} !^/saml2\n  RewriteRule ^/ http://${NAME}%{REQUEST_URI} [P,QSA,L]\n  ProxyPassReverse
        / http://${NAME}/\n\n  # Ensures httpd stdout/stderr are seen by docker logs.\n  ErrorLog  \"|
        /usr/bin/tee /proc/1/fd/2 /var/log/httpd/error_log\"\n  CustomLog \"| /usr/bin/tee
        /proc/1/fd/1 /var/log/httpd/access_log\" common\n\u003c/VirtualHost\u003e\n","authentication.conf":"#
        Load appropriate authentication configuration files\n#\nInclude \"conf.d/configuration-${HTTPD_AUTH_TYPE}-auth\"\n","configuration-active-directory-auth":"Include
        \"conf.d/external-auth-load-modules-conf\"\n\n\u003cLocation /dashboard/kerberos_authenticate\u003e\n  AuthType                   Kerberos\n  AuthName                   \"Kerberos
        Login\"\n  KrbMethodNegotiate         On\n  KrbMethodK5Passwd          Off\n  KrbAuthRealms              ${HTTPD_AUTH_KERBEROS_REALMS}\n  Krb5KeyTab                 /etc/krb5.keytab\n  KrbServiceName             Any\n  Require                    pam-account
        httpd-auth\n\n  ErrorDocument 401 /proxy_pages/invalid_sso_credentials.js\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-login-form-conf\"\nInclude \"conf.d/external-auth-application-api-conf\"\nInclude
        \"conf.d/external-auth-lookup-user-details-conf\"\nInclude \"conf.d/external-auth-remote-user-conf\"\n","configuration-external-auth":"Include
        \"conf.d/external-auth-load-modules-conf\"\n\n\u003cLocation /dashboard/kerberos_authenticate\u003e\n  AuthType                   Kerberos\n  AuthName                   \"Kerberos
        Login\"\n  KrbMethodNegotiate         On\n  KrbMethodK5Passwd          Off\n  KrbAuthRealms              ${HTTPD_AUTH_KERBEROS_REALMS}\n  Krb5KeyTab                 /etc/http.keytab\n  KrbServiceName             Any\n  Require                    pam-account
        httpd-auth\n\n  ErrorDocument 401 /proxy_pages/invalid_sso_credentials.js\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-login-form-conf\"\nInclude \"conf.d/external-auth-application-api-conf\"\nInclude
        \"conf.d/external-auth-lookup-user-details-conf\"\nInclude \"conf.d/external-auth-remote-user-conf\"\n","configuration-internal-auth":"#
        Internal authentication\n#\n","configuration-saml-auth":"LoadModule auth_mellon_module
        modules/mod_auth_mellon.so\n\n\u003cLocation /\u003e\n  MellonEnable               \"info\"\n\n  MellonIdPMetadataFile      \"/etc/httpd/saml2/idp-metadata.xml\"\n\n  MellonSPPrivateKeyFile     \"/etc/httpd/saml2/sp-key.key\"\n  MellonSPCertFile           \"/etc/httpd/saml2/sp-cert.cert\"\n  MellonSPMetadataFile       \"/etc/httpd/saml2/sp-metadata.xml\"\n\n  MellonVariable             \"sp-cookie\"\n  MellonSecureCookie         On\n  MellonCookiePath           \"/\"\n\n  MellonIdP                  \"IDP\"\n\n  MellonEndpointPath         \"/saml2\"\n\n  MellonUser                 username\n  MellonMergeEnvVars         On\n\n  MellonSetEnvNoPrefix       \"REMOTE_USER\"            username\n  MellonSetEnvNoPrefix       \"REMOTE_USER_EMAIL\"      email\n  MellonSetEnvNoPrefix       \"REMOTE_USER_FIRSTNAME\"  firstname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_LASTNAME\"   lastname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_FULLNAME\"   fullname\n  MellonSetEnvNoPrefix       \"REMOTE_USER_GROUPS\"     groups\n\u003c/Location\u003e\n\n\u003cLocation
        /saml_login\u003e\n  AuthType                   \"Mellon\"\n  MellonEnable               \"auth\"\n  Require                    valid-user\n\u003c/Location\u003e\n\nInclude
        \"conf.d/external-auth-remote-user-conf\"\n","external-auth-application-api-conf":"\u003cLocationMatch
        ^/api\u003e\n  SetEnvIf Authorization     ''^Basic +YWRtaW46'' let_admin_in\n  SetEnvIf
        X-Auth-Token      ''^.+$''             let_api_token_in\n  SetEnvIf X-MIQ-Token       ''^.+$''             let_sys_token_in\n\n  AuthType                   Basic\n  AuthName                   \"External
        Authentication (httpd) for API\"\n  AuthBasicProvider          PAM\n\n  AuthPAMService             httpd-auth\n  Require                    valid-user\n  Order                      Allow,Deny\n  Allow
        from                 env=let_admin_in\n  Allow from                 env=let_api_token_in\n  Allow
        from                 env=let_sys_token_in\n  Satisfy                    Any\n\u003c/LocationMatch\u003e\n","external-auth-load-modules-conf":"LoadModule
        authnz_pam_module            modules/mod_authnz_pam.so\nLoadModule intercept_form_submit_module
        modules/mod_intercept_form_submit.so\nLoadModule lookup_identity_module       modules/mod_lookup_identity.so\nLoadModule
        auth_kerb_module             modules/mod_auth_kerb.so\n","external-auth-login-form-conf":"\u003cLocation
        /dashboard/external_authenticate\u003e\n  InterceptFormPAMService    httpd-auth\n  InterceptFormLogin         user_name\n  InterceptFormPassword      user_password\n  InterceptFormLoginSkip     admin\n  InterceptFormClearRemoteUserForSkipped
        on\n\u003c/Location\u003e\n","external-auth-lookup-user-details-conf":"\u003cLocationMatch
        ^/dashboard/external_authenticate$|^/dashboard/kerberos_authenticate$|^/api\u003e\n  LookupUserAttr
        mail        REMOTE_USER_EMAIL\n  LookupUserAttr givenname   REMOTE_USER_FIRSTNAME\n  LookupUserAttr
        sn          REMOTE_USER_LASTNAME\n  LookupUserAttr displayname REMOTE_USER_FULLNAME\n  LookupUserAttr
        domainname  REMOTE_USER_DOMAIN\n\n  LookupUserGroups           REMOTE_USER_GROUPS
        \":\"\n  LookupDbusTimeout          5000\n\u003c/LocationMatch\u003e\n","external-auth-remote-user-conf":"RequestHeader
        unset X_REMOTE_USER\n\nRequestHeader set X_REMOTE_USER           %{REMOTE_USER}e           env=REMOTE_USER\nRequestHeader
        set X_EXTERNAL_AUTH_ERROR   %{EXTERNAL_AUTH_ERROR}e   env=EXTERNAL_AUTH_ERROR\nRequestHeader
        set X_REMOTE_USER_EMAIL     %{REMOTE_USER_EMAIL}e     env=REMOTE_USER_EMAIL\nRequestHeader
        set X_REMOTE_USER_FIRSTNAME %{REMOTE_USER_FIRSTNAME}e env=REMOTE_USER_FIRSTNAME\nRequestHeader
        set X_REMOTE_USER_LASTNAME  %{REMOTE_USER_LASTNAME}e  env=REMOTE_USER_LASTNAME\nRequestHeader
        set X_REMOTE_USER_FULLNAME  %{REMOTE_USER_FULLNAME}e  env=REMOTE_USER_FULLNAME\nRequestHeader
        set X_REMOTE_USER_GROUPS    %{REMOTE_USER_GROUPS}e    env=REMOTE_USER_GROUPS\nRequestHeader
        set X_REMOTE_USER_DOMAIN    %{REMOTE_USER_DOMAIN}e    env=REMOTE_USER_DOMAIN\n"},"kind":"ConfigMap","metadata":{"name":"${HTTPD_SERVICE_NAME}-configs"}},{"apiVersion":"v1","data":{"auth-configuration.conf":"#
        External Authentication Configuration File\n#\n# For details on usage please
        see https://github.com/ManageIQ/manageiq-pods/blob/master/README.md#configuring-external-authentication\n","auth-kerberos-realms":"undefined","auth-type":"internal"},"kind":"ConfigMap","metadata":{"name":"${HTTPD_SERVICE_NAME}-auth-configs"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances CloudForms pods","service.alpha.openshift.io/dependencies":"[{\"name\":\"${DATABASE_SERVICE_NAME}\",\"namespace\":\"\",\"kind\":\"Service\"},{\"name\":\"${MEMCACHED_SERVICE_NAME}\",\"namespace\":\"\",\"kind\":\"Service\"}]"},"name":"${NAME}"},"spec":{"clusterIP":"None","ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":80}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${HTTPD_SERVICE_NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","port":{"targetPort":"http"},"tls":{"insecureEdgeTerminationPolicy":"Redirect","termination":"edge"},"to":{"kind":"Service","name":"${HTTPD_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${NAME}-${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${DATABASE_VOLUME_CAPACITY}"}}}},{"apiVersion":"apps/v1beta1","kind":"StatefulSet","metadata":{"annotations":{"description":"Defines
        how to deploy the CloudForms appliance"},"name":"${NAME}"},"spec":{"replicas":"${APPLICATION_REPLICA_COUNT}","serviceName":"${NAME}","template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"APPLICATION_INIT_DELAY","value":"${APPLICATION_INIT_DELAY}"},{"name":"DATABASE_REGION","value":"${DATABASE_REGION}"},{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"key":"database-url","name":"${NAME}-secrets"}}},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"key":"v2-key","name":"${NAME}-secrets"}}},{"name":"APPLICATION_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"admin-password","name":"${NAME}-secrets"}}},{"name":"ANSIBLE_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"admin-password","name":"${ANSIBLE_SERVICE_NAME}-secrets"}}}],"image":"${FRONTEND_APPLICATION_IMG_NAME}:${FRONTEND_APPLICATION_IMG_TAG}","lifecycle":{"preStop":{"exec":{"command":["/opt/rh/cfme-container-scripts/sync-pv-data"]}}},"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3},"name":"cloudforms","ports":[{"containerPort":80,"protocol":"TCP"}],"readinessProbe":{"initialDelaySeconds":200,"tcpSocket":{"port":80},"timeoutSeconds":3},"resources":{"limits":{"memory":"${APPLICATION_MEM_LIMIT}"},"requests":{"cpu":"${APPLICATION_CPU_REQ}","memory":"${APPLICATION_MEM_REQ}"}},"volumeMounts":[{"mountPath":"/persistent","name":"${NAME}-server"}]}],"serviceAccount":"cfme-orchestrator","serviceAccountName":"cfme-orchestrator","terminationGracePeriodSeconds":90}},"volumeClaimTemplates":[{"metadata":{"annotations":null,"name":"${NAME}-server"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${APPLICATION_VOLUME_CAPACITY}"}}}}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Headless
        service for CloudForms backend pods"},"name":"${NAME}-backend"},"spec":{"clusterIP":"None","selector":{"name":"${NAME}-backend"}}},{"apiVersion":"apps/v1beta1","kind":"StatefulSet","metadata":{"annotations":{"description":"Defines
        how to deploy the CloudForms appliance"},"name":"${NAME}-backend"},"spec":{"replicas":0,"serviceName":"${NAME}-backend","template":{"metadata":{"labels":{"name":"${NAME}-backend"},"name":"${NAME}-backend"},"spec":{"containers":[{"env":[{"name":"APPLICATION_INIT_DELAY","value":"${APPLICATION_INIT_DELAY}"},{"name":"DATABASE_URL","valueFrom":{"secretKeyRef":{"key":"database-url","name":"${NAME}-secrets"}}},{"name":"MIQ_SERVER_DEFAULT_ROLES","value":"database_operations,event,reporting,scheduler,smartstate,ems_operations,ems_inventory,automate"},{"name":"FRONTEND_SERVICE_NAME","value":"${NAME}"},{"name":"V2_KEY","valueFrom":{"secretKeyRef":{"key":"v2-key","name":"${NAME}-secrets"}}},{"name":"ANSIBLE_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"admin-password","name":"${ANSIBLE_SERVICE_NAME}-secrets"}}}],"image":"${BACKEND_APPLICATION_IMG_NAME}:${BACKEND_APPLICATION_IMG_TAG}","lifecycle":{"preStop":{"exec":{"command":["/opt/rh/cfme-container-scripts/sync-pv-data"]}}},"livenessProbe":{"exec":{"command":["pidof","MIQ
        Server"]},"initialDelaySeconds":480,"timeoutSeconds":3},"name":"cloudforms","resources":{"limits":{"memory":"${APPLICATION_MEM_LIMIT}"},"requests":{"cpu":"${APPLICATION_CPU_REQ}","memory":"${APPLICATION_MEM_REQ}"}},"volumeMounts":[{"mountPath":"/persistent","name":"${NAME}-server"}]}],"serviceAccount":"cfme-orchestrator","serviceAccountName":"cfme-orchestrator","terminationGracePeriodSeconds":90}},"volumeClaimTemplates":[{"metadata":{"annotations":null,"name":"${NAME}-server"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${APPLICATION_VOLUME_CAPACITY}"}}}}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the memcached server"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"ports":[{"name":"memcached","port":11211,"targetPort":11211}],"selector":{"name":"${MEMCACHED_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy memcached"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${MEMCACHED_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${MEMCACHED_SERVICE_NAME}"},"name":"${MEMCACHED_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"MEMCACHED_MAX_MEMORY","value":"${MEMCACHED_MAX_MEMORY}"},{"name":"MEMCACHED_MAX_CONNECTIONS","value":"${MEMCACHED_MAX_CONNECTIONS}"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","value":"${MEMCACHED_SLAB_PAGE_SIZE}"}],"image":"${MEMCACHED_IMG_NAME}:${MEMCACHED_IMG_TAG}","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":11211},"timeoutSeconds":1},"name":"memcached","ports":[{"containerPort":11211}],"readinessProbe":{"initialDelaySeconds":5,"tcpSocket":{"port":11211},"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMCACHED_MEM_LIMIT}"},"requests":{"cpu":"${MEMCACHED_CPU_REQ}","memory":"${MEMCACHED_MEM_REQ}"}},"volumeMounts":[]}],"volumes":[]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","port":5432,"targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DATABASE_USER}"},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"pg-password","name":"${NAME}-secrets"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"${POSTGRESQL_IMG_NAME}:${POSTGRESQL_IMG_TAG}","livenessProbe":{"initialDelaySeconds":60,"tcpSocket":{"port":5432},"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":15,"timeoutSeconds":1},"resources":{"limits":{"memory":"${POSTGRESQL_MEM_LIMIT}"},"requests":{"cpu":"${POSTGRESQL_CPU_REQ}","memory":"${POSTGRESQL_MEM_REQ}"}},"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"cfme-pgdb-volume"},{"mountPath":"/opt/app-root/src/postgresql-config/","name":"cfme-pg-configs"}]}],"volumes":[{"name":"cfme-pgdb-volume","persistentVolumeClaim":{"claimName":"${NAME}-${DATABASE_SERVICE_NAME}"}},{"configMap":{"name":"${DATABASE_SERVICE_NAME}-configs"},"name":"cfme-pg-configs"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances Ansible pods","service.alpha.openshift.io/dependencies":"[{\"name\":\"${DATABASE_SERVICE_NAME}\",\"namespace\":\"\",\"kind\":\"Service\"}]"},"name":"${ANSIBLE_SERVICE_NAME}"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":80},{"name":"https","port":443,"protocol":"TCP","targetPort":443}],"selector":{"name":"${ANSIBLE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the Ansible appliance"},"name":"${ANSIBLE_SERVICE_NAME}"},"spec":{"replicas":0,"serviceName":"${ANSIBLE_SERVICE_NAME}","strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${ANSIBLE_SERVICE_NAME}"},"name":"${ANSIBLE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"admin-password","name":"${ANSIBLE_SERVICE_NAME}-secrets"}}},{"name":"RABBITMQ_USER_NAME","value":"${ANSIBLE_RABBITMQ_USER_NAME}"},{"name":"RABBITMQ_PASSWORD","valueFrom":{"secretKeyRef":{"key":"rabbit-password","name":"${ANSIBLE_SERVICE_NAME}-secrets"}}},{"name":"ANSIBLE_SECRET_KEY","valueFrom":{"secretKeyRef":{"key":"secret-key","name":"${ANSIBLE_SERVICE_NAME}-secrets"}}},{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"POSTGRESQL_USER","value":"${DATABASE_USER}"},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"pg-password","name":"${NAME}-secrets"}}},{"name":"POSTGRESQL_DATABASE","value":"${ANSIBLE_DATABASE_NAME}"}],"image":"${ANSIBLE_IMG_NAME}:${ANSIBLE_IMG_TAG}","livenessProbe":{"initialDelaySeconds":480,"tcpSocket":{"port":443},"timeoutSeconds":3},"name":"ansible","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":443,"protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/","port":443,"scheme":"HTTPS"},"initialDelaySeconds":200,"timeoutSeconds":3},"resources":{"limits":{"memory":"${ANSIBLE_MEM_LIMIT}"},"requests":{"cpu":"${ANSIBLE_CPU_REQ}","memory":"${ANSIBLE_MEM_REQ}"}},"securityContext":{"privileged":true}}],"serviceAccount":"cfme-privileged","serviceAccountName":"cfme-privileged"}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the httpd server","service.alpha.openshift.io/dependencies":"[{\"name\":\"${NAME}\",\"namespace\":\"\",\"kind\":\"Service\"}]"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"ports":[{"name":"http","port":80,"targetPort":80}],"selector":{"name":"httpd"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the httpd server dbus api","service.alpha.openshift.io/dependencies":"[{\"name\":\"${NAME}\",\"namespace\":\"\",\"kind\":\"Service\"}]"},"name":"${HTTPD_DBUS_API_SERVICE_NAME}"},"spec":{"ports":[{"name":"http-dbus-api","port":8080,"targetPort":8080}],"selector":{"name":"httpd"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy httpd"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${HTTPD_SERVICE_NAME}"},"strategy":{"recreateParams":{"timeoutSeconds":1200},"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${HTTPD_SERVICE_NAME}"},"name":"${HTTPD_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"HTTPD_AUTH_TYPE","valueFrom":{"configMapKeyRef":{"key":"auth-type","name":"${HTTPD_SERVICE_NAME}-auth-configs"}}},{"name":"HTTPD_AUTH_KERBEROS_REALMS","valueFrom":{"configMapKeyRef":{"key":"auth-kerberos-realms","name":"${HTTPD_SERVICE_NAME}-auth-configs"}}}],"image":"${HTTPD_IMG_NAME}:${HTTPD_IMG_TAG}","lifecycle":{"postStart":{"exec":{"command":["/usr/bin/save-container-environment"]}}},"livenessProbe":{"exec":{"command":["pidof","httpd"]},"initialDelaySeconds":15,"timeoutSeconds":3},"name":"httpd","ports":[{"containerPort":80,"protocol":"TCP"},{"containerPort":8080,"protocol":"TCP"}],"readinessProbe":{"initialDelaySeconds":10,"tcpSocket":{"port":80},"timeoutSeconds":3},"resources":{"limits":{"memory":"${HTTPD_MEM_LIMIT}"},"requests":{"cpu":"${HTTPD_CPU_REQ}","memory":"${HTTPD_MEM_REQ}"}},"volumeMounts":[{"mountPath":"${HTTPD_CONFIG_DIR}","name":"httpd-config"},{"mountPath":"${HTTPD_AUTH_CONFIG_DIR}","name":"httpd-auth-config"}]}],"serviceAccount":"cfme-httpd","serviceAccountName":"cfme-httpd","volumes":[{"configMap":{"name":"${HTTPD_SERVICE_NAME}-configs"},"name":"httpd-config"},{"configMap":{"name":"${HTTPD_SERVICE_NAME}-auth-configs"},"name":"httpd-auth-config"}]}},"triggers":[{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"cloudforms","required":true},{"name":"V2_KEY","displayName":"CloudForms
        Encryption Key","description":"Encryption Key for CloudForms Passwords","generate":"expression","from":"[a-zA-Z0-9]{43}","required":true},{"name":"DATABASE_SERVICE_NAME","displayName":"PostgreSQL
        Service Name","description":"The name of the OpenShift Service exposed for
        the PostgreSQL container.","value":"postgresql","required":true},{"name":"DATABASE_USER","displayName":"PostgreSQL
        User","description":"PostgreSQL user that will access the database.","value":"root","required":true},{"name":"DATABASE_PASSWORD","displayName":"PostgreSQL
        Password","description":"Password for the PostgreSQL user.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DATABASE_NAME","displayName":"PostgreSQL
        Database Name","description":"Name of the PostgreSQL database accessed.","value":"vmdb_production","required":true},{"name":"DATABASE_REGION","displayName":"Application
        Database Region","description":"Database region that will be used for application.","value":"0","required":true},{"name":"APPLICATION_ADMIN_PASSWORD","displayName":"Application
        Admin Password","description":"Admin password that will be set on the application.","value":"smartvm","required":true},{"name":"ANSIBLE_DATABASE_NAME","displayName":"Ansible
        PostgreSQL database name","description":"The database to be used by the Ansible
        continer","value":"awx","required":true},{"name":"MEMCACHED_SERVICE_NAME","displayName":"Memcached
        Service Name","description":"The name of the OpenShift Service exposed for
        the Memcached container.","value":"memcached","required":true},{"name":"MEMCACHED_MAX_MEMORY","displayName":"Memcached
        Max Memory","description":"Memcached maximum memory for memcached object storage
        in MB.","value":"64"},{"name":"MEMCACHED_MAX_CONNECTIONS","displayName":"Memcached
        Max Connections","description":"Memcached maximum number of connections allowed.","value":"1024"},{"name":"MEMCACHED_SLAB_PAGE_SIZE","displayName":"Memcached
        Slab Page Size","description":"Memcached size of each slab page.","value":"1m"},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Max Connections","description":"PostgreSQL maximum number of database connections
        allowed.","value":"1000"},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffer Amount","description":"Amount of memory dedicated for PostgreSQL
        shared memory buffers.","value":"1GB"},{"name":"ANSIBLE_SERVICE_NAME","displayName":"Ansible
        Service Name","description":"The name of the OpenShift Service exposed for
        the Ansible container.","value":"ansible"},{"name":"ANSIBLE_ADMIN_PASSWORD","displayName":"Ansible
        admin User password","description":"The password for the Ansible container
        admin user","generate":"expression","from":"[a-zA-Z0-9]{32}","required":true},{"name":"ANSIBLE_SECRET_KEY","displayName":"Ansible
        Secret Key","description":"Encryption key for the Ansible container","generate":"expression","from":"[a-f0-9]{32}","required":true},{"name":"ANSIBLE_RABBITMQ_USER_NAME","displayName":"RabbitMQ
        Username","description":"Username for the Ansible RabbitMQ Server","value":"ansible","required":true},{"name":"ANSIBLE_RABBITMQ_PASSWORD","displayName":"RabbitMQ
        Server Password","description":"Password for the Ansible RabbitMQ Server","generate":"expression","from":"[a-zA-Z0-9]{32}","required":true},{"name":"APPLICATION_CPU_REQ","displayName":"Application
        Min CPU Requested","description":"Minimum amount of CPU time the Application
        container will need (expressed in millicores).","value":"1000m","required":true},{"name":"POSTGRESQL_CPU_REQ","displayName":"PostgreSQL
        Min CPU Requested","description":"Minimum amount of CPU time the PostgreSQL
        container will need (expressed in millicores).","value":"500m","required":true},{"name":"MEMCACHED_CPU_REQ","displayName":"Memcached
        Min CPU Requested","description":"Minimum amount of CPU time the Memcached
        container will need (expressed in millicores).","value":"200m","required":true},{"name":"ANSIBLE_CPU_REQ","displayName":"Ansible
        Min CPU Requested","description":"Minimum amount of CPU time the Ansible container
        will need (expressed in millicores).","value":"1000m","required":true},{"name":"APPLICATION_MEM_REQ","displayName":"Application
        Min RAM Requested","description":"Minimum amount of memory the Application
        container will need.","value":"6144Mi","required":true},{"name":"POSTGRESQL_MEM_REQ","displayName":"PostgreSQL
        Min RAM Requested","description":"Minimum amount of memory the PostgreSQL
        container will need.","value":"4Gi","required":true},{"name":"MEMCACHED_MEM_REQ","displayName":"Memcached
        Min RAM Requested","description":"Minimum amount of memory the Memcached container
        will need.","value":"64Mi","required":true},{"name":"ANSIBLE_MEM_REQ","displayName":"Ansible
        Min RAM Requested","description":"Minimum amount of memory the Ansible container
        will need.","value":"2048Mi","required":true},{"name":"APPLICATION_MEM_LIMIT","displayName":"Application
        Max RAM Limit","description":"Maximum amount of memory the Application container
        can consume.","value":"16384Mi","required":true},{"name":"POSTGRESQL_MEM_LIMIT","displayName":"PostgreSQL
        Max RAM Limit","description":"Maximum amount of memory the PostgreSQL container
        can consume.","value":"8Gi","required":true},{"name":"MEMCACHED_MEM_LIMIT","displayName":"Memcached
        Max RAM Limit","description":"Maximum amount of memory the Memcached container
        can consume.","value":"256Mi","required":true},{"name":"ANSIBLE_MEM_LIMIT","displayName":"Ansible
        Max RAM Limit","description":"Maximum amount of memory the Ansible container
        can consume.","value":"8096Mi","required":true},{"name":"POSTGRESQL_IMG_NAME","displayName":"PostgreSQL
        Image Name","description":"This is the PostgreSQL image name requested to
        deploy.","value":"registry.access.redhat.com/cloudforms46/cfme-openshift-postgresql"},{"name":"POSTGRESQL_IMG_TAG","displayName":"PostgreSQL
        Image Tag","description":"This is the PostgreSQL image tag/version requested
        to deploy.","value":"latest"},{"name":"MEMCACHED_IMG_NAME","displayName":"Memcached
        Image Name","description":"This is the Memcached image name requested to deploy.","value":"registry.access.redhat.com/cloudforms46/cfme-openshift-memcached"},{"name":"MEMCACHED_IMG_TAG","displayName":"Memcached
        Image Tag","description":"This is the Memcached image tag/version requested
        to deploy.","value":"latest"},{"name":"FRONTEND_APPLICATION_IMG_NAME","displayName":"Frontend
        Application Image Name","description":"This is the Frontend Application image
        name requested to deploy.","value":"registry.access.redhat.com/cloudforms46/cfme-openshift-app-ui"},{"name":"BACKEND_APPLICATION_IMG_NAME","displayName":"Backend
        Application Image Name","description":"This is the Backend Application image
        name requested to deploy.","value":"registry.access.redhat.com/cloudforms46/cfme-openshift-app"},{"name":"FRONTEND_APPLICATION_IMG_TAG","displayName":"Front
        end Application Image Tag","description":"This is the CloudForms Frontend
        Application image tag/version requested to deploy.","value":"latest"},{"name":"BACKEND_APPLICATION_IMG_TAG","displayName":"Back
        end Application Image Tag","description":"This is the CloudForms Backend Application
        image tag/version requested to deploy.","value":"latest"},{"name":"ANSIBLE_IMG_NAME","displayName":"Ansible
        Image Name","description":"This is the Ansible image name requested to deploy.","value":"registry.access.redhat.com/cloudforms46/cfme-openshift-embedded-ansible"},{"name":"ANSIBLE_IMG_TAG","displayName":"Ansible
        Image Tag","description":"This is the Ansible image tag/version requested
        to deploy.","value":"latest"},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the application
        service, if left blank a value will be defaulted."},{"name":"APPLICATION_REPLICA_COUNT","displayName":"Application
        Replica Count","description":"This is the number of Application replicas requested
        to deploy.","value":"1"},{"name":"APPLICATION_INIT_DELAY","displayName":"Application
        Init Delay","description":"Delay in seconds before we attempt to initialize
        the application.","value":"15","required":true},{"name":"APPLICATION_VOLUME_CAPACITY","displayName":"Application
        Volume Capacity","description":"Volume space available for application data.","value":"5Gi","required":true},{"name":"DATABASE_VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Volume space available for database.","value":"15Gi","required":true},{"name":"HTTPD_SERVICE_NAME","displayName":"Apache
        httpd Service Name","description":"The name of the OpenShift Service exposed
        for the httpd container.","value":"httpd","required":true},{"name":"HTTPD_DBUS_API_SERVICE_NAME","displayName":"Apache
        httpd DBus API Service Name","description":"The name of httpd dbus api service.","value":"httpd-dbus-api","required":true},{"name":"HTTPD_IMG_NAME","displayName":"Apache
        httpd Image Name","description":"This is the httpd image name requested to
        deploy.","value":"registry.access.redhat.com/cloudforms46/cfme-openshift-httpd"},{"name":"HTTPD_IMG_TAG","displayName":"Apache
        httpd Image Tag","description":"This is the httpd image tag/version requested
        to deploy.","value":"latest"},{"name":"HTTPD_CONFIG_DIR","displayName":"Apache
        Configuration Directory","description":"Directory used to store the Apache
        configuration files.","value":"/etc/httpd/conf.d"},{"name":"HTTPD_AUTH_CONFIG_DIR","displayName":"External
        Authentication Configuration Directory","description":"Directory used to store
        the external authentication configuration files.","value":"/etc/httpd/auth-conf.d"},{"name":"HTTPD_CPU_REQ","displayName":"Apache
        httpd Min CPU Requested","description":"Minimum amount of CPU time the httpd
        container will need (expressed in millicores).","value":"500m","required":true},{"name":"HTTPD_MEM_REQ","displayName":"Apache
        httpd Min RAM Requested","description":"Minimum amount of memory the httpd
        container will need.","value":"512Mi","required":true},{"name":"HTTPD_MEM_LIMIT","displayName":"Apache
        httpd Max RAM Limit","description":"Maximum amount of memory the httpd container
        can consume.","value":"8192Mi","required":true}],"labels":{"template":"cloudforms"}},{"metadata":{"name":"cloudforms-app-pv","namespace":"openshift-management","selfLink":"/oapi/v1/namespaces/openshift-management/templates/cloudforms-app-pv","uid":"a4c1cf29-5ea1-11e8-ba7e-d094660d31fb","resourceVersion":"4842576","creationTimestamp":"2018-05-23T15:54:58Z","annotations":{"description":"PV
        Template for CFME Server","tags":"PVS, CFME"}},"objects":[{"apiVersion":"v1","kind":"PersistentVolume","metadata":{"name":"cfme-app"},"spec":{"accessModes":["ReadWriteOnce"],"capacity":{"storage":"${PV_SIZE}"},"nfs":{"path":"${BASE_PATH}/cfme-app","server":"${NFS_HOST}"},"persistentVolumeReclaimPolicy":"Retain"}}],"parameters":[{"name":"PV_SIZE","displayName":"PV
        Size for App","description":"The size of the CFME APP PV given in Gi","value":"5Gi","required":true},{"name":"BASE_PATH","displayName":"Exports
        Directory Base Path","description":"The parent directory of your NFS exports","value":"/exports","required":true},{"name":"NFS_HOST","displayName":"NFS
        Server Hostname","description":"The hostname or IP address of the NFS server","required":true}],"labels":{"template":"cloudforms-app-pv"}},{"metadata":{"name":"cloudforms-db-pv","namespace":"openshift-management","selfLink":"/oapi/v1/namespaces/openshift-management/templates/cloudforms-db-pv","uid":"a624154a-5ea1-11e8-ba7e-d094660d31fb","resourceVersion":"4842588","creationTimestamp":"2018-05-23T15:55:00Z","annotations":{"description":"PV
        Template for CFME PostgreSQL DB","tags":"PVS, CFME"}},"objects":[{"apiVersion":"v1","kind":"PersistentVolume","metadata":{"name":"cfme-db"},"spec":{"accessModes":["ReadWriteOnce"],"capacity":{"storage":"${PV_SIZE}"},"nfs":{"path":"${BASE_PATH}/cfme-db","server":"${NFS_HOST}"},"persistentVolumeReclaimPolicy":"Retain"}}],"parameters":[{"name":"PV_SIZE","displayName":"PV
        Size for DB","description":"The size of the CFME DB PV given in Gi","value":"15Gi","required":true},{"name":"BASE_PATH","displayName":"Exports
        Directory Base Path","description":"The parent directory of your NFS exports","value":"/exports","required":true},{"name":"NFS_HOST","displayName":"NFS
        Server Hostname","description":"The hostname or IP address of the NFS server","required":true}],"labels":{"template":"cloudforms-db-pv"}},{"metadata":{"name":"3scale-gateway","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/3scale-gateway","uid":"199737e0-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687242","creationTimestamp":"2018-02-08T20:46:12Z","annotations":{"description":"3scale
        API Gateway","iconClass":"icon-load-balancer","tags":"api,gateway,3scale"}},"objects":[{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"${APICAST_NAME}"},"spec":{"replicas":2,"selector":{"deploymentconfig":"${APICAST_NAME}"},"strategy":{"type":"Rolling"},"template":{"metadata":{"labels":{"deploymentconfig":"${APICAST_NAME}"}},"spec":{"containers":[{"env":[{"name":"THREESCALE_PORTAL_ENDPOINT","valueFrom":{"secretKeyRef":{"key":"password","name":"${CONFIGURATION_URL_SECRET}"}}},{"name":"THREESCALE_CONFIG_FILE","value":"${CONFIGURATION_FILE_PATH}"},{"name":"THREESCALE_DEPLOYMENT_ENV","value":"${DEPLOYMENT_ENVIRONMENT}"},{"name":"RESOLVER","value":"${RESOLVER}"},{"name":"APICAST_SERVICES","value":"${SERVICES_LIST}"},{"name":"APICAST_CONFIGURATION_LOADER","value":"${CONFIGURATION_LOADER}"},{"name":"APICAST_LOG_LEVEL","value":"${LOG_LEVEL}"},{"name":"APICAST_PATH_ROUTING_ENABLED","value":"${PATH_ROUTING}"},{"name":"APICAST_RESPONSE_CODES","value":"${RESPONSE_CODES}"},{"name":"APICAST_CONFIGURATION_CACHE","value":"${CONFIGURATION_CACHE}"},{"name":"REDIS_URL","value":"${REDIS_URL}"},{"name":"APICAST_MANAGEMENT_API","value":"${MANAGEMENT_API}"},{"name":"OPENSSL_VERIFY","value":"${OPENSSL_VERIFY}"}],"image":"3scale-amp20/apicast-gateway:1.0-3","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/status/live","port":"management"},"initialDelaySeconds":10,"timeoutSeconds":1},"name":"${APICAST_NAME}","ports":[{"containerPort":8080,"name":"proxy","protocol":"TCP"},{"containerPort":8090,"name":"management","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/status/ready","port":"management"},"initialDelaySeconds":15,"timeoutSeconds":1}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"${APICAST_NAME}"},"spec":{"ports":[{"name":"proxy","port":8080,"protocol":"TCP","targetPort":8080},{"name":"management","port":8090,"protocol":"TCP","targetPort":8090}],"selector":{"deploymentconfig":"${APICAST_NAME}"}}}],"parameters":[{"name":"AMP_RELEASE","description":"AMP
        release tag.","value":"2.0.0-CR2-redhat-1","required":true},{"name":"CONFIGURATION_URL_SECRET","description":"Name
        of the secret containing the THREESCALE_PORTAL_ENDPOINT with the access-token
        or provider key","value":"apicast-configuration-url-secret","required":true},{"name":"CONFIGURATION_FILE_PATH","description":"Path
        to saved JSON file with configuration for the gateway. Has to be injected
        to the docker image as read only volume."},{"name":"DEPLOYMENT_ENVIRONMENT","description":"Deployment
        environment. Can be sandbox or production.","value":"production","required":true},{"name":"APICAST_NAME","description":"Name
        for the 3scale API Gateway","value":"apicast","required":true},{"name":"RESOLVER","description":"DNS
        Resolver for openresty, if empty it will be autodiscovered"},{"name":"SERVICES_LIST","description":"Subset
        of services to run. Use comma separated list of service ids (eg. 42,1337)"},{"name":"CONFIGURATION_LOADER","description":"When
        to load configuration. If on gateway start or incoming request. Allowed values
        are: lazy, boot.","value":"boot"},{"name":"LOG_LEVEL","description":"Log level.
        One of the following: debug, info, notice, warn, error, crit, alert, or emerg."},{"name":"PATH_ROUTING","description":"Enable
        path routing. Experimental feature.","value":"false"},{"name":"RESPONSE_CODES","description":"Enable
        logging response codes to 3scale.","value":"false"},{"name":"CONFIGURATION_CACHE","description":"For
        how long to cache the downloaded configuration in seconds. Can be left empty,
        0 or greater than 60."},{"name":"REDIS_URL","description":"Redis URL. Required
        for OAuth2 integration. ex: redis://PASSWORD@127.0.0.1:6379/0"},{"name":"MANAGEMENT_API","description":"Scope
        of the Management API. Can be disabled, status or debug. At least status required
        for health checks.","value":"status"},{"name":"OPENSSL_VERIFY","description":"Turn
        on/off the OpenSSL peer verification. Can be set to true/false.","value":"false","required":true}]},{"metadata":{"name":"amp-apicast-wildcard-router","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/amp-apicast-wildcard-router","uid":"19a93cec-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687243","creationTimestamp":"2018-02-08T20:46:13Z"},"objects":[{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"apicast-router"},"spec":{"replicas":1,"selector":{"deploymentconfig":"apicast-router"},"strategy":{"type":"Rolling"},"template":{"metadata":{"labels":{"deploymentconfig":"apicast-router"}},"spec":{"containers":[{"command":["bin/apicast"],"env":[{"name":"APICAST_CONFIGURATION_LOADER","value":"lazy"},{"name":"APICAST_CONFIGURATION_CACHE","value":"0"}],"image":"3scale-amp20/apicast-gateway:1.0-3","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":5,"periodSeconds":10,"tcpSocket":{"port":"router"},"timeoutSeconds":5},"name":"apicast-router","ports":[{"containerPort":8082,"name":"router","protocol":"TCP"},{"containerPort":8090,"name":"management","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/status/ready","port":"management"},"initialDelaySeconds":5,"periodSeconds":30,"timeoutSeconds":5},"volumeMounts":[{"mountPath":"/opt/app-root/src/sites.d/","name":"apicast-router-config","readOnly":true}]}],"volumes":[{"configMap":{"items":[{"key":"router.conf","path":"router.conf"}],"name":"apicast-router-config"},"name":"apicast-router-config"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"apicast-router"},"spec":{"ports":[{"name":"router","port":80,"protocol":"TCP","targetPort":"router"}],"selector":{"deploymentconfig":"apicast-router"}}},{"apiVersion":"v1","data":{"router.conf":"upstream
        wildcard {\n  server 0.0.0.1:1;\n\n  balancer_by_lua_block {\n    local round_robin
        = require ''resty.balancer.round_robin''\n    local balancer = round_robin.new()\n    local
        peers = balancer:peers(ngx.ctx.apicast)\n\n    local peer, err = balancer:set_peer(peers)\n\n    if
        not peer then\n      ngx.status = ngx.HTTP_SERVICE_UNAVAILABLE\n      ngx.log(ngx.ERR,
        \"failed to set current backend peer: \", err)\n      ngx.exit(ngx.status)\n    end\n  }\n\n  keepalive
        1024;\n}\n\nserver {\n  listen 8082;\n  server_name ~-(?\u003capicast\u003eapicast-(staging|production))\\.;\n  access_log
        /dev/stdout combined;\n\n  location / {\n    access_by_lua_block {\n      local
        resolver = require(''resty.resolver''):instance()\n      local servers = resolver:get_servers(ngx.var.apicast,
        { port = 8080 })\n\n      if #servers == 0 then\n        ngx.status = ngx.HTTP_BAD_GATEWAY\n        ngx.exit(ngx.HTTP_OK)\n      end\n\n      ngx.ctx.apicast
        = servers\n    }\n    proxy_http_version 1.1;\n    proxy_pass $scheme://wildcard;\n    proxy_set_header
        Host $host;\n    proxy_set_header Connection \"\";\n  }\n}"},"kind":"ConfigMap","metadata":{"name":"apicast-router-config"}},{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"app":"apicast-wildcard-router"},"name":"apicast-wildcard-router"},"spec":{"host":"apicast-${TENANT_NAME}.${WILDCARD_DOMAIN}","port":{"targetPort":"router"},"tls":{"insecureEdgeTerminationPolicy":"Allow","termination":"edge"},"to":{"kind":"Service","name":"apicast-router"},"wildcardPolicy":"Subdomain"}}],"parameters":[{"name":"AMP_RELEASE","description":"AMP
        release tag.","value":"2.0.0-CR2-redhat-1","required":true},{"name":"WILDCARD_DOMAIN","description":"Root
        domain for the wildcard routes. Eg. example.com will generate 3scale-admin.example.com.","required":true},{"name":"TENANT_NAME","description":"Domain
        name under the root that Admin UI will be available with -admin suffix.","value":"3scale","required":true}]},{"metadata":{"name":"amp-pvc","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/amp-pvc","uid":"19a6578a-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687244","creationTimestamp":"2018-02-08T20:46:13Z"},"objects":[{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"system-storage"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"100Mi"}}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"mysql-storage"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"system-redis-storage"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"backend-redis-storage"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}}]},{"metadata":{"name":"amq62-basic","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/amq62-basic","uid":"1ae6b8c6-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687245","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JBoss A-MQ brokers. These can be deployed as standalone or in
        a mesh. This template doesn''t feature SSL support.","iconClass":"icon-amq","openshift.io/display-name":"JBoss
        A-MQ 6.2 (Ephemeral, no SSL)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"messaging,amq,jboss,hidden","version":"1.4.8"}},"message":"A
        new messaging service has been created in your project. It will handle the
        protocol(s) \"${MQ_PROTOCOL}\". The username/password for accessing the service
        is ${MQ_USERNAME}/${MQ_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp"},"spec":{"ports":[{"port":5672,"targetPort":5672}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt"},"spec":{"ports":[{"port":1883,"targetPort":1883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp"},"spec":{"ports":[{"port":61613,"targetPort":61613}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-amqp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp\", \"kind\":
        \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","value":"${AMQ_QUEUE_MEMORY_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"broker","required":true},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Protocols to configure, separated by commas. Allowed
        values are: `openwire`, `amqp`, `stomp` and `mqtt`.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. If left empty, queues will be still created dynamically."},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. If left empty, topics will be still created dynamically."},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","displayName":"Queue
        Memory Limit","description":"The queue memory limit (default is 1mb)"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"amq62-basic","xpaas":"1.4.8"}},{"metadata":{"name":"amq62-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/amq62-persistent","uid":"1ae93ba4-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687246","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JBoss A-MQ brokers. These can be deployed as standalone and use
        persistent storage for saving messages, including message migration when the
        number of pods are reduced. This template doesn''t feature SSL support.","iconClass":"icon-amq","openshift.io/display-name":"JBoss
        A-MQ 6.2 (no SSL)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"messaging,amq,jboss,hidden","version":"1.4.8"}},"message":"A
        new persistent messaging service has been created in your project. It will
        handle the protocol(s) \"${MQ_PROTOCOL}\". The username/password for accessing
        the service is ${MQ_USERNAME}/${MQ_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp"},"spec":{"ports":[{"port":5672,"targetPort":5672}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt"},"spec":{"ports":[{"port":1883,"targetPort":1883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp"},"spec":{"ports":[{"port":61613,"targetPort":61613}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-amqp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp\", \"kind\":
        \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","value":"${AMQ_QUEUE_MEMORY_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-drainer"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-drainer"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-drainer"},"name":"${APPLICATION_NAME}-drainer"},"spec":{"containers":[{"command":["/opt/amq/bin/drain.sh"],"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-drainer","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"}],"volumeMounts":[{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-drainer"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"broker","required":true},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh, this
        is now the default behaviour.","value":"true"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Protocols to configure, separated by commas.  Allowed
        values are: `openwire`, `amqp`, `stomp` and `mqtt`.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas.  These queues will be automatically created when
        the broker starts.  If left empty, queues will be still created dynamically."},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas.  These topics will be automatically created when
        the broker starts.  If left empty, topics will be still created dynamically."},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"VOLUME_CAPACITY","displayName":"A-MQ
        Volume Size","description":"Size of the volume used by A-MQ for persisting
        messages.","value":"1Gi","required":true},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user.  It is required
        for connecting to the broker.  If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user.  It is required
        for connecting to the broker.  If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","displayName":"Queue
        Memory Limit","description":"The queue memory limit (default is 1mb)"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"amq62-persistent","xpaas":"1.4.8"}},{"metadata":{"name":"amq62-persistent-ssl","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/amq62-persistent-ssl","uid":"1ae81e19-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687247","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-amq","openshift.io/display-name":"JBoss
        A-MQ 6.2 (with SSL)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"messaging,amq,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-amq/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss A-MQ 6.2 based
        application, including a deployment configuration, using persistence and secure
        communication using SSL.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent messaging service with SSL support has been created in your
        project. It will handle the protocol(s) \"${MQ_PROTOCOL}\". The username/password
        for accessing the service is ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure
        to create a secret named \"${AMQ_SECRET}\" containing the trust store and
        key store files (\"${AMQ_TRUSTSTORE}\" and \"${AMQ_KEYSTORE}\") used for serving
        secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp"},"spec":{"ports":[{"port":5672,"targetPort":5672}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp-ssl"},"spec":{"ports":[{"port":5671,"targetPort":5671}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt"},"spec":{"ports":[{"port":1883,"targetPort":1883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt-ssl"},"spec":{"ports":[{"port":8883,"targetPort":8883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp"},"spec":{"ports":[{"port":61613,"targetPort":61613}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp-ssl"},"spec":{"ports":[{"port":61612,"targetPort":61612}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire (SSL) port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-amqp\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt\", \"kind\":
        \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp\", \"kind\": \"Service\"},{\"name\":
        \"${APPLICATION_NAME}-amq-amqp-ssl\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt-ssl\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp-ssl\", \"kind\":
        \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp-ssl"},"spec":{"ports":[{"port":61617,"targetPort":61617}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_KEYSTORE_TRUSTSTORE_DIR","value":"/etc/amq-secret-volume"},{"name":"AMQ_TRUSTSTORE","value":"${AMQ_TRUSTSTORE}"},{"name":"AMQ_TRUSTSTORE_PASSWORD","value":"${AMQ_TRUSTSTORE_PASSWORD}"},{"name":"AMQ_KEYSTORE","value":"${AMQ_KEYSTORE}"},{"name":"AMQ_KEYSTORE_PASSWORD","value":"${AMQ_KEYSTORE_PASSWORD}"},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","value":"${AMQ_QUEUE_MEMORY_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":8883,"name":"mqtt-ssl","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/amq-secret-volume","name":"broker-secret-volume","readOnly":true},{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"broker-secret-volume","secret":{"secretName":"${AMQ_SECRET}"}},{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-drainer"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-drainer"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-drainer"},"name":"${APPLICATION_NAME}-drainer"},"spec":{"containers":[{"command":["/opt/amq/bin/drain.sh"],"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-drainer","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"}],"volumeMounts":[{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-drainer"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"broker","required":true},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh, this
        is now the default behaviour.","value":"true"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Protocols to configure, separated by commas.  Allowed
        values are: `openwire`, `amqp`, `stomp` and `mqtt`.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas.  These queues will be automatically created when
        the broker starts.  If left empty, queues will be still created dynamically."},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas.  These topics will be automatically created when
        the broker starts.  If left empty, topics will be still created dynamically."},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"VOLUME_CAPACITY","displayName":"A-MQ
        Volume Size","description":"Size of the volume used by A-MQ for persisting
        messages.","value":"1Gi","required":true},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user.  It is required
        for connecting to the broker.  If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user.  It is required
        for connecting to the broker.  If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_SECRET","displayName":"Secret
        Name","description":"Name of a secret containing SSL related files","value":"amq-app-secret","required":true},{"name":"AMQ_TRUSTSTORE","displayName":"Trust
        Store Filename","description":"SSL trust store filename","value":"broker.ts","required":true},{"name":"AMQ_TRUSTSTORE_PASSWORD","displayName":"Trust
        Store Password","description":"SSL trust store password","required":true},{"name":"AMQ_KEYSTORE","displayName":"A-MQ
        Keystore Filename","description":"SSL key store filename","value":"broker.ks","required":true},{"name":"AMQ_KEYSTORE_PASSWORD","displayName":"A-MQ
        Keystore Password","description":"Password for accessing SSL keystore","required":true},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","displayName":"Queue
        Memory Limit","description":"The queue memory limit (default is 1mb)"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"amq62-persistent-ssl","xpaas":"1.4.8"}},{"metadata":{"name":"amq62-ssl","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/amq62-ssl","uid":"1aea4305-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687248","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JBoss A-MQ brokers. These can be deployed as standalone or in
        a mesh. This template supports SSL and requires usage of OpenShift secrets.","iconClass":"icon-amq","openshift.io/display-name":"JBoss
        A-MQ 6.2 (Ephemeral with SSL)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"messaging,amq,jboss,hidden","version":"1.4.8"}},"message":"A
        new messaging service with SSL support has been created in your project. It
        will handle the protocol(s) \"${MQ_PROTOCOL}\". The username/password for
        accessing the service is ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure to
        create a secret named \"${AMQ_SECRET}\" containing the trust store and key
        store files (\"${AMQ_TRUSTSTORE}\" and \"${AMQ_KEYSTORE}\") used for serving
        secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp"},"spec":{"ports":[{"port":5672,"targetPort":5672}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp-ssl"},"spec":{"ports":[{"port":5671,"targetPort":5671}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt"},"spec":{"ports":[{"port":1883,"targetPort":1883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt-ssl"},"spec":{"ports":[{"port":8883,"targetPort":8883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp"},"spec":{"ports":[{"port":61613,"targetPort":61613}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp-ssl"},"spec":{"ports":[{"port":61612,"targetPort":61612}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire (SSL) port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-amqp\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt\", \"kind\":
        \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp\", \"kind\": \"Service\"},{\"name\":
        \"${APPLICATION_NAME}-amq-amqp-ssl\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt-ssl\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp-ssl\", \"kind\":
        \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp-ssl"},"spec":{"ports":[{"port":61617,"targetPort":61617}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_KEYSTORE_TRUSTSTORE_DIR","value":"/etc/amq-secret-volume"},{"name":"AMQ_TRUSTSTORE","value":"${AMQ_TRUSTSTORE}"},{"name":"AMQ_TRUSTSTORE_PASSWORD","value":"${AMQ_TRUSTSTORE_PASSWORD}"},{"name":"AMQ_KEYSTORE","value":"${AMQ_KEYSTORE}"},{"name":"AMQ_KEYSTORE_PASSWORD","value":"${AMQ_KEYSTORE_PASSWORD}"},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","value":"${AMQ_QUEUE_MEMORY_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":8883,"name":"mqtt-ssl","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/amq-secret-volume","name":"broker-secret-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"broker-secret-volume","secret":{"secretName":"${AMQ_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"broker","required":true},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Protocols to configure, separated by commas. Allowed
        values are: `openwire`, `amqp`, `stomp` and `mqtt`. SSL variants of these
        protocols will be configured automaticaly.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. If left empty, queues will be still created dynamically."},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. If left empty, topics will be still created dynamically."},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_SECRET","displayName":"Secret
        Name","description":"Name of a secret containing SSL related files","value":"amq-app-secret","required":true},{"name":"AMQ_TRUSTSTORE","displayName":"Trust
        Store Filename","description":"SSL trust store filename","value":"broker.ts","required":true},{"name":"AMQ_TRUSTSTORE_PASSWORD","displayName":"Trust
        Store Password","description":"SSL trust store password","required":true},{"name":"AMQ_KEYSTORE","displayName":"A-MQ
        Keystore Filename","description":"SSL key store filename","value":"broker.ks","required":true},{"name":"AMQ_KEYSTORE_PASSWORD","displayName":"A-MQ
        Keystore Password","description":"Password for accessing SSL keystore","required":true},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","displayName":"Queue
        Memory Limit","description":"The queue memory limit (default is 1mb)"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"amq62-ssl","xpaas":"1.4.8"}},{"metadata":{"name":"amq63-basic","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/amq63-basic","uid":"1aeb367d-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687249","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JBoss A-MQ brokers. These can be deployed as standalone or in
        a mesh. This template doesn''t feature SSL support.","iconClass":"icon-amq","openshift.io/display-name":"Red
        Hat JBoss A-MQ 6.3 (Ephemeral, no SSL)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"messaging,amq,jboss,hidden","version":"1.4.8"}},"message":"A
        new messaging service has been created in your project. It will handle the
        protocol(s) \"${MQ_PROTOCOL}\". The username/password for accessing the service
        is ${MQ_USERNAME}/${MQ_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp"},"spec":{"ports":[{"port":5672,"targetPort":5672}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt"},"spec":{"ports":[{"port":1883,"targetPort":1883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp"},"spec":{"ports":[{"port":61613,"targetPort":61613}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-amqp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp\", \"kind\":
        \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","value":"${AMQ_QUEUE_MEMORY_LIMIT}"}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"broker","required":true},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Protocols to configure, separated by commas. Allowed
        values are: `openwire`, `amqp`, `stomp` and `mqtt`.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. If left empty, queues will be still created dynamically."},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. If left empty, topics will be still created dynamically."},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","displayName":"Queue
        Memory Limit","description":"The queue memory limit (default is 1mb)"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"amq63-basic","xpaas":"1.4.8"}},{"metadata":{"name":"amq63-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/amq63-persistent","uid":"1aed7362-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687250","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-amq","openshift.io/display-name":"JBoss
        A-MQ 6.3 (no SSL)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"messaging,amq,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-amq/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss A-MQ 6.3 based
        application, including a deployment configuration and using persistence.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent messaging service has been created in your project. It will
        handle the protocol(s) \"${MQ_PROTOCOL}\". The username/password for accessing
        the service is ${MQ_USERNAME}/${MQ_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp"},"spec":{"ports":[{"port":5672,"targetPort":5672}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt"},"spec":{"ports":[{"port":1883,"targetPort":1883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp"},"spec":{"ports":[{"port":61613,"targetPort":61613}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-amqp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp\", \"kind\":
        \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","value":"${AMQ_QUEUE_MEMORY_LIMIT}"}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-drainer"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-drainer"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-drainer"},"name":"${APPLICATION_NAME}-drainer"},"spec":{"containers":[{"command":["/opt/amq/bin/drain.sh"],"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-drainer","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"}],"volumeMounts":[{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-drainer"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"broker","required":true},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh, this
        is now the default behaviour.","value":"true"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Protocols to configure, separated by commas.  Allowed
        values are: `openwire`, `amqp`, `stomp` and `mqtt`.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas.  These queues will be automatically created when
        the broker starts.  If left empty, queues will be still created dynamically."},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas.  These topics will be automatically created when
        the broker starts.  If left empty, topics will be still created dynamically."},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"VOLUME_CAPACITY","displayName":"A-MQ
        Volume Size","description":"Size of the volume used by A-MQ for persisting
        messages.","value":"1Gi","required":true},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user.  It is required
        for connecting to the broker.  If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user.  It is required
        for connecting to the broker.  If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","displayName":"Queue
        Memory Limit","description":"The queue memory limit (default is 1mb)"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"amq63-persistent","xpaas":"1.4.8"}},{"metadata":{"name":"amq63-persistent-ssl","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/amq63-persistent-ssl","uid":"1aec5f6c-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687251","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-amq","openshift.io/display-name":"JBoss
        A-MQ 6.3 (with SSL)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"messaging,amq,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-amq/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss A-MQ 6.3 based
        application, including a deployment configuration, using persistence and secure
        communication using SSL.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent messaging service with SSL support has been created in your
        project. It will handle the protocol(s) \"${MQ_PROTOCOL}\". The username/password
        for accessing the service is ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure
        to create a secret named \"${AMQ_SECRET}\" containing the trust store and
        key store files (\"${AMQ_TRUSTSTORE}\" and \"${AMQ_KEYSTORE}\") used for serving
        secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp"},"spec":{"ports":[{"port":5672,"targetPort":5672}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp-ssl"},"spec":{"ports":[{"port":5671,"targetPort":5671}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt"},"spec":{"ports":[{"port":1883,"targetPort":1883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt-ssl"},"spec":{"ports":[{"port":8883,"targetPort":8883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp"},"spec":{"ports":[{"port":61613,"targetPort":61613}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp-ssl"},"spec":{"ports":[{"port":61612,"targetPort":61612}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire (SSL) port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-amqp\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt\", \"kind\":
        \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp\", \"kind\": \"Service\"},{\"name\":
        \"${APPLICATION_NAME}-amq-amqp-ssl\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt-ssl\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp-ssl\", \"kind\":
        \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp-ssl"},"spec":{"ports":[{"port":61617,"targetPort":61617}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_KEYSTORE_TRUSTSTORE_DIR","value":"/etc/amq-secret-volume"},{"name":"AMQ_TRUSTSTORE","value":"${AMQ_TRUSTSTORE}"},{"name":"AMQ_TRUSTSTORE_PASSWORD","value":"${AMQ_TRUSTSTORE_PASSWORD}"},{"name":"AMQ_KEYSTORE","value":"${AMQ_KEYSTORE}"},{"name":"AMQ_KEYSTORE_PASSWORD","value":"${AMQ_KEYSTORE_PASSWORD}"},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","value":"${AMQ_QUEUE_MEMORY_LIMIT}"}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":8883,"name":"mqtt-ssl","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/amq-secret-volume","name":"broker-secret-volume","readOnly":true},{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"broker-secret-volume","secret":{"secretName":"${AMQ_SECRET}"}},{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-drainer"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-drainer"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-drainer"},"name":"${APPLICATION_NAME}-drainer"},"spec":{"containers":[{"command":["/opt/amq/bin/drain.sh"],"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-drainer","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"}],"volumeMounts":[{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-drainer"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"broker","required":true},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh, this
        is now the default behaviour.","value":"true"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Protocols to configure, separated by commas.  Allowed
        values are: `openwire`, `amqp`, `stomp` and `mqtt`.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas.  These queues will be automatically created when
        the broker starts.  If left empty, queues will be still created dynamically."},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas.  These topics will be automatically created when
        the broker starts.  If left empty, topics will be still created dynamically."},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"VOLUME_CAPACITY","displayName":"A-MQ
        Volume Size","description":"Size of the volume used by A-MQ for persisting
        messages.","value":"1Gi","required":true},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user.  It is required
        for connecting to the broker.  If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user.  It is required
        for connecting to the broker.  If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_SECRET","displayName":"Secret
        Name","description":"Name of a secret containing SSL related files","value":"amq-app-secret","required":true},{"name":"AMQ_TRUSTSTORE","displayName":"Trust
        Store Filename","description":"SSL trust store filename","value":"broker.ts","required":true},{"name":"AMQ_TRUSTSTORE_PASSWORD","displayName":"Trust
        Store Password","description":"SSL trust store password","required":true},{"name":"AMQ_KEYSTORE","displayName":"A-MQ
        Keystore Filename","description":"SSL key store filename","value":"broker.ks","required":true},{"name":"AMQ_KEYSTORE_PASSWORD","displayName":"A-MQ
        Keystore Password","description":"Password for accessing SSL keystore","required":true},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","displayName":"Queue
        Memory Limit","description":"The queue memory limit (default is 1mb)"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"amq63-persistent-ssl","xpaas":"1.4.8"}},{"metadata":{"name":"amq63-ssl","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/amq63-ssl","uid":"1aee88b9-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687252","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-amq","openshift.io/display-name":"JBoss
        A-MQ 6.3 (Ephemeral with SSL)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"messaging,amq,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-amq/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss A-MQ 6.2 based
        application, including a deployment configuration, using ephemeral (temporary)
        storage and secure communication using SSL. These can be deployed as standalone
        or in a mesh.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new messaging service with SSL support has been created in your project. It
        will handle the protocol(s) \"${MQ_PROTOCOL}\". The username/password for
        accessing the service is ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure to
        create a secret named \"${AMQ_SECRET}\" containing the trust store and key
        store files (\"${AMQ_TRUSTSTORE}\" and \"${AMQ_KEYSTORE}\") used for serving
        secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp"},"spec":{"ports":[{"port":5672,"targetPort":5672}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s AMQP SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-amqp-ssl"},"spec":{"ports":[{"port":5671,"targetPort":5671}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt"},"spec":{"ports":[{"port":1883,"targetPort":1883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s MQTT SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mqtt-ssl"},"spec":{"ports":[{"port":8883,"targetPort":8883}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp"},"spec":{"ports":[{"port":61613,"targetPort":61613}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s STOMP SSL port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-stomp-ssl"},"spec":{"ports":[{"port":61612,"targetPort":61612}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire (SSL) port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-amqp\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt\", \"kind\":
        \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp\", \"kind\": \"Service\"},{\"name\":
        \"${APPLICATION_NAME}-amq-amqp-ssl\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt-ssl\",
        \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp-ssl\", \"kind\":
        \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp-ssl"},"spec":{"ports":[{"port":61617,"targetPort":61617}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_KEYSTORE_TRUSTSTORE_DIR","value":"/etc/amq-secret-volume"},{"name":"AMQ_TRUSTSTORE","value":"${AMQ_TRUSTSTORE}"},{"name":"AMQ_TRUSTSTORE_PASSWORD","value":"${AMQ_TRUSTSTORE_PASSWORD}"},{"name":"AMQ_KEYSTORE","value":"${AMQ_KEYSTORE}"},{"name":"AMQ_KEYSTORE_PASSWORD","value":"${AMQ_KEYSTORE_PASSWORD}"},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","value":"${AMQ_QUEUE_MEMORY_LIMIT}"}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":8883,"name":"mqtt-ssl","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/amq-secret-volume","name":"broker-secret-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"broker-secret-volume","secret":{"secretName":"${AMQ_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"broker","required":true},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Protocols to configure, separated by commas. Allowed
        values are: `openwire`, `amqp`, `stomp` and `mqtt`. SSL variants of these
        protocols will be configured automaticaly.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. If left empty, queues will be still created dynamically."},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. If left empty, topics will be still created dynamically."},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_SECRET","displayName":"Secret
        Name","description":"Name of a secret containing SSL related files","value":"amq-app-secret","required":true},{"name":"AMQ_TRUSTSTORE","displayName":"Trust
        Store Filename","description":"SSL trust store filename","value":"broker.ts","required":true},{"name":"AMQ_TRUSTSTORE_PASSWORD","displayName":"Trust
        Store Password","description":"SSL trust store password","required":true},{"name":"AMQ_KEYSTORE","displayName":"A-MQ
        Keystore Filename","description":"SSL key store filename","value":"broker.ks","required":true},{"name":"AMQ_KEYSTORE_PASSWORD","displayName":"A-MQ
        Keystore Password","description":"Password for accessing SSL keystore","required":true},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"AMQ_QUEUE_MEMORY_LIMIT","displayName":"Queue
        Memory Limit","description":"The queue memory limit (default is 1mb)"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"amq63-ssl","xpaas":"1.4.8"}},{"metadata":{"name":"cakephp-mysql-example","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/cakephp-mysql-example","uid":"19996dd0-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689572","creationTimestamp":"2018-02-08T20:46:12Z","annotations":{"description":"An
        example CakePHP application with a MySQL database. For more information about
        using this template, including OpenShift considerations, see https://github.com/openshift/cakephp-ex/blob/master/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing.","iconClass":"icon-php","openshift.io/display-name":"CakePHP
        + MySQL (Ephemeral)","openshift.io/documentation-url":"https://github.com/openshift/cakephp-ex","openshift.io/long-description":"This
        template defines resources needed to develop a CakePHP application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.  The database is stored in non-persistent storage,
        so this configuration should be used for experimental purposes only.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,php,cakephp","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/cake-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"cakephp-secret-token":"${CAKEPHP_SECRET_TOKEN}","cakephp-security-cipher-seed":"${CAKEPHP_SECURITY_CIPHER_SEED}","cakephp-security-salt":"${CAKEPHP_SECURITY_SALT}","database-password":"${DATABASE_PASSWORD}","database-user":"${DATABASE_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{"script":"./lib/Cake/Console/cake
        test app AllTests"},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"COMPOSER_MIRROR","value":"${COMPOSER_MIRROR}"}],"from":{"kind":"ImageStreamTag","name":"php:7.0","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"recreateParams":{"pre":{"execNewPod":{"command":["./migrate-database.sh"],"containerName":"cakephp-mysql-example"},"failurePolicy":"Retry"}},"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"DATABASE_ENGINE","value":"${DATABASE_ENGINE}"},{"name":"DATABASE_NAME","value":"${DATABASE_NAME}"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"CAKEPHP_SECRET_TOKEN","valueFrom":{"secretKeyRef":{"key":"cakephp-secret-token","name":"${NAME}"}}},{"name":"CAKEPHP_SECURITY_SALT","valueFrom":{"secretKeyRef":{"key":"cakephp-security-salt","name":"${NAME}"}}},{"name":"CAKEPHP_SECURITY_CIPHER_SEED","valueFrom":{"secretKeyRef":{"key":"cakephp-security-cipher-seed","name":"${NAME}"}}},{"name":"OPCACHE_REVALIDATE_FREQ","value":"${OPCACHE_REVALIDATE_FREQ}"}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/health.php","port":8080},"initialDelaySeconds":30,"periodSeconds":60,"timeoutSeconds":3},"name":"cakephp-mysql-example","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/health.php","port":8080},"initialDelaySeconds":3,"periodSeconds":60,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["cakephp-mysql-example"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mysql","port":3306,"targetPort":3306}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"MYSQL_DATABASE","value":"${DATABASE_NAME}"}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":3306},"timeoutSeconds":1},"name":"mysql","ports":[{"containerPort":3306}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","MYSQL_PWD=''${DATABASE_PASSWORD}''
        mysql -h 127.0.0.1 -u ${DATABASE_USER} -D ${DATABASE_NAME} -e ''SELECT 1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_MYSQL_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"data"}]}],"volumes":[{"emptyDir":{},"name":"data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:5.7","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"cakephp-mysql-example","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the CakePHP container can use.","value":"512Mi","required":true},{"name":"MEMORY_MYSQL_LIMIT","displayName":"Memory
        Limit (MySQL)","description":"Maximum amount of memory the MySQL container
        can use.","value":"512Mi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/cakephp-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the CakePHP
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"mysql","required":true},{"name":"DATABASE_ENGINE","displayName":"Database
        Engine","description":"Database engine: postgresql, mysql or sqlite (default).","value":"mysql","required":true},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"default","required":true},{"name":"DATABASE_USER","displayName":"Database
        User","value":"cakephp","required":true},{"name":"DATABASE_PASSWORD","displayName":"Database
        Password","generate":"expression","from":"[a-zA-Z0-9]{16}"},{"name":"CAKEPHP_SECRET_TOKEN","displayName":"CakePHP
        secret token","description":"Set this to a long random string.","generate":"expression","from":"[\\w]{50}"},{"name":"CAKEPHP_SECURITY_SALT","displayName":"CakePHP
        Security Salt","description":"Security salt for session hash.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CAKEPHP_SECURITY_CIPHER_SEED","displayName":"CakePHP
        Security Cipher Seed","description":"Security cipher seed for session hash.","generate":"expression","from":"[0-9]{30}"},{"name":"OPCACHE_REVALIDATE_FREQ","displayName":"OPcache
        Revalidation Frequency","description":"How often to check script timestamps
        for updates, in seconds. 0 will result in OPcache checking for updates on
        every request.","value":"2"},{"name":"COMPOSER_MIRROR","displayName":"Custom
        Composer Mirror URL","description":"The custom Composer mirror URL"}],"labels":{"app":"cakephp-mysql-example","template":"cakephp-mysql-example"}},{"metadata":{"name":"cakephp-mysql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/cakephp-mysql-persistent","uid":"19982ec6-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689571","creationTimestamp":"2018-02-08T20:46:12Z","annotations":{"description":"An
        example CakePHP application with a MySQL database. For more information about
        using this template, including OpenShift considerations, see https://github.com/openshift/cakephp-ex/blob/master/README.md.","iconClass":"icon-php","openshift.io/display-name":"CakePHP
        + MySQL","openshift.io/documentation-url":"https://github.com/openshift/cakephp-ex","openshift.io/long-description":"This
        template defines resources needed to develop a CakePHP application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.","openshift.io/provider-display-name":"Red Hat,
        Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,php,cakephp","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/cake-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"cakephp-secret-token":"${CAKEPHP_SECRET_TOKEN}","cakephp-security-cipher-seed":"${CAKEPHP_SECURITY_CIPHER_SEED}","cakephp-security-salt":"${CAKEPHP_SECURITY_SALT}","database-password":"${DATABASE_PASSWORD}","database-user":"${DATABASE_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{"script":"./lib/Cake/Console/cake
        test app AllTests"},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"COMPOSER_MIRROR","value":"${COMPOSER_MIRROR}"}],"from":{"kind":"ImageStreamTag","name":"php:7.0","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"recreateParams":{"pre":{"execNewPod":{"command":["./migrate-database.sh"],"containerName":"cakephp-mysql-persistent"},"failurePolicy":"Retry"}},"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"DATABASE_ENGINE","value":"${DATABASE_ENGINE}"},{"name":"DATABASE_NAME","value":"${DATABASE_NAME}"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"CAKEPHP_SECRET_TOKEN","valueFrom":{"secretKeyRef":{"key":"cakephp-secret-token","name":"${NAME}"}}},{"name":"CAKEPHP_SECURITY_SALT","valueFrom":{"secretKeyRef":{"key":"cakephp-security-salt","name":"${NAME}"}}},{"name":"CAKEPHP_SECURITY_CIPHER_SEED","valueFrom":{"secretKeyRef":{"key":"cakephp-security-cipher-seed","name":"${NAME}"}}},{"name":"OPCACHE_REVALIDATE_FREQ","value":"${OPCACHE_REVALIDATE_FREQ}"}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/health.php","port":8080},"initialDelaySeconds":30,"periodSeconds":60,"timeoutSeconds":3},"name":"cakephp-mysql-persistent","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/health.php","port":8080},"initialDelaySeconds":3,"periodSeconds":60,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["cakephp-mysql-persistent"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mysql","port":3306,"targetPort":3306}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"MYSQL_DATABASE","value":"${DATABASE_NAME}"}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":3306},"timeoutSeconds":1},"name":"mysql","ports":[{"containerPort":3306}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","MYSQL_PWD=''${DATABASE_PASSWORD}''
        mysql -h 127.0.0.1 -u ${DATABASE_USER} -D ${DATABASE_NAME} -e ''SELECT 1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_MYSQL_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:5.7","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"cakephp-mysql-persistent","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the CakePHP container can use.","value":"512Mi","required":true},{"name":"MEMORY_MYSQL_LIMIT","displayName":"Memory
        Limit (MySQL)","description":"Maximum amount of memory the MySQL container
        can use.","value":"512Mi","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi","value":"1Gi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/cakephp-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the CakePHP
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"mysql","required":true},{"name":"DATABASE_ENGINE","displayName":"Database
        Engine","description":"Database engine: postgresql, mysql or sqlite (default).","value":"mysql","required":true},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"default","required":true},{"name":"DATABASE_USER","displayName":"Database
        User","value":"cakephp","required":true},{"name":"DATABASE_PASSWORD","displayName":"Database
        Password","generate":"expression","from":"[a-zA-Z0-9]{16}"},{"name":"CAKEPHP_SECRET_TOKEN","displayName":"CakePHP
        secret token","description":"Set this to a long random string.","generate":"expression","from":"[\\w]{50}"},{"name":"CAKEPHP_SECURITY_SALT","displayName":"CakePHP
        Security Salt","description":"Security salt for session hash.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CAKEPHP_SECURITY_CIPHER_SEED","displayName":"CakePHP
        Security Cipher Seed","description":"Security cipher seed for session hash.","generate":"expression","from":"[0-9]{30}"},{"name":"OPCACHE_REVALIDATE_FREQ","displayName":"OPcache
        Revalidation Frequency","description":"How often to check script timestamps
        for updates, in seconds. 0 will result in OPcache checking for updates on
        every request.","value":"2"},{"name":"COMPOSER_MIRROR","displayName":"Custom
        Composer Mirror URL","description":"The custom Composer mirror URL"}],"labels":{"app":"cakephp-mysql-persistent","template":"cakephp-mysql-persistent"}},{"metadata":{"name":"dancer-mysql-example","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/dancer-mysql-example","uid":"199b7cbb-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687255","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example Dancer application with a MySQL database. For more information about
        using this template, including OpenShift considerations, see https://github.com/openshift/dancer-ex/blob/master/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing.","iconClass":"icon-perl","openshift.io/display-name":"Dancer
        + MySQL (Ephemeral)","openshift.io/documentation-url":"https://github.com/openshift/dancer-ex","openshift.io/long-description":"This
        template defines resources needed to develop a Dancer based application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.  The database is stored in non-persistent storage,
        so this configuration should be used for experimental purposes only.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,perl,dancer","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/dancer-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"database-password":"${DATABASE_PASSWORD}","database-user":"${DATABASE_USER}","keybase":"${SECRET_KEY_BASE}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{"script":"perl
        -I extlib/lib/perl5 -I lib t/*"},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"CPAN_MIRROR","value":"${CPAN_MIRROR}"}],"from":{"kind":"ImageStreamTag","name":"perl:5.24","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"MYSQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"SECRET_KEY_BASE","valueFrom":{"secretKeyRef":{"key":"keybase","name":"${NAME}"}}},{"name":"PERL_APACHE2_RELOAD","value":"${PERL_APACHE2_RELOAD}"}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":30,"timeoutSeconds":3},"name":"dancer-mysql-example","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":3,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["dancer-mysql-example"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mysql","port":3306,"targetPort":3306}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"MYSQL_DATABASE","value":"${DATABASE_NAME}"}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":3306},"timeoutSeconds":1},"name":"mysql","ports":[{"containerPort":3306}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","MYSQL_PWD=''${DATABASE_PASSWORD}''
        mysql -h 127.0.0.1 -u ${DATABASE_USER} -D ${DATABASE_NAME} -e ''SELECT 1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_MYSQL_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"data"}]}],"volumes":[{"emptyDir":{},"name":"data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:5.7","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"dancer-mysql-example","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the Perl Dancer container can
        use.","value":"512Mi","required":true},{"name":"MEMORY_MYSQL_LIMIT","displayName":"Memory
        Limit (MySQL)","description":"Maximum amount of memory the MySQL container
        can use.","value":"512Mi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/dancer-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the Dancer
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"database","required":true},{"name":"DATABASE_USER","displayName":"Database
        Username","generate":"expression","from":"user[A-Z0-9]{3}"},{"name":"DATABASE_PASSWORD","displayName":"Database
        Password","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"sampledb","required":true},{"name":"PERL_APACHE2_RELOAD","displayName":"Perl
        Module Reload","description":"Set this to \"true\" to enable automatic reloading
        of modified Perl modules."},{"name":"SECRET_KEY_BASE","displayName":"Secret
        Key","description":"Your secret key for verifying the integrity of signed
        cookies.","generate":"expression","from":"[a-z0-9]{127}"},{"name":"CPAN_MIRROR","displayName":"Custom
        CPAN Mirror URL","description":"The custom CPAN mirror URL"}],"labels":{"app":"dancer-mysql-example","template":"dancer-mysql-example"}},{"metadata":{"name":"dancer-mysql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/dancer-mysql-persistent","uid":"199a7eb1-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687256","creationTimestamp":"2018-02-08T20:46:12Z","annotations":{"description":"An
        example Dancer application with a MySQL database. For more information about
        using this template, including OpenShift considerations, see https://github.com/openshift/dancer-ex/blob/master/README.md.","iconClass":"icon-perl","openshift.io/display-name":"Dancer
        + MySQL","openshift.io/documentation-url":"https://github.com/openshift/dancer-ex","openshift.io/long-description":"This
        template defines resources needed to develop a Dancer based application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.","openshift.io/provider-display-name":"Red Hat,
        Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,perl,dancer","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/dancer-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"database-password":"${DATABASE_PASSWORD}","database-user":"${DATABASE_USER}","keybase":"${SECRET_KEY_BASE}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{"script":"perl
        -I extlib/lib/perl5 -I lib t/*"},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"CPAN_MIRROR","value":"${CPAN_MIRROR}"}],"from":{"kind":"ImageStreamTag","name":"perl:5.24","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"MYSQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"SECRET_KEY_BASE","valueFrom":{"secretKeyRef":{"key":"keybase","name":"${NAME}"}}},{"name":"PERL_APACHE2_RELOAD","value":"${PERL_APACHE2_RELOAD}"}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":30,"timeoutSeconds":3},"name":"dancer-mysql-persistent","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":3,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["dancer-mysql-persistent"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mysql","port":3306,"targetPort":3306}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"MYSQL_DATABASE","value":"${DATABASE_NAME}"}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":3306},"timeoutSeconds":1},"name":"mysql","ports":[{"containerPort":3306}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","MYSQL_PWD=''${DATABASE_PASSWORD}''
        mysql -h 127.0.0.1 -u ${DATABASE_USER} -D ${DATABASE_NAME} -e ''SELECT 1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_MYSQL_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:5.7","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"dancer-mysql-persistent","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the Perl Dancer container can
        use.","value":"512Mi","required":true},{"name":"MEMORY_MYSQL_LIMIT","displayName":"Memory
        Limit (MySQL)","description":"Maximum amount of memory the MySQL container
        can use.","value":"512Mi","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi","value":"1Gi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/dancer-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the Dancer
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"database","required":true},{"name":"DATABASE_USER","displayName":"Database
        Username","generate":"expression","from":"user[A-Z0-9]{3}"},{"name":"DATABASE_PASSWORD","displayName":"Database
        Password","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"sampledb","required":true},{"name":"PERL_APACHE2_RELOAD","displayName":"Perl
        Module Reload","description":"Set this to \"true\" to enable automatic reloading
        of modified Perl modules."},{"name":"SECRET_KEY_BASE","displayName":"Secret
        Key","description":"Your secret key for verifying the integrity of signed
        cookies.","generate":"expression","from":"[a-z0-9]{127}"},{"name":"CPAN_MIRROR","displayName":"Custom
        CPAN Mirror URL","description":"The custom CPAN mirror URL"}],"labels":{"app":"dancer-mysql-persistent","template":"dancer-mysql-persistent"}},{"metadata":{"name":"datagrid65-basic","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid65-basic","uid":"1aef8bf0-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687257","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JDG 6.5 applications.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 6.5 (Ephemeral, no https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss,hidden","version":"1.4.8"}},"message":"A
        new data grid service has been created in your project. It supports connector
        type(s) \"${INFINISPAN_CONNECTORS}\".","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid65-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-openshift:1.6","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid65-basic","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid65-https","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid65-https","uid":"1af099e2-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687258","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JDG 6.5 applications.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 6.5 (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss,hidden","version":"1.4.8"}},"message":"A
        new data grid service has been created in your project. It supports connector
        type(s) \"${INFINISPAN_CONNECTORS}\". Please be sure to create the following
        secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for
        serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datagrid-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"HOTROD_ENCRYPTION","value":"${HTTPS_NAME}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid65-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datagrid-secret-volume","name":"datagrid-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datagrid-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"datagrid-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datagrid-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-openshift:1.6","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"datagrid-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"datagrid-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid65-https","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid65-mysql","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid65-mysql","uid":"1af39c48-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687259","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JDG 6.5 and MySQL applications.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 6.5 + MySQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss,hidden","version":"1.4.8"}},"message":"A
        new data grid service (using MySQL) has been created in your project. It supports
        connector type(s) \"${INFINISPAN_CONNECTORS}\". The username/password for
        accessing the MySQL database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datagrid-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"DEFAULT_JDBC_STORE_TYPE","value":"string"},{"name":"DEFAULT_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"MEMCACHED_JDBC_STORE_TYPE","value":"string"},{"name":"MEMCACHED_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"HOTROD_ENCRYPTION","value":"${HTTPS_NAME}"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid65-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datagrid-secret-volume","name":"datagrid-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datagrid-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"datagrid-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datagrid-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-openshift:1.6","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-data"}]}],"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"datagrid-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:/jboss/datasources/mysql"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"datagrid-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid65-mysql","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid65-mysql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid65-mysql-persistent","uid":"1af1f460-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687260","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Data Grid application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 6.5 + MySQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Data Grid 6.5 based
        application, including a deployment configuration, using MySQL databased using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data grid service (using MySQL with persistent storage) has been created
        in your project. It supports connector type(s) \"${INFINISPAN_CONNECTORS}\".
        The username/password for accessing the MySQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datagrid-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"DEFAULT_JDBC_STORE_TYPE","value":"string"},{"name":"DEFAULT_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"MEMCACHED_JDBC_STORE_TYPE","value":"string"},{"name":"MEMCACHED_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"HOTROD_ENCRYPTION","value":"${HTTPS_NAME}"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid65-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datagrid-secret-volume","name":"datagrid-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datagrid-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"datagrid-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datagrid-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-openshift:1.6","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"datagrid-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:/jboss/datasources/mysql"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"datagrid-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid65-mysql-persistent","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid65-postgresql","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid65-postgresql","uid":"1af63c7c-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687261","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JDG 6.5 and PostgreSQL applications built using.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 6.5 + PostgreSQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss,hidden","version":"1.4.8"}},"message":"A
        new data grid service (using PostgreSQL) has been created in your project.
        It supports connector type(s) \"${INFINISPAN_CONNECTORS}\". The username/password
        for accessing the MySQL database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datagrid-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"DEFAULT_JDBC_STORE_TYPE","value":"string"},{"name":"DEFAULT_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"MEMCACHED_JDBC_STORE_TYPE","value":"string"},{"name":"MEMCACHED_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"HOTROD_ENCRYPTION","value":"${HTTPS_NAME}"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid65-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datagrid-secret-volume","name":"datagrid-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datagrid-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"datagrid-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datagrid-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-openshift:1.6","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-data"}]}],"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"datagrid-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/postgresql"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configurd for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"datagrid-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid65-postgresql","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid65-postgresql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid65-postgresql-persistent","uid":"1af4f88b-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687262","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Data Grid application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 6.5 + PostgreSQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Data Grid 6.5 based
        application, including a deployment configuration, using PostgreSQL database
        using persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data grid service (using PostgreSQL with persistent storage) has been
        created in your project. It supports connector type(s) \"${INFINISPAN_CONNECTORS}\".
        The username/password for accessing the MySQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datagrid-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"DEFAULT_JDBC_STORE_TYPE","value":"string"},{"name":"DEFAULT_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"MEMCACHED_JDBC_STORE_TYPE","value":"string"},{"name":"MEMCACHED_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"HOTROD_ENCRYPTION","value":"${HTTPS_NAME}"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid65-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datagrid-secret-volume","name":"datagrid-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datagrid-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"datagrid-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datagrid-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-openshift:1.6","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"datagrid-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/postgresql"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"datagrid-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid65-postgresql-persistent","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid71-basic","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid71-basic","uid":"1af74b3e-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687263","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Data Grid application. For more information about using this
        template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 7.1 (Ephemeral, no https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Data Grid 7.1 based
        application, including a deployment configuration, using using ephemeral (temporary)
        storage and communication using http.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data grid service has been created in your project. It supports connector
        type(s) \"${INFINISPAN_CONNECTORS}\".","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"ADMIN_GROUP","value":"${ADMIN_GROUP}"},{"name":"HOTROD_AUTHENTICATION","value":"${HOTROD_AUTHENTICATION}"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","value":"${CONTAINER_SECURITY_ROLE_MAPPER}"},{"name":"CONTAINER_SECURITY_ROLES","value":"${CONTAINER_SECURITY_ROLES}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid71-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid71-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"ADMIN_GROUP","displayName":"JDG
        User Roles/Groups","description":"Comma delimited list of roles/groups associated
        with the JDG user"},{"name":"HOTROD_AUTHENTICATION","displayName":"Hotrod
        Authentication","description":"Enable Hotrod Authentication"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","displayName":"Container
        Security Role Mapper","description":"Defines which role mapper to use for
        cache authentication"},{"name":"CONTAINER_SECURITY_ROLES","displayName":"Container
        Security Roles","description":"Comma delimited list of role names and assigned
        permissions"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid71-basic","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid71-https","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid71-https","uid":"1af852b9-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687264","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Data Grid application. For more information about using this
        template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 7.1 (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Data Grid 7.1 based
        application, including a deployment configuration, using using ephemeral (temporary)
        storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data grid service has been created in your project. It supports connector
        type(s) \"${INFINISPAN_CONNECTORS}\". Please be sure to create the following
        secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for
        serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"ADMIN_GROUP","value":"${ADMIN_GROUP}"},{"name":"HOTROD_AUTHENTICATION","value":"${HOTROD_AUTHENTICATION}"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","value":"${CONTAINER_SECURITY_ROLE_MAPPER}"},{"name":"CONTAINER_SECURITY_ROLES","value":"${CONTAINER_SECURITY_ROLES}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datagrid-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"HOTROD_ENCRYPTION","value":"${HTTPS_NAME}"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid71-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datagrid-secret-volume","name":"datagrid-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datagrid-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"datagrid-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datagrid-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid71-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"ADMIN_GROUP","displayName":"JDG
        User Roles/Groups","description":"Comma delimited list of roles/groups associated
        with the JDG user"},{"name":"HOTROD_AUTHENTICATION","displayName":"Hotrod
        Authentication","description":"Enable Hotrod Authentication"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","displayName":"Container
        Security Role Mapper","description":"Defines which role mapper to use for
        cache authentication"},{"name":"CONTAINER_SECURITY_ROLES","displayName":"Container
        Security Roles","description":"Comma delimited list of role names and assigned
        permissions"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret
        Name","description":"The name of the secret containing the keystore file","value":"datagrid-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"datagrid-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid71-https","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid71-mysql","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid71-mysql","uid":"1afaeb55-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687265","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Data Grid application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 7.1 + MySQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Data Grid 7.1 based
        application, including a deployment configuration, using MySQL databased using
        ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data grid service (using MySQL) has been created in your project. It supports
        connector type(s) \"${INFINISPAN_CONNECTORS}\". The username/password for
        accessing the MySQL database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"ADMIN_GROUP","value":"${ADMIN_GROUP}"},{"name":"HOTROD_AUTHENTICATION","value":"${HOTROD_AUTHENTICATION}"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","value":"${CONTAINER_SECURITY_ROLE_MAPPER}"},{"name":"CONTAINER_SECURITY_ROLES","value":"${CONTAINER_SECURITY_ROLES}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datagrid-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"DEFAULT_JDBC_STORE_TYPE","value":"string"},{"name":"DEFAULT_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"MEMCACHED_JDBC_STORE_TYPE","value":"string"},{"name":"MEMCACHED_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"HOTROD_ENCRYPTION","value":"${HTTPS_NAME}"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid71-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datagrid-secret-volume","name":"datagrid-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datagrid-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"datagrid-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datagrid-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid71-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-data"}]}],"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"ADMIN_GROUP","displayName":"JDG
        User Roles/Groups","description":"Comma delimited list of roles/groups associated
        with the JDG user"},{"name":"HOTROD_AUTHENTICATION","displayName":"Hotrod
        Authentication","description":"Enable Hotrod Authentication"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","displayName":"Container
        Security Role Mapper","description":"Defines which role mapper to use for
        cache authentication"},{"name":"CONTAINER_SECURITY_ROLES","displayName":"Container
        Security Roles","description":"Comma delimited list of role names and assigned
        permissions"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret
        Name","description":"The name of the secret containing the keystore file","value":"datagrid-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:/jboss/datasources/mysql"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"datagrid-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid71-mysql","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid71-mysql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid71-mysql-persistent","uid":"1af9a98e-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687266","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Data Grid application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 7.1 + MySQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Data Grid 7.1 based
        application, including a deployment configuration, using MySQL databased using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data grid service (using MySQL with persistent storage) has been created
        in your project. It supports connector type(s) \"${INFINISPAN_CONNECTORS}\".
        The username/password for accessing the MySQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"ADMIN_GROUP","value":"${ADMIN_GROUP}"},{"name":"HOTROD_AUTHENTICATION","value":"${HOTROD_AUTHENTICATION}"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","value":"${CONTAINER_SECURITY_ROLE_MAPPER}"},{"name":"CONTAINER_SECURITY_ROLES","value":"${CONTAINER_SECURITY_ROLES}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datagrid-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"DEFAULT_JDBC_STORE_TYPE","value":"string"},{"name":"DEFAULT_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"MEMCACHED_JDBC_STORE_TYPE","value":"string"},{"name":"MEMCACHED_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"HOTROD_ENCRYPTION","value":"${HTTPS_NAME}"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid71-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datagrid-secret-volume","name":"datagrid-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datagrid-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"datagrid-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datagrid-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid71-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"ADMIN_GROUP","displayName":"JDG
        User Roles/Groups","description":"Comma delimited list of roles/groups associated
        with the JDG user"},{"name":"HOTROD_AUTHENTICATION","displayName":"Hotrod
        Authentication","description":"Enable Hotrod Authentication"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","displayName":"Container
        Security Role Mapper","description":"Defines which role mapper to use for
        cache authentication"},{"name":"CONTAINER_SECURITY_ROLES","displayName":"Container
        Security Roles","description":"Comma delimited list of role names and assigned
        permissions"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret
        Name","description":"The name of the secret containing the keystore file","value":"datagrid-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:/jboss/datasources/mysql"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"datagrid-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid71-mysql-persistent","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid71-partition","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid71-partition","uid":"ce13ff23-5888-11e8-8ee7-d094660d31fb","resourceVersion":"1687267","creationTimestamp":"2018-05-15T21:42:03Z","annotations":{"description":"An
        example JBoss Data Grid application. For more information about using this
        template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 7.1 (Ephemeral, no https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Data Grid 7.1 based
        application, including a deployment configuration, using using ephemeral (temporary)
        storage and communication using http.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data grid service has been created in your project. It supports connector
        type(s) \"${INFINISPAN_CONNECTORS}\".","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-debug"},"spec":{"ports":[{"port":8787,"targetPort":8787}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"ADMIN_GROUP","value":"${ADMIN_GROUP}"},{"name":"HOTROD_AUTHENTICATION","value":"${HOTROD_AUTHENTICATION}"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","value":"${CONTAINER_SECURITY_ROLE_MAPPER}"},{"name":"CONTAINER_SECURITY_ROLES","value":"${CONTAINER_SECURITY_ROLES}"},{"name":"DATAGRID_SPLIT","value":"${DATAGRID_SPLIT}"}],"image":"jboss-datagrid71-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"},{"containerPort":8787,"name":"debug","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/opt/datagrid/standalone/partitioned_data","name":"${APPLICATION_NAME}-datagrid-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-datagrid-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-datagrid-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid71-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-datagrid-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"ADMIN_GROUP","displayName":"ADMIN_GROUP","description":"Comma
        delimited list of groups/roles for the Application Realm User"},{"name":"HOTROD_AUTHENTICATION","displayName":"HOTROD_AUTHENTICATION","description":"True/False
        for HotRod Authentication"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","displayName":"CONTAINER_SECURITY_ROLE_MAPPER","description":"Container
        Role Mapper"},{"name":"CONTAINER_SECURITY_ROLES","displayName":"CONTAINER_SECURITY_ROLES","description":"Comma
        Delimited List of Container Roles"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"VOLUME_CAPACITY","displayName":"Datagrid
        Volume Size","description":"Size of the volume used by Datagrid for persisting
        metadata.","value":"1Gi","required":true},{"name":"DATAGRID_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh, this
        is now the default behaviour.","value":"true"},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid71-partition","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid71-postgresql","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid71-postgresql","uid":"1afd8aca-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687268","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Data Grid application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 7.1 + PostgreSQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Data Grid 7.1 based
        application, including a deployment configuration, using PostgreSQL database
        using ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data grid service (using PostgreSQL) has been created in your project.
        It supports connector type(s) \"${INFINISPAN_CONNECTORS}\". The username/password
        for accessing the MySQL database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"ADMIN_GROUP","value":"${ADMIN_GROUP}"},{"name":"HOTROD_AUTHENTICATION","value":"${HOTROD_AUTHENTICATION}"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","value":"${CONTAINER_SECURITY_ROLE_MAPPER}"},{"name":"CONTAINER_SECURITY_ROLES","value":"${CONTAINER_SECURITY_ROLES}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datagrid-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"DEFAULT_JDBC_STORE_TYPE","value":"string"},{"name":"DEFAULT_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"MEMCACHED_JDBC_STORE_TYPE","value":"string"},{"name":"MEMCACHED_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"HOTROD_ENCRYPTION","value":"${HTTPS_NAME}"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid71-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datagrid-secret-volume","name":"datagrid-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datagrid-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"datagrid-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datagrid-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid71-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-data"}]}],"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"ADMIN_GROUP","displayName":"JDG
        User Roles/Groups","description":"Comma delimited list of roles/groups associated
        with the JDG user"},{"name":"HOTROD_AUTHENTICATION","displayName":"Hotrod
        Authentication","description":"Enable Hotrod Authentication"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","displayName":"Container
        Security Role Mapper","description":"Defines which role mapper to use for
        cache authentication"},{"name":"CONTAINER_SECURITY_ROLES","displayName":"Container
        Security Roles","description":"Comma delimited list of role names and assigned
        permissions"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret
        Name","description":"The name of the secret containing the keystore file","value":"datagrid-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/postgresql"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configurd for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"datagrid-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid71-postgresql","xpaas":"1.4.8"}},{"metadata":{"name":"datagrid71-postgresql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datagrid71-postgresql-persistent","uid":"1afc51e6-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687269","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Data Grid application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datagrid","openshift.io/display-name":"JBoss
        Data Grid 7.1 + PostgreSQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"datagrid,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Data Grid 7.1 based
        application, including a deployment configuration, using PostgreSQL database
        using persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data grid service (using PostgreSQL with persistent storage) has been
        created in your project. It supports connector type(s) \"${INFINISPAN_CONNECTORS}\".
        The username/password for accessing the MySQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Memcached
        service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-memcached"},"spec":{"ports":[{"port":11211,"targetPort":11211}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Hot
        Rod service for clustered applications."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-hotrod"},"spec":{"ports":[{"port":11333,"targetPort":11333}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"USERNAME","value":"${USERNAME}"},{"name":"PASSWORD","value":"${PASSWORD}"},{"name":"ADMIN_GROUP","value":"${ADMIN_GROUP}"},{"name":"HOTROD_AUTHENTICATION","value":"${HOTROD_AUTHENTICATION}"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","value":"${CONTAINER_SECURITY_ROLE_MAPPER}"},{"name":"CONTAINER_SECURITY_ROLES","value":"${CONTAINER_SECURITY_ROLES}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datagrid-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"DEFAULT_JDBC_STORE_TYPE","value":"string"},{"name":"DEFAULT_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"MEMCACHED_JDBC_STORE_TYPE","value":"string"},{"name":"MEMCACHED_JDBC_STORE_DATASOURCE","value":"${DB_JNDI}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"INFINISPAN_CONNECTORS","value":"${INFINISPAN_CONNECTORS}"},{"name":"CACHE_NAMES","value":"${CACHE_NAMES}"},{"name":"DATAVIRT_CACHE_NAMES","value":"${DATAVIRT_CACHE_NAMES}"},{"name":"CACHE_TYPE_DEFAULT","value":"${CACHE_TYPE_DEFAULT}"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","value":"${ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH}"},{"name":"HOTROD_SERVICE_NAME","value":"${APPLICATION_NAME}-hotrod"},{"name":"HOTROD_ENCRYPTION","value":"${HTTPS_NAME}"},{"name":"MEMCACHED_CACHE","value":"${MEMCACHED_CACHE}"},{"name":"REST_SECURITY_DOMAIN","value":"${REST_SECURITY_DOMAIN}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"}],"image":"jboss-datagrid71-openshift","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"},{"containerPort":11211,"name":"memcached","protocol":"TCP"},{"containerPort":11222,"name":"hotrod-internal","protocol":"TCP"},{"containerPort":11333,"name":"hotrod","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/datagrid/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datagrid-secret-volume","name":"datagrid-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datagrid-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"datagrid-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datagrid-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"jboss-datagrid71-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datagrid-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"USERNAME","displayName":"Username","description":"User
        name for JDG user."},{"name":"PASSWORD","displayName":"Password","description":"The
        password to access the JDG Caches. Must be different than username; must not
        be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic
        character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)"},{"name":"ADMIN_GROUP","displayName":"JDG
        User Roles/Groups","description":"Comma delimited list of roles/groups associated
        with the JDG user"},{"name":"HOTROD_AUTHENTICATION","displayName":"Hotrod
        Authentication","description":"Enable Hotrod Authentication"},{"name":"CONTAINER_SECURITY_ROLE_MAPPER","displayName":"Container
        Security Role Mapper","description":"Defines which role mapper to use for
        cache authentication"},{"name":"CONTAINER_SECURITY_ROLES","displayName":"Container
        Security Roles","description":"Comma delimited list of role names and assigned
        permissions"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret
        Name","description":"The name of the secret containing the keystore file","value":"datagrid-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/postgresql"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"INFINISPAN_CONNECTORS","displayName":"Infinispan
        Connectors","description":"Comma-separated list of connector types that should
        be configured (defaults to ''memcached,hotrod,rest'')","value":"hotrod,memcached,rest"},{"name":"CACHE_NAMES","displayName":"Cache
        Names","description":"Comma-separated list of caches to configure.  By default,
        a distributed-cache, with a mode of SYNC will be configured for each entry."},{"name":"DATAVIRT_CACHE_NAMES","displayName":"Datavirt
        Cache Names","description":"Comma-separated list of caches to configure for
        use by Red Hat JBoss Data Virtualization for materialization of views.  Three
        caches will be created for each named cache: \u003cname\u003e, \u003cname\u003e_staging
        and \u003cname\u003e_alias."},{"name":"CACHE_TYPE_DEFAULT","displayName":"Default
        Cache Type","description":"Default cache type for all caches. If empty then
        distributed will be the default"},{"name":"ENCRYPTION_REQUIRE_SSL_CLIENT_AUTH","displayName":"Encryption
        Requires SSL Client Authentication?"},{"name":"MEMCACHED_CACHE","displayName":"Memcached
        Cache Name","description":"The name of the cache to expose through this memcached
        connector (defaults to ''default'')","value":"default"},{"name":"REST_SECURITY_DOMAIN","displayName":"REST
        Security Domain","description":"The domain, declared in the security subsystem,
        that should be used to authenticate access to the REST endpoint"},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"datagrid-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"datagrid71-postgresql-persistent","xpaas":"1.4.8"}},{"metadata":{"name":"datavirt63-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datavirt63-basic-s2i","uid":"1afea652-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687270","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JBoss Data Virtualization 6.3 services built using S2I.","iconClass":"icon-datavirt","openshift.io/display-name":"JBoss
        Data Virtualization 6.3 (no SSL)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"jdv,datavirt,database,jboss","version":"1.4.8"}},"message":"A
        new data service has been created in your project.  The username/password
        for accessing the service is ${TEIID_USERNAME}/${TEIID_PASSWORD}.  Please
        be sure to create the secret named ${CONFIGURATION_NAME} containing the datasource
        configuration details required by the deployed VDB(s).","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        data virtualization services."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"name":"http","port":8080,"targetPort":"http"},{"name":"jdbc","port":31000,"targetPort":"jdbc"},{"name":"odbc","port":35432,"targetPort":"odbc"}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http (REST) service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","port":{"targetPort":"http"},"to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"images":[{"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-client-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"},"paths":[{"destinationDir":"./${CONTEXT_DIR}/extensions/datagrid65","sourcePath":"/extensions/."}]}],"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"CUSTOM_INSTALL_DIRECTORIES","value":"extensions/*"},{"name":"VDB_DIRS","value":"${VDB_DIRS}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-datavirt63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"imageChange":{"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-client-openshift:1.1"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"TEIID_USERNAME","value":"${TEIID_USERNAME}"},{"name":"TEIID_PASSWORD","value":"${TEIID_PASSWORD}"},{"name":"MODESHAPE_USERNAME","value":"${MODESHAPE_USERNAME}"},{"name":"MODESHAPE_PASSWORD","value":"${MODESHAPE_PASSWORD}"},{"name":"ENV_FILES","value":"/etc/datavirt-environment/*"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":31000,"name":"jdbc","protocol":"TCP"},{"containerPort":35432,"name":"odbc","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datavirt-environment","name":"configuration","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"configuration","secret":{"secretName":"${CONFIGURATION_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datavirt-app","required":true},{"name":"CONFIGURATION_NAME","displayName":"Configuration
        Secret Name","description":"The name of the secret containing configuration
        properties for the data sources.","value":"datavirt-app-config","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Specify a custom hostname for the http
        route.  Leave blank to use default hostname, e.g.: \u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"master"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository.","value":"datavirt/dynamicvdb-datafederation/app"},{"name":"TEIID_USERNAME","displayName":"Teiid
        Username","description":"Username associated with Teiid data service.","generate":"expression","from":"[\\a]{8}","required":true},{"name":"TEIID_PASSWORD","displayName":"Teiid
        User Password","description":"Password for Teiid user.","generate":"expression","from":"[\\a\\A]{8}[\\d]{1}[\\A]{1}","required":true},{"name":"MODESHAPE_USERNAME","displayName":"ModeShape
        Username","description":"Username associated with ModeShape.","generate":"expression","from":"[\\a]{8}","required":true},{"name":"MODESHAPE_PASSWORD","displayName":"ModeShape
        User Password","description":"Password for ModeShape user.","generate":"expression","from":"[\\a\\A]{8}[\\d]{1}[\\A]{1}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"A secret string used to configure the GitHub
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"Password used by JGroups to authenticate
        nodes in the cluster.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"VDB_DIRS","displayName":"VDB
        Deployment Directories","description":"Comma delimited list of source directories
        containing VDBs for deployment"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","displayName":"Artifact
        Directories","description":"List of directories from which archives will be
        copied into the deployment folder. If unspecified, all archives in /target
        will be copied."},{"name":"MEMORY_LIMIT","description":"Container memory limit","value":"1Gi"}],"labels":{"template":"datavirt63-basic-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"datavirt63-extensions-support-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datavirt63-extensions-support-s2i","uid":"1b001f48-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687271","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Data Virtualization application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datavirt","openshift.io/display-name":"JBoss
        Data Virtualization 6.3 (with SSL and Extensions)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"jdv,datavirt,database,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-virtualization/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Data Virtualization based
        application, including a build configuration, application deployment configuration,
        support for installing extensions (e.g. third-party DB drivers) and the ability
        to configure certificates for serving secure content.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data service has been created in your project.  The username/password
        for accessing the service is ${TEIID_USERNAME}/${TEIID_PASSWORD}.  Please
        be sure to create the following secrets: \"${CONFIGURATION_NAME}\" containing
        the datasource configuration details required by the deployed VDB(s); \"${HTTPS_SECRET}\"
        containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        data virtualization services."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"name":"http","port":8080,"targetPort":"http"},{"name":"https","port":8443,"targetPort":"https"},{"name":"jdbc","port":31000,"targetPort":"jdbc"},{"name":"jdbcs","port":31443,"targetPort":"jdbcs"},{"name":"odbc","port":35432,"targetPort":"odbc"},{"name":"odbcs","port":35443,"targetPort":"odbcs"}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http (REST) service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","port":{"targetPort":"http"},"to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https (REST) service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","port":{"targetPort":"https"},"tls":{"termination":"passthrough"},"to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-jdbc","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s JDBC service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"jdbc-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_JDBC}","port":{"targetPort":"jdbcs"},"tls":{"termination":"passthrough"},"to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ext"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ext"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}-ext:latest"}},"source":{"contextDir":"${EXTENSIONS_DIR}","git":{"ref":"${EXTENSIONS_REPOSITORY_REF}","uri":"${EXTENSIONS_REPOSITORY_URL}"},"type":"Git"},"strategy":{"dockerStrategy":{"dockerfilePath":"${EXTENSIONS_DOCKERFILE}"},"type":"Docker"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"images":[{"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-client-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"},"paths":[{"destinationDir":"./${CONTEXT_DIR}/extensions/datagrid65","sourcePath":"/extensions/."}]},{"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}-ext:latest"},"paths":[{"destinationDir":"./${CONTEXT_DIR}/extensions/extras","sourcePath":"/extensions/."}]}],"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"CUSTOM_INSTALL_DIRECTORIES","value":"extensions/*"},{"name":"VDB_DIRS","value":"${VDB_DIRS}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-datavirt63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"imageChange":{"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}-ext:latest"}},"type":"ImageChange"},{"imageChange":{"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-client-openshift:1.1"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datavirt-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"TEIID_USERNAME","value":"${TEIID_USERNAME}"},{"name":"TEIID_PASSWORD","value":"${TEIID_PASSWORD}"},{"name":"MODESHAPE_USERNAME","value":"${MODESHAPE_USERNAME}"},{"name":"MODESHAPE_PASSWORD","value":"${MODESHAPE_PASSWORD}"},{"name":"ENV_FILES","value":"/etc/datavirt-environment/*"},{"name":"DATAVIRT_TRANSPORT_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"DATAVIRT_TRANSPORT_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"DATAVIRT_TRANSPORT_KEY_ALIAS","value":"${HTTPS_NAME}"},{"name":"DATAVIRT_TRANSPORT_KEYSTORE_PASSWORD","value":"${HTTPS_PASSWORD}"},{"description":"Used
        soley by the quickstart and set here to ensure the template can be instatiated
        with its default parameter values, i.e. so itworks ootb.","name":"QS_DB_TYPE","value":"derby"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":31000,"name":"jdbc","protocol":"TCP"},{"containerPort":31443,"name":"jdbcs","protocol":"TCP"},{"containerPort":35432,"name":"odbc","protocol":"TCP"},{"containerPort":35443,"name":"odbcs","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datavirt-environment","name":"configuration","readOnly":true},{"mountPath":"/etc/datavirt-secret-volume","name":"datavirt-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datavirt-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"configuration","secret":{"secretName":"${CONFIGURATION_NAME}"}},{"name":"datavirt-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datavirt-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datavirt-app","required":true},{"name":"CONFIGURATION_NAME","displayName":"Configuration
        Secret Name","description":"The name of the secret containing configuration
        properties for the data sources.","value":"datavirt-app-config","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Specify a custom hostname for the http
        route.  Leave blank to use default hostname, e.g.: \u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Specify a custom hostname for the https
        route.  Leave blank to use default hostname, e.g.: secure-\u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_JDBC","displayName":"Custom
        JDBC Route Hostname","description":"Specify a custom hostname for the JDBC
        route.  Leave blank to use default hostname, e.g.: secure-\u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"master"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository.","value":"datavirt/dynamicvdb-datafederation/app"},{"name":"EXTENSIONS_REPOSITORY_URL","displayName":"Extensions
        Git Repository URL","description":"The URL of the repository with source code
        for the extensions image.  The image should have all modules, etc., placed
        in the \"/extensions/\" directory in the image.  If the contents are in a
        different directory, the sourcePath for the ImageSource in the BuildConfig
        must be modified.","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"EXTENSIONS_REPOSITORY_REF","displayName":"Extensions
        Git Reference","description":"Set this to a branch name, tag or other ref
        of your extensions repository if you are not using the default branch.","value":"master"},{"name":"EXTENSIONS_DIR","displayName":"Extensions
        Context Directory","description":"Set this to the relative path to your project
        if it is not in the root of your extensions repository.","value":"datavirt/derby-driver-image"},{"name":"EXTENSIONS_DOCKERFILE","displayName":"Extensions
        Dockerfile","description":"Set this to the relative path to the Dockerfile
        in your extensions directory.","value":"Dockerfile"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore to be used for serving secure content.","value":"datavirt-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret.","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)."},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate.","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"TEIID_USERNAME","displayName":"Teiid
        Username","description":"Username associated with Teiid data service.","generate":"expression","from":"[\\a]{8}","required":true},{"name":"TEIID_PASSWORD","displayName":"Teiid
        User Password","description":"Password for Teiid user.","generate":"expression","from":"[\\a\\A]{8}[\\d]{1}[\\A]{1}","required":true},{"name":"MODESHAPE_USERNAME","displayName":"ModeShape
        Username","description":"Username associated with ModeShape.","generate":"expression","from":"[\\a]{8}","required":true},{"name":"MODESHAPE_PASSWORD","displayName":"ModeShape
        User Password","description":"Password for ModeShape user.","generate":"expression","from":"[\\a\\A]{8}[\\d]{1}[\\A]{1}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"A secret string used to configure the GitHub
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        to be used for securing JGroups communications.","value":"datavirt-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        JGroups secret.","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the JGroups server
        certificate","value":"secret-key"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate","value":"password"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"Password used by JGroups to authenticate
        nodes in the cluster.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"VDB_DIRS","displayName":"VDB
        Deployment Directories","description":"Comma delimited list of source directories
        containing VDBs for deployment"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","displayName":"Artifact
        Directories","description":"List of directories from which archives will be
        copied into the deployment folder. If unspecified, all archives in /target
        will be copied."},{"name":"MEMORY_LIMIT","description":"Container memory limit","value":"1Gi"}],"labels":{"template":"datavirt63-extensions-support-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"datavirt63-secure-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/datavirt63-secure-s2i","uid":"1b018925-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687272","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Data Virtualization application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-datavirt","openshift.io/display-name":"JBoss
        Data Virtualization 6.3 (with SSL)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"jdv,datavirt,database,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-data-virtualization/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Data Virtualization based
        application, including a build configuration, application deployment configuration
        and ability to configure certificates for serving secure content.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new data service has been created in your project.  The username/password
        for accessing the service is ${TEIID_USERNAME}/${TEIID_PASSWORD}.  Please
        be sure to create the following secrets: \"${CONFIGURATION_NAME}\" containing
        the datasource configuration details required by the deployed VDB(s); \"${HTTPS_SECRET}\"
        containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        data virtualization services."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"name":"http","port":8080,"targetPort":"http"},{"name":"https","port":8443,"targetPort":"https"},{"name":"jdbc","port":31000,"targetPort":"jdbc"},{"name":"jdbcs","port":31443,"targetPort":"jdbcs"},{"name":"odbc","port":35432,"targetPort":"odbc"},{"name":"odbcs","port":35443,"targetPort":"odbcs"}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http (REST) service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","port":{"targetPort":"http"},"to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https (REST) service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","port":{"targetPort":"https"},"tls":{"termination":"passthrough"},"to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-jdbc","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s JDBC service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"jdbc-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_JDBC}","port":{"targetPort":"jdbcs"},"tls":{"termination":"passthrough"},"to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"images":[{"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-client-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"},"paths":[{"destinationDir":"./${CONTEXT_DIR}/extensions/datagrid65","sourcePath":"/extensions/."}]}],"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"CUSTOM_INSTALL_DIRECTORIES","value":"extensions/*"},{"name":"VDB_DIRS","value":"${VDB_DIRS}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-datavirt63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"imageChange":{"from":{"kind":"ImageStreamTag","name":"jboss-datagrid65-client-openshift:1.1"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/datavirt-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"TEIID_USERNAME","value":"${TEIID_USERNAME}"},{"name":"TEIID_PASSWORD","value":"${TEIID_PASSWORD}"},{"name":"MODESHAPE_USERNAME","value":"${MODESHAPE_USERNAME}"},{"name":"MODESHAPE_PASSWORD","value":"${MODESHAPE_PASSWORD}"},{"name":"ENV_FILES","value":"/etc/datavirt-environment/*"},{"name":"DATAVIRT_TRANSPORT_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"DATAVIRT_TRANSPORT_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"DATAVIRT_TRANSPORT_KEY_ALIAS","value":"${HTTPS_NAME}"},{"name":"DATAVIRT_TRANSPORT_KEYSTORE_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"SSO_URL","value":"${SSO_URL}"},{"name":"SSO_SERVICE_URL","value":"${SSO_SERVICE_URL}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_USERNAME","value":"${SSO_USERNAME}"},{"name":"SSO_PASSWORD","value":"${SSO_PASSWORD}"},{"name":"SSO_PUBLIC_KEY","value":"${SSO_PUBLIC_KEY}"},{"name":"SSO_BEARER_ONLY","value":"${SSO_BEARER_ONLY}"},{"name":"SSO_SAML_KEYSTORE_SECRET","value":"${SSO_SAML_KEYSTORE_SECRET}"},{"name":"SSO_SAML_KEYSTORE","value":"${SSO_SAML_KEYSTORE}"},{"name":"SSO_SAML_KEYSTORE_DIR","value":"/etc/sso-saml-secret-volume"},{"name":"SSO_SAML_CERTIFICATE_NAME","value":"${SSO_SAML_CERTIFICATE_NAME}"},{"name":"SSO_SAML_KEYSTORE_PASSWORD","value":"${SSO_SAML_KEYSTORE_PASSWORD}"},{"name":"SSO_SECRET","value":"${SSO_SECRET}"},{"name":"SSO_ENABLE_CORS","value":"${SSO_ENABLE_CORS}"},{"name":"SSO_SAML_LOGOUT_PAGE","value":"${SSO_SAML_LOGOUT_PAGE}"},{"name":"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","value":"${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"},{"name":"SSO_OPENIDCONNECT_DEPLOYMENTS","value":"${SSO_OPENIDCONNECT_DEPLOYMENTS}"},{"name":"SSO_SAML_DEPLOYMENTS","value":"${SSO_SAML_DEPLOYMENTS}"},{"name":"HOSTNAME_HTTP","value":"${HOSTNAME_HTTP}"},{"name":"HOSTNAME_HTTPS","value":"${HOSTNAME_HTTPS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":31000,"name":"jdbc","protocol":"TCP"},{"containerPort":31443,"name":"jdbcs","protocol":"TCP"},{"containerPort":35432,"name":"odbc","protocol":"TCP"},{"containerPort":35443,"name":"odbcs","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/datavirt-environment","name":"configuration","readOnly":true},{"mountPath":"/etc/datavirt-secret-volume","name":"datavirt-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"datavirt-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"configuration","secret":{"secretName":"${CONFIGURATION_NAME}"}},{"name":"datavirt-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"datavirt-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"datavirt-app","required":true},{"name":"CONFIGURATION_NAME","displayName":"Configuration
        Secret Name","description":"The name of the secret containing configuration
        properties for the data sources.","value":"datavirt-app-config","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Specify a custom hostname for the http
        route.  Leave blank to use default hostname, e.g.: \u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Specify a custom hostname for the https
        route.  Leave blank to use default hostname, e.g.: secure-\u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_JDBC","displayName":"Custom
        JDBC Route Hostname","description":"Specify a custom hostname for the JDBC
        route.  Leave blank to use default hostname, e.g.: secure-\u003cservice-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"master"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository.","value":"datavirt/dynamicvdb-datafederation/app"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore to be used for serving secure content.","value":"datavirt-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret.","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)."},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate.","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"TEIID_USERNAME","displayName":"Teiid
        Username","description":"Username associated with Teiid data service.","generate":"expression","from":"[\\a]{8}","required":true},{"name":"TEIID_PASSWORD","displayName":"Teiid
        User Password","description":"Password for Teiid user.","generate":"expression","from":"[\\a\\A]{8}[\\d]{1}[\\A]{1}","required":true},{"name":"MODESHAPE_USERNAME","displayName":"ModeShape
        Username","description":"Username associated with ModeShape.","generate":"expression","from":"[\\a]{8}","required":true},{"name":"MODESHAPE_PASSWORD","displayName":"ModeShape
        User Password","description":"Password for ModeShape user.","generate":"expression","from":"[\\a\\A]{8}[\\d]{1}[\\A]{1}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"A secret string used to configure the GitHub
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        to be used for securing JGroups communications.","value":"datavirt-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        JGroups secret.","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the JGroups server
        certificate","value":"secret-key"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate","value":"password"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"Password used by JGroups to authenticate
        nodes in the cluster.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"VDB_DIRS","displayName":"VDB
        Deployment Directories","description":"Comma delimited list of source directories
        containing VDBs for deployment"},{"name":"SSO_URL","displayName":"SSO Server
        URL","description":"The URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This
        is the URL through which the user will be redirected when a login or token
        is required by the application."},{"name":"SSO_SERVICE_URL","displayName":"SSO
        Server Service URL","description":"The URL for the interal SSO service, where
        secure-sso is the kubernetes service exposed by the SSO server.  This is used
        to create the application client(s) (see SSO_USERNAME).  This can also be
        the same as SSO_URL."},{"name":"SSO_REALM","displayName":"SSO Realm","description":"The
        SSO realm to which the application client(s) should be associated (e.g. demo)."},{"name":"SSO_USERNAME","displayName":"SSO
        Username","description":"The username used to access the SSO service.  This
        is used to create the appliction client(s) within the specified SSO realm.
        This should match the SSO_SERVICE_USERNAME specified through one of the sso70-*
        templates."},{"name":"SSO_PASSWORD","displayName":"SSO User''s Password","description":"The
        password for the SSO service user."},{"name":"SSO_PUBLIC_KEY","displayName":"SSO
        Realm Public Key","description":"SSO Realm Public Key. Public key is recommended
        to be passed into the template to avoid man-in-the-middle security vulnerability.  This
        can be retrieved from the SSO server, for the specified realm."},{"name":"SSO_BEARER_ONLY","displayName":"SSO
        Bearer Only","description":"SSO Client Access Type. true or false"},{"name":"SSO_SAML_KEYSTORE_SECRET","displayName":"SSO
        SAML Keystore Secret","description":"The name of the secret containing the
        keystore file","value":"datavirt-app-secret"},{"name":"SSO_SAML_KEYSTORE","displayName":"SSO
        SAML Keystore File","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"SSO_SAML_CERTIFICATE_NAME","displayName":"SSO
        SAML Certificate Alias","description":"The name associated with the server
        certificate"},{"name":"SSO_SAML_KEYSTORE_PASSWORD","displayName":"SSO SAML
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"SSO_SECRET","displayName":"SSO
        Client Secret","description":"The SSO Client Secret for Confidential Access","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"SSO_ENABLE_CORS","displayName":"SSO
        Enable CORS","description":"Enable CORS for SSO applications. true or false","value":"false"},{"name":"SSO_SAML_LOGOUT_PAGE","displayName":"SSO
        SAML Logout Page","description":"SSO logout page for SAML applications","value":"/"},{"name":"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","displayName":"SSO
        Disable SSL Certificate Validation","description":"If true SSL communication
        between EAP and the SSO Server will be insecure (i.e. certificate validation
        is disabled with curl)","value":"true"},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Truststore File","description":"The name of the truststore file within the
        secret (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Truststore Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Truststore Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"datavirt-app-secret"},{"name":"SSO_OPENIDCONNECT_DEPLOYMENTS","displayName":"SSO
        OpenIDConnect Deployments","description":"Comma delimited list of deployments
        that shoulds be exploded and enabled for SSO OpenIDConnect via auth-method"},{"name":"SSO_SAML_DEPLOYMENTS","displayName":"SSO
        SAML Deployments","description":"Comma delimited list of deployments that
        shoulds be exploded and enabled for SSO SAML via auth-method"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","displayName":"Artifact
        Directories","description":"List of directories from which archives will be
        copied into the deployment folder. If unspecified, all archives in /target
        will be copied."},{"name":"MEMORY_LIMIT","description":"Container memory limit","value":"1Gi"}],"labels":{"template":"datavirt63-secure-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"decisionserver62-amq-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/decisionserver62-amq-s2i","uid":"1b02cff3-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687273","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for Red Hat JBoss BRMS 6.2 decision server A-MQ applications built
        using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red Hat
        JBoss BRMS 6.2 decision server + A-MQ (with https)","tags":"decisionserver,jboss,xpaas","version":"1.3.3"}},"message":"A
        new BRMS/A-MQ application with SSL support has been created in your project.
        The username/password for accessing the KIE Server REST or JMS interface is
        ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the A-MQ service
        use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure to create
        the \"decisionserver-service-account\" service account and the secret named
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-decisionserver62-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/decisionserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/decisionserver-secret-volume","name":"decisionserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"decisionserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"decisionserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-tcp"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"HelloRulesContainer=org.openshift.quickstarts:decisionserver-hellorules:1.2.0.Final"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"decisionserver/hellorules"},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"decisionserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"kube"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"decisionserver62-amq-s2i","xpaas":"1.3.3"}},{"metadata":{"name":"decisionserver62-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/decisionserver62-basic-s2i","uid":"1b03d2e4-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687274","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for Red Hat JBoss BRMS 6.2 decision server applications built using
        S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red Hat JBoss
        BRMS 6.2 decision server (no https)","tags":"decisionserver,jboss,xpaas","version":"1.3.3"}},"message":"A
        new BRMS application has been created in your project. The username/password
        for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-decisionserver62-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"HelloRulesContainer=org.openshift.quickstarts:decisionserver-hellorules:1.2.0.Final"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"decisionserver/hellorules"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ Password","description":"HornetQ
        cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"decisionserver62-basic-s2i","xpaas":"1.3.3"}},{"metadata":{"name":"decisionserver62-https-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/decisionserver62-https-s2i","uid":"1b04db62-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687275","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for Red Hat JBoss BRMS 6.2 decision server HTTPS applications built
        using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red Hat
        JBoss BRMS 6.2 decision server (with https)","tags":"decisionserver,jboss,xpaas","version":"1.3.3"}},"message":"A
        new BRMS application with SSL support has been created in your project. The
        username/password for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.
        Please be sure to create the \"decisionserver-service-account\" service account
        and the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-decisionserver62-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/decisionserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/decisionserver-secret-volume","name":"decisionserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"decisionserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"decisionserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"HelloRulesContainer=org.openshift.quickstarts:decisionserver-hellorules:1.2.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"decisionserver/hellorules"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"decisionserver-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"decisionserver62-https-s2i","xpaas":"1.3.3"}},{"metadata":{"name":"decisionserver63-amq-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/decisionserver63-amq-s2i","uid":"1b0607d9-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687276","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for Red Hat JBoss BRMS 6.3 decision server A-MQ applications built
        using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red Hat
        JBoss BRMS 6.3 decision server + A-MQ (with https)","tags":"decisionserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new BRMS/A-MQ application with SSL support has been created in your project.
        The username/password for accessing the KIE Server REST or JMS interface is
        ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the A-MQ service
        use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure to create
        the \"decisionserver-service-account\" service account and the secret named
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-decisionserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","value":"${KIE_SERVER_JMS_QUEUES_REQUEST}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/decisionserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/decisionserver-secret-volume","name":"decisionserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"decisionserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"decisionserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-tcp"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","displayName":"KIE
        Server JMS Queues Request","description":"JNDI name of request queue for JMS.","value":"queue/KIE.SERVER.REQUEST"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"decisionserver/hellorules"},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"decisionserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"kube"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"decisionserver63-amq-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"decisionserver63-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/decisionserver63-basic-s2i","uid":"1b07071a-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687277","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for Red Hat JBoss BRMS 6.3 decision server applications built using
        S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red Hat JBoss
        BRMS 6.3 decision server (no https)","tags":"decisionserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new BRMS application has been created in your project. The username/password
        for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-decisionserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"decisionserver/hellorules"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ Password","description":"HornetQ
        cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"decisionserver63-basic-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"decisionserver63-https-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/decisionserver63-https-s2i","uid":"1b080b66-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687278","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for Red Hat JBoss BRMS 6.3 decision server HTTPS applications built
        using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red Hat
        JBoss BRMS 6.3 decision server (with https)","tags":"decisionserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new BRMS application with SSL support has been created in your project. The
        username/password for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.
        Please be sure to create the \"decisionserver-service-account\" service account
        and the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-decisionserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/decisionserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/decisionserver-secret-volume","name":"decisionserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"decisionserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"decisionserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"decisionserver/hellorules"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"decisionserver-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"decisionserver63-https-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"decisionserver64-amq-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/decisionserver64-amq-s2i","uid":"1b09409b-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687279","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example BRMS decision server A-MQ application. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-decisionserver","openshift.io/display-name":"JBoss
        BRMS 6.4 decision server + A-MQ (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"decisionserver,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-brms/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss BRMS 6.4 decision
        server with A-MQ application, including a build configuration and application
        deployment configuration.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new BRMS/A-MQ application with SSL support has been created in your project.
        The username/password for accessing the KIE Server REST or JMS interface is
        ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the A-MQ service
        use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure to create
        the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file
        used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-decisionserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","value":"${KIE_SERVER_JMS_QUEUES_REQUEST}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/decisionserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/decisionserver-secret-volume","name":"decisionserver-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"decisionserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","displayName":"KIE
        Server JMS Queues Request","description":"JNDI name of request queue for JMS.","value":"queue/KIE.SERVER.REQUEST"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"decisionserver/hellorules"},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"decisionserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"decisionserver64-amq-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"decisionserver64-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/decisionserver64-basic-s2i","uid":"1b0a471f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687280","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for Red Hat JBoss BRMS 6.4 decision server applications built using
        S2I.","iconClass":"icon-decisionserver","openshift.io/display-name":"Red Hat
        JBoss BRMS 6.4 decision server (no https)","tags":"decisionserver,jboss,xpaas","version":"1.4.8"}},"message":"A
        new BRMS application has been created in your project. The username/password
        for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-decisionserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"decisionserver/hellorules"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ Password","description":"HornetQ
        cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"decisionserver64-basic-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"decisionserver64-https-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/decisionserver64-https-s2i","uid":"1b0b3a89-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687281","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example BRMS decision server application. For more information about using
        this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-decisionserver","openshift.io/display-name":"JBoss
        BRMS 6.4 decision server (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"decisionserver,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-brms/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss BRMS 6.4 decision
        server, including a build configuration,  application deployment configuration
        and secured using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new BRMS application with SSL support has been created in your project. The
        username/password for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.
        Please be sure to create the secret named \"${HTTPS_SECRET}\" containing the
        ${HTTPS_KEYSTORE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-decisionserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/decisionserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/decisionserver-secret-volume","name":"decisionserver-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"decisionserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"decisionserver-hellorules=org.openshift.quickstarts:decisionserver-hellorules:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"decisionserver/hellorules"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"decisionserver-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"decisionserver64-https-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"django-psql-example","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/django-psql-example","uid":"199d9bf8-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687282","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example Django application with a PostgreSQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/django-ex/blob/master/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing.","iconClass":"icon-python","openshift.io/display-name":"Django
        + PostgreSQL (Ephemeral)","openshift.io/documentation-url":"https://github.com/openshift/django-ex","openshift.io/long-description":"This
        template defines resources needed to develop a Django based application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.  The database is stored in non-persistent storage,
        so this configuration should be used for experimental purposes only.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,python,django","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/django-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"database-password":"${DATABASE_PASSWORD}","database-user":"${DATABASE_USER}","django-secret-key":"${DJANGO_SECRET_KEY}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{"script":"./manage.py
        test"},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"PIP_INDEX_URL","value":"${PIP_INDEX_URL}"}],"from":{"kind":"ImageStreamTag","name":"python:3.5","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"DATABASE_ENGINE","value":"${DATABASE_ENGINE}"},{"name":"DATABASE_NAME","value":"${DATABASE_NAME}"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"APP_CONFIG","value":"${APP_CONFIG}"},{"name":"DJANGO_SECRET_KEY","valueFrom":{"secretKeyRef":{"key":"django-secret-key","name":"${NAME}"}}}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":30,"timeoutSeconds":3},"name":"django-psql-example","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":3,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["django-psql-example"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","port":5432,"targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":5432},"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_POSTGRESQL_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"data"}]}],"volumes":[{"emptyDir":{},"name":"data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:9.5","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"django-psql-example","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the Django container can use.","value":"512Mi","required":true},{"name":"MEMORY_POSTGRESQL_LIMIT","displayName":"Memory
        Limit (PostgreSQL)","description":"Maximum amount of memory the PostgreSQL
        container can use.","value":"512Mi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/django-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the Django
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"postgresql","required":true},{"name":"DATABASE_ENGINE","displayName":"Database
        Engine","description":"Database engine: postgresql, mysql or sqlite (default).","value":"postgresql","required":true},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"default","required":true},{"name":"DATABASE_USER","displayName":"Database
        Username","value":"django","required":true},{"name":"DATABASE_PASSWORD","displayName":"Database
        User Password","generate":"expression","from":"[a-zA-Z0-9]{16}"},{"name":"APP_CONFIG","displayName":"Application
        Configuration File Path","description":"Relative path to Gunicorn configuration
        file (optional)."},{"name":"DJANGO_SECRET_KEY","displayName":"Django Secret
        Key","description":"Set this to a long random string.","generate":"expression","from":"[\\w]{50}"},{"name":"PIP_INDEX_URL","displayName":"Custom
        PyPi Index URL","description":"The custom PyPi index URL"}],"labels":{"app":"django-psql-example","template":"django-psql-example"}},{"metadata":{"name":"django-psql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/django-psql-persistent","uid":"199c8a62-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687283","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example Django application with a PostgreSQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/django-ex/blob/master/README.md.","iconClass":"icon-python","openshift.io/display-name":"Django
        + PostgreSQL","openshift.io/documentation-url":"https://github.com/openshift/django-ex","openshift.io/long-description":"This
        template defines resources needed to develop a Django based application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.","openshift.io/provider-display-name":"Red Hat,
        Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,python,django","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/django-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"database-password":"${DATABASE_PASSWORD}","database-user":"${DATABASE_USER}","django-secret-key":"${DJANGO_SECRET_KEY}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{"script":"./manage.py
        test"},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"PIP_INDEX_URL","value":"${PIP_INDEX_URL}"}],"from":{"kind":"ImageStreamTag","name":"python:3.5","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"DATABASE_ENGINE","value":"${DATABASE_ENGINE}"},{"name":"DATABASE_NAME","value":"${DATABASE_NAME}"},{"name":"DATABASE_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"DATABASE_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"APP_CONFIG","value":"${APP_CONFIG}"},{"name":"DJANGO_SECRET_KEY","valueFrom":{"secretKeyRef":{"key":"django-secret-key","name":"${NAME}"}}}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":30,"timeoutSeconds":3},"name":"django-psql-persistent","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/health","port":8080},"initialDelaySeconds":3,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["django-psql-persistent"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","port":5432,"targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":5432},"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_POSTGRESQL_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:9.5","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"django-psql-persistent","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the Django container can use.","value":"512Mi","required":true},{"name":"MEMORY_POSTGRESQL_LIMIT","displayName":"Memory
        Limit (PostgreSQL)","description":"Maximum amount of memory the PostgreSQL
        container can use.","value":"512Mi","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi","value":"1Gi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/django-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the Django
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"postgresql","required":true},{"name":"DATABASE_ENGINE","displayName":"Database
        Engine","description":"Database engine: postgresql, mysql or sqlite (default).","value":"postgresql","required":true},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"default","required":true},{"name":"DATABASE_USER","displayName":"Database
        Username","value":"django","required":true},{"name":"DATABASE_PASSWORD","displayName":"Database
        User Password","generate":"expression","from":"[a-zA-Z0-9]{16}"},{"name":"APP_CONFIG","displayName":"Application
        Configuration File Path","description":"Relative path to Gunicorn configuration
        file (optional)."},{"name":"DJANGO_SECRET_KEY","displayName":"Django Secret
        Key","description":"Set this to a long random string.","generate":"expression","from":"[\\w]{50}"},{"name":"PIP_INDEX_URL","displayName":"Custom
        PyPi Index URL","description":"The custom PyPi index URL"}],"labels":{"app":"django-psql-persistent","template":"django-psql-persistent"}},{"metadata":{"name":"dotnet-example","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/dotnet-example","uid":"199e8c12-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687284","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example .NET Core application.","iconClass":"icon-dotnet","openshift.io/display-name":".NET
        Core Example","tags":"quickstart,dotnet,.net","template.openshift.io/documentation-url":"https://github.com/redhat-developer/s2i-dotnetcore","template.openshift.io/provider-display-name":"Red
        Hat, Inc.","template.openshift.io/support-url":"https://access.redhat.com"}},"objects":[{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"DOTNET_STARTUP_PROJECT","value":"${DOTNET_STARTUP_PROJECT}"},{"name":"DOTNET_ASSEMBLY_NAME","value":"${DOTNET_ASSEMBLY_NAME}"},{"name":"DOTNET_NPM_TOOLS","value":"${DOTNET_NPM_TOOLS}"},{"name":"DOTNET_TEST_PROJECTS","value":"${DOTNET_TEST_PROJECTS}"},{"name":"DOTNET_CONFIGURATION","value":"${DOTNET_CONFIGURATION}"},{"name":"DOTNET_PUBLISH","value":"true"},{"name":"DOTNET_RESTORE_SOURCES","value":"${DOTNET_RESTORE_SOURCES}"}],"from":{"kind":"ImageStreamTag","name":"${DOTNET_IMAGE_STREAM_TAG}","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"type":"Rolling"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[],"image":"
        ","livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":40,"timeoutSeconds":15},"name":"dotnet-app","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":30},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["dotnet-app"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"dotnet-example","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"DOTNET_IMAGE_STREAM_TAG","displayName":".NET
        builder","description":"The image stream tag which is used to build the code.","value":"dotnet:2.0","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/redhat-developer/s2i-dotnetcore-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"dotnetcore-2.0"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to use a subdirectory of the source code
        repository"},{"name":"APPLICATION_DOMAIN","displayName":"Application Hostname","description":"The
        exposed hostname that will route to the .NET Core service, if left blank a
        value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"A secret string used to configure the GitHub
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DOTNET_STARTUP_PROJECT","displayName":"Startup
        Project","description":"Set this to a project file (e.g. csproj) or a folder
        containing a single project file.","value":"app"},{"name":"DOTNET_ASSEMBLY_NAME","displayName":"Startup
        Assembly","description":"Set this when the assembly name is overridden in
        the project file."},{"name":"DOTNET_NPM_TOOLS","displayName":"Npm Tools","description":"Set
        this to a space separated list of npm tools needed to publish.","value":"bower
        gulp"},{"name":"DOTNET_TEST_PROJECTS","displayName":"Test projects","description":"Set
        this to a space separated list of test projects to run before publishing."},{"name":"DOTNET_CONFIGURATION","displayName":"Configuration","description":"Set
        this to configuration (Release/Debug).","value":"Release"},{"name":"DOTNET_RESTORE_SOURCES","displayName":"NuGet
        package sources","description":"Set this to override the NuGet.config sources."}]},{"metadata":{"name":"dotnet-pgsql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/dotnet-pgsql-persistent","uid":"199f9353-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687285","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example .NET Core application with a PostgreSQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/redhat-developer/s2i-dotnetcore.","iconClass":"icon-dotnet","openshift.io/display-name":".NET
        Core + PostgreSQL (Persistent)","tags":"quickstart,dotnet","template.openshift.io/documentation-url":"https://github.com/redhat-developer/s2i-dotnetcore","template.openshift.io/provider-display-name":"Red
        Hat, Inc.","template.openshift.io/support-url":"https://access.redhat.com"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/redhat-developer/s2i-dotnetcore.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"connect-string":"Host=${DATABASE_SERVICE_NAME};Database=${DATABASE_NAME};Username=${DATABASE_USER};Password=${DATABASE_PASSWORD}","database-password":"${DATABASE_PASSWORD}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"DOTNET_STARTUP_PROJECT","value":"${DOTNET_STARTUP_PROJECT}"},{"name":"DOTNET_ASSEMBLY_NAME","value":"${DOTNET_ASSEMBLY_NAME}"},{"name":"DOTNET_NPM_TOOLS","value":"${DOTNET_NPM_TOOLS}"},{"name":"DOTNET_TEST_PROJECTS","value":"${DOTNET_TEST_PROJECTS}"},{"name":"DOTNET_CONFIGURATION","value":"${DOTNET_CONFIGURATION}"},{"name":"DOTNET_PUBLISH","value":"true"},{"name":"DOTNET_RESTORE_SOURCES","value":"${DOTNET_RESTORE_SOURCES}"}],"from":{"kind":"ImageStreamTag","name":"${DOTNET_IMAGE_STREAM_TAG}","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"resources":{},"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","timeoutSeconds":600,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"ConnectionString","valueFrom":{"secretKeyRef":{"key":"connect-string","name":"${NAME}"}}}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":40,"timeoutSeconds":10},"name":"dotnet-pgsql-persistent","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":30},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["dotnet-pgsql-persistent"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","port":5432,"targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DATABASE_USER}"},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":5432},"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_POSTGRESQL_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:9.5","namespace":"openshift"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"musicstore","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the .NET Core container can
        use.","value":"512Mi","required":true},{"name":"MEMORY_POSTGRESQL_LIMIT","displayName":"Memory
        Limit (PostgreSQL)","description":"Maximum amount of memory the PostgreSQL
        container can use.","value":"512Mi","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi","value":"1Gi","required":true},{"name":"DOTNET_IMAGE_STREAM_TAG","displayName":".NET
        builder","description":"The image stream tag which is used to build the code.","value":"dotnet:2.0","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the .NET builder ImageStream resides.","value":"openshift","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/redhat-developer/s2i-aspnet-musicstore-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"rel/2.0-example"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"DOTNET_STARTUP_PROJECT","displayName":"Startup
        Project","description":"Set this to a project file (e.g. csproj) or a folder
        containing a single project file.","value":"samples/MusicStore"},{"name":"DOTNET_ASSEMBLY_NAME","displayName":"Startup
        Assembly","description":"Set this when the assembly name is overridden in
        the project file."},{"name":"DOTNET_NPM_TOOLS","displayName":"Npm Tools","description":"Set
        this to a space separated list of npm tools needed to publish."},{"name":"DOTNET_TEST_PROJECTS","displayName":"Test
        projects","description":"Set this to a space separated list of test projects
        to run before publishing."},{"name":"DOTNET_CONFIGURATION","displayName":"Configuration","description":"Set
        this to configuration (Release/Debug).","value":"Release"},{"name":"DOTNET_RESTORE_SOURCES","displayName":"NuGet
        package sources","description":"Set this to override the NuGet.config sources."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the .NET
        Core service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"A secret string used to configure the GitHub
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"postgresql","required":true},{"name":"DATABASE_USER","displayName":"Database
        Username","generate":"expression","from":"user[A-Z0-9]{3}"},{"name":"DATABASE_PASSWORD","displayName":"Database
        Password","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"musicstore","required":true},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"Maximum
        Database Connections","value":"100"},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"Shared
        Buffer Amount","value":"12MB"}],"labels":{"template":"dotnet-pgsql-persistent"}},{"metadata":{"name":"dotnet-runtime-example","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/dotnet-runtime-example","uid":"19a09e57-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687286","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example .NET Core Runtime example application.","iconClass":"icon-dotnet","openshift.io/display-name":".NET
        Core Runtime Example","tags":"quickstart,dotnet,.net","template.openshift.io/documentation-url":"https://github.com/redhat-developer/s2i-dotnetcore","template.openshift.io/provider-display-name":"Red
        Hat, Inc.","template.openshift.io/support-url":"https://access.redhat.com"}},"objects":[{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application runtime image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application builder image"},"name":"${NAME}-build"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application"},"name":"${NAME}-build"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}-build:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"DOTNET_STARTUP_PROJECT","value":"${DOTNET_STARTUP_PROJECT}"},{"name":"DOTNET_ASSEMBLY_NAME","value":"${DOTNET_ASSEMBLY_NAME}"},{"name":"DOTNET_NPM_TOOLS","value":"${DOTNET_NPM_TOOLS}"},{"name":"DOTNET_TEST_PROJECTS","value":"${DOTNET_TEST_PROJECTS}"},{"name":"DOTNET_CONFIGURATION","value":"${DOTNET_CONFIGURATION}"},{"name":"DOTNET_RESTORE_SOURCES","value":"${DOTNET_RESTORE_SOURCES}"},{"name":"DOTNET_PACK","value":"true"}],"from":{"kind":"ImageStreamTag","name":"${DOTNET_BUILD_IMAGE_STREAM_TAG}","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"}]}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to chain the runtime image from the source build image"},"name":"${NAME}-runtime"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"source":{"dockerfile":"FROM
        ${DOTNET_RUNTIME_IMAGE_STREAM_TAG}\nADD app.tar.gz .","images":[{"from":{"kind":"ImageStreamTag","name":"${NAME}-build:latest"},"paths":[{"destinationDir":".","sourcePath":"/opt/app-root/app.tar.gz"}]}]},"strategy":{"dockerStrategy":{"from":{"kind":"ImageStreamTag","name":"${DOTNET_RUNTIME_IMAGE_STREAM_TAG}","namespace":"${NAMESPACE}"}},"type":"Docker"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"imageChange":{"from":{"kind":"ImageStreamTag","name":"${NAME}-build:latest"}},"type":"ImageChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server"},"name":"${NAME}-runtime"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"type":"Rolling"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[],"image":"
        ","livenessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":40,"timeoutSeconds":15},"name":"dotnet-runtime-app","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/","port":8080,"scheme":"HTTP"},"initialDelaySeconds":10,"timeoutSeconds":30},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["dotnet-runtime-app"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"dotnet-runtime-example","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"DOTNET_RUNTIME_IMAGE_STREAM_TAG","displayName":".NET
        Runtime Imagestream Tag","description":"The image stream tag which is used
        to run the application.","value":"dotnet-runtime:2.0","required":true},{"name":"DOTNET_BUILD_IMAGE_STREAM_TAG","displayName":".NET
        builder","description":"The image stream tag which is used to build the application.","value":"dotnet:2.0","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the .NET
        Core service, if left blank a value will be defaulted."},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/redhat-developer/s2i-dotnetcore-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"dotnetcore-2.0"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to use a subdirectory of the source code
        repository"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub Webhook
        Secret","description":"A secret string used to configure the GitHub webhook.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DOTNET_STARTUP_PROJECT","displayName":"Startup
        Project","description":"Set this to the folder containing your startup project.","value":"app"},{"name":"DOTNET_ASSEMBLY_NAME","displayName":"Startup
        Assembly","description":"Set this when the assembly name is overridden in
        the project file."},{"name":"DOTNET_NPM_TOOLS","displayName":"Npm Tools","description":"Set
        this to a space separated list of npm tools needed to publish.","value":"bower
        gulp"},{"name":"DOTNET_TEST_PROJECTS","displayName":"Test projects","description":"Set
        this to a space separated list of test projects to run before publishing."},{"name":"DOTNET_CONFIGURATION","displayName":"Configuration","description":"Set
        this to configuration (Release/Debug).","value":"Release"},{"name":"DOTNET_RESTORE_SOURCES","displayName":"NuGet
        package sources","description":"Set this to override the NuGet.config sources."}]},{"metadata":{"name":"eap64-amq-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-amq-persistent-s2i","uid":"1b0ccb7e-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687287","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 + A-MQ (with https)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration, using Red Hat JBoss A-MQ with persistence and secure
        communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 and A-MQ persistent based application with SSL support has been
        created in your project. The username/password for accessing the A-MQ service
        is ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/opt/amq/data/kahadb","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"6.4.x"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"helloworld-mdb"},{"name":"VOLUME_CAPACITY","displayName":"A-MQ
        Volume Size","description":"Size of the volume used by A-MQ for persisting
        messages.","value":"1Gi","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/ConnectionFactory","value":"java:/ConnectionFactory"},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh.","value":"false"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBQueue"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBTopic"},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-amq-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-amq-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-amq-s2i","uid":"1b0e1f1b-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687289","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 + A-MQ (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration, using Red Hat JBoss A-MQ and secure communication
        using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 and A-MQ based application with SSL support has been created in
        your project. The username/password for accessing the A-MQ service is ${MQ_USERNAME}/${MQ_PASSWORD}.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"6.4.x"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"helloworld-mdb"},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/ConnectionFactory","value":"java:/ConnectionFactory"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBQueue"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBTopic"},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-amq-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-basic-s2i","uid":"1b0f5a31-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687290","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 (no https)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration and insecure communication using http.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 based application has been created in your project.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"6.4.x"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"kitchensink"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ Password","description":"HornetQ
        cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-basic-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-https-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-https-s2i","uid":"1b10676f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687291","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 (with https)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 based application with SSL support has been created in your project.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"6.4.x"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"kitchensink"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-https-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-mongodb-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-mongodb-persistent-s2i","uid":"1b11ad4b-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687292","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 + MongoDB (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MongoDB using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 and MongoDB persistent based application with SSL support has been
        created in your project. The username/password for accessing the MongoDB database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-mongodb-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mongodb-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mongodb-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-mongodb-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-mongodb-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-mongodb-s2i","uid":"1b12f175-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687293","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 + MongoDB (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MongoDB using
        ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 and MongoDB based application with SSL support has been created
        in your project. The username/password for accessing the MongoDB database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-mongodb-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-mysql-persistent-s2i","uid":"1b1440d0-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687294","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 + MySQL (with https)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MySQL using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 and MySQL persistent based application with SSL support has been
        created in your project. The username/password for accessing the MySQL database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create
        the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-mysql"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-mysql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-mysql-s2i","uid":"1b158bdc-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687295","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 + MySQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MySQL using
        ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 and MySQL based application with SSL support has been created in
        your project. The username/password for accessing the MySQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-mysql"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-mysql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-postgresql-persistent-s2i","uid":"1b16f0d8-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687296","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"Red
        Hat JBoss EAP 6.4 + PostgreSQL (Persistent with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration, database deployment configuration for PostgreSQL
        using persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 and PostgreSQL persistent based application with SSL support has
        been created in your project. The username/password for accessing the PostgreSQL
        database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure
        to create the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-postgresql"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-postgresql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-postgresql-s2i","uid":"1b182f3f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687297","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 + PostgreSQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration, database deployment configuration for PostgreSQL
        using ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 and PostgreSQL based application with SSL support has been created
        in your project. The username/password for accessing the PostgreSQL database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create
        the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-postgresql"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-postgresql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-sso-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-sso-s2i","uid":"1b19b6a6-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687298","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 Single Sign-On application. For more information about using
        this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 + Single Sign-On (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration and integrated with Red Hat Single Sign-On.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 based application with SSL and SSO support has been created in your
        project. Please be sure to create the following secrets: \"${HTTPS_SECRET}\"
        containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS_APPEND","value":""},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HOSTNAME_HTTP","value":"${HOSTNAME_HTTP}"},{"name":"HOSTNAME_HTTPS","value":"${HOSTNAME_HTTPS}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"SSO_URL","value":"${SSO_URL}"},{"name":"SSO_SERVICE_URL","value":"${SSO_SERVICE_URL}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_USERNAME","value":"${SSO_USERNAME}"},{"name":"SSO_PASSWORD","value":"${SSO_PASSWORD}"},{"name":"SSO_PUBLIC_KEY","value":"${SSO_PUBLIC_KEY}"},{"name":"SSO_BEARER_ONLY","value":"${SSO_BEARER_ONLY}"},{"name":"SSO_SAML_KEYSTORE_SECRET","value":"${SSO_SAML_KEYSTORE_SECRET}"},{"name":"SSO_SAML_KEYSTORE","value":"${SSO_SAML_KEYSTORE}"},{"name":"SSO_SAML_KEYSTORE_DIR","value":"/etc/sso-saml-secret-volume"},{"name":"SSO_SAML_CERTIFICATE_NAME","value":"${SSO_SAML_CERTIFICATE_NAME}"},{"name":"SSO_SAML_KEYSTORE_PASSWORD","value":"${SSO_SAML_KEYSTORE_PASSWORD}"},{"name":"SSO_SECRET","value":"${SSO_SECRET}"},{"name":"SSO_ENABLE_CORS","value":"${SSO_ENABLE_CORS}"},{"name":"SSO_SAML_LOGOUT_PAGE","value":"${SSO_SAML_LOGOUT_PAGE}"},{"name":"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","value":"${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/sso-saml-secret-volume","name":"sso-saml-keystore-volume","readOnly":true},{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"sso-saml-keystore-volume","secret":{"secretName":"${SSO_SAML_KEYSTORE_SECRET}"}},{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Hostname for http service route (e.g.
        eap-app-myproject.example.com).  Required for SSO-enabled applications.  This
        is added to the white list of redirects in the SSO server.","required":true},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Hostname for https service route (e.g.
        secure-eap-app-myproject.example.com).  Required for SSO-enabled applications.  This
        is added to the white list of redirects in the SSO server.","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/redhat-developer/redhat-sso-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"7.0.x-ose"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory."},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"SSO_URL","displayName":"URL
        for SSO","description":"The URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This
        is the URL through which the user will be redirected when a login or token
        is required by the application.","required":true},{"name":"SSO_SERVICE_URL","displayName":"URL
        for SSO (internal service)","description":"The URL for the internal SSO service,
        where secure-sso is the kubernetes service exposed by the SSO server.  This
        is used to create the application client(s) (see SSO_USERNAME).  This can
        also be the same as SSO_URL.","value":"https://secure-sso:8443/auth"},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"The SSO realm to which the application client(s) should
        be associated (e.g. demo).","required":true},{"name":"SSO_USERNAME","displayName":"SSO
        Username","description":"The username used to access the SSO service.  This
        is used to create the appliction client(s) within the specified SSO realm.
        This should match the SSO_SERVICE_USERNAME specified through one of the sso70-*
        templates."},{"name":"SSO_PASSWORD","displayName":"SSO Password","description":"The
        password for the SSO service user."},{"name":"SSO_PUBLIC_KEY","displayName":"SSO
        Public Key","description":"SSO Public Key. Public key is recommended to be
        passed into the template to avoid man-in-the-middle security vulnerability.  This
        can be retrieved from the SSO server, for the specified realm."},{"name":"SSO_BEARER_ONLY","displayName":"SSO
        Bearer Only?","description":"SSO Client Access Type"},{"name":"ARTIFACT_DIR","displayName":"Artifact
        Directories","description":"List of directories from which archives will be
        copied into the deployment folder.  If unspecified, all archives in /target
        will be copied.","value":"app-jee-jsp/target,service-jee-jaxrs/target,app-profile-jee-jsp/target,app-profile-saml-jee-jsp/target"},{"name":"SSO_SAML_KEYSTORE_SECRET","displayName":"SSO
        SAML Keystore Secret","description":"The name of the secret containing the
        keystore file","value":"eap-app-secret"},{"name":"SSO_SAML_KEYSTORE","displayName":"SSO
        SAML Keystore","description":"The name of the keystore file within the secret","value":"keystore.jks"},{"name":"SSO_SAML_CERTIFICATE_NAME","displayName":"SSO
        SAML Certificate Name","description":"The name associated with the server
        certificate","value":"jboss"},{"name":"SSO_SAML_KEYSTORE_PASSWORD","displayName":"SSO
        SAML Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"SSO_SECRET","displayName":"SSO
        Client Secret","description":"The SSO Client Secret for Confidential Access","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ENABLE_CORS","displayName":"Enable
        CORS for SSO?","description":"Enable CORS for SSO applications","value":"false"},{"name":"SSO_SAML_LOGOUT_PAGE","displayName":"SSO
        SAML Logout Page","description":"SSO logout page for SAML applications","value":"/"},{"name":"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","displayName":"Disable
        SSL Validation in EAP-\u003eSSO communication","description":"If true SSL
        communication between EAP and the SSO Server will be insecure (i.e. certificate
        validation is disabled with curl)","value":"true"},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"eap-app-secret"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-sso-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-third-party-db-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-third-party-db-s2i","uid":"1b1c33a0-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687299","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 6 DB application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"Red
        Hat JBoss EAP 6.4 (with https, DB drivers)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration, using third-party DB drivers and secure communication
        using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 based application with SSL support has been created in your project.
        Please be sure to create the following secrets:\"${CONFIGURATION_NAME}\" containing
        the datasource configuration details required by the deployed application(s);  \"${HTTPS_SECRET}\"
        containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"images":[{"from":{"kind":"ImageStreamTag","name":"${EXTENSIONS_IMAGE}","namespace":"${EXTENSIONS_IMAGE_NAMESPACE}"},"paths":[{"destinationDir":"./${CONTEXT_DIR}/extensions/extras","sourcePath":"${EXTENSIONS_INSTALL_DIR}/."}]}],"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"CUSTOM_INSTALL_DIRECTORIES","value":"extensions/*"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"imageChange":{"from":{"kind":"ImageStreamTag","name":"${EXTENSIONS_IMAGE}","namespace":"${EXTENSIONS_IMAGE_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"ENV_FILES","value":"/etc/eap-environment/*"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-environment","name":"configuration","readOnly":true},{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"configuration","secret":{"secretName":"${CONFIGURATION_NAME}"}},{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"CONFIGURATION_NAME","displayName":"Configuration
        Secret Name","description":"The name of the secret containing configuration
        properties for the datasources.","value":"eap-app-config","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"master"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"datavirt/hibernate-webapp"},{"name":"EXTENSIONS_IMAGE","displayName":"Drivers
        ImageStreamTag","description":"ImageStreamTag definition for the image containing
        the drivers and configuration, e.g. jboss-datavirt63-driver-openshift:1.1","value":"jboss-datavirt63-driver-openshift:1.1","required":true},{"name":"EXTENSIONS_IMAGE_NAMESPACE","displayName":"Drivers
        ImageStream Namespace","description":"Namespace within which the ImageStream
        definition for the image containing the drivers and configuration is located.","value":"openshift","required":true},{"name":"EXTENSIONS_INSTALL_DIR","displayName":"Drivers
        Image Install Directory","description":"Full path to the directory within
        the extensions image where the extensions are located (e.g. install.sh, modules/,
        etc.)","value":"/extensions","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queue
        Names","description":"Queue names to preconfigure within HornetQ subsystem."},{"name":"HORNETQ_TOPICS","displayName":"Topic
        Names","description":"Topic names to preconfigure within HornetQ subsystem."},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Cluster Admin Password","description":"Admin password for HornetQ cluster.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"A secret string used to configure the GitHub
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        to be used for securing JGroups communications.","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        JGroups secret.","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the JGroups server
        certificate","value":"secret-key"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate","value":"password"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"Password used by JGroups to authenticate
        nodes in the cluster.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap64-third-party-db-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap64-tx-recovery-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap64-tx-recovery-s2i","uid":"ce3bb30f-5888-11e8-8ee7-d094660d31fb","resourceVersion":"1687300","creationTimestamp":"2018-05-15T21:42:03Z","annotations":{"description":"An
        example EAP 6 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 6.4 (tx recovery)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 6.4 based application, including a build configuration, application
        deployment configuration and insecure communication using http.  The template
        also demonstrates how to enable automated transaction recovery on scale down
        of application pods.  Automated transaction recovery is currently Technology
        Preview.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 6 based application has been created in your project.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap64-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"SPLIT_DATA","value":"${SPLIT_DATA}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/opt/eap/standalone/partitioned_data","name":"${APPLICATION_NAME}-eap-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-eap-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-eap-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-migration"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-migration"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-migration"},"name":"${APPLICATION_NAME}-migration"},"spec":{"containers":[{"command":["/opt/eap/bin/openshift-migrate.sh"],"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"SPLIT_DATA","value":"${SPLIT_DATA}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-migration","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/opt/eap/standalone/partitioned_data","name":"${APPLICATION_NAME}-eap-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-eap-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-eap-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-migration"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-eap-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"6.4.x"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"kitchensink"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ Password","description":"HornetQ
        cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"},{"name":"VOLUME_CAPACITY","displayName":"EAP
        Volume Size","description":"Size of the volume used by EAP for persisting
        data.","value":"1Gi","required":true},{"name":"SPLIT_DATA","displayName":"Split
        the data directory?","description":"Split the data directory for each node
        in a cluster.","value":"true"}],"labels":{"template":"eap64-tx-recovery-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-amq-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-amq-persistent-s2i","uid":"1b1dc092-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687301","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 + A-MQ (with https)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration, using Red Hat JBoss A-MQ with persistence and secure
        communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and A-MQ persistent based application with SSL support has been
        created in your project. The username/password for accessing the A-MQ service
        is ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/opt/amq/data/kahadb","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"helloworld-mdb"},{"name":"VOLUME_CAPACITY","displayName":"A-MQ
        Volume Size","description":"Size of the volume used by A-MQ for persisting
        messages.","value":"1Gi","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/ConnectionFactory","value":"java:/ConnectionFactory"},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh.","value":"false"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBQueue"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBTopic"},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-amq-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-amq-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-amq-s2i","uid":"1b1f2f0b-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687302","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 + A-MQ (with https)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration, using Red Hat JBoss A-MQ and secure communication
        using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and A-MQ based application with SSL support has been created in
        your project. The username/password for accessing the A-MQ service is ${MQ_USERNAME}/${MQ_PASSWORD}.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"helloworld-mdb"},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/ConnectionFactory","value":"java:/ConnectionFactory"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBQueue"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBTopic"},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-amq-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-basic-s2i","uid":"1b2045dc-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687303","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 (no https)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration and insecure communication using http.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 based application has been created in your project.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}],"terminationGracePeriodSeconds":75}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"7.0.0.GA"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"kitchensink"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-basic-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-https-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-https-s2i","uid":"1b215bad-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687304","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 (with https)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 based application with SSL support has been created in your project.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"7.0.0.GA"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"kitchensink"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-https-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-mongodb-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-mongodb-persistent-s2i","uid":"1b22a820-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687305","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 + MongoDB (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MongoDB using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and MongoDB persistent based application with SSL support has been
        created in your project. The username/password for accessing the MongoDB database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-mongodb-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mongodb-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mongodb-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-mongodb-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-mongodb-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-mongodb-s2i","uid":"1b2418a5-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687306","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"Boss
        EAP 7.0 + MongoDB (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MongoDB using
        ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and MongoDB based application with SSL support has been created
        in your project. The username/password for accessing the MongoDB database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-mongodb-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-mysql-persistent-s2i","uid":"1b2571a9-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687307","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 + MySQL (with https)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MySQL using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and MySQL persistent based application with SSL support has been
        created in your project. The username/password for accessing the MySQL database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create
        the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"DEFAULT_JOB_REPOSITORY","value":"${APPLICATION_NAME}-mysql"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-mysql"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-mysql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-mysql-s2i","uid":"1b27091e-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687308","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 + MySQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MySQL using
        ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and MySQL based application with SSL support has been created in
        your project. The username/password for accessing the MySQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"DEFAULT_JOB_REPOSITORY","value":"${APPLICATION_NAME}-mysql"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-mysql"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-mysql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-postgresql-persistent-s2i","uid":"1b2870cb-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687309","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 + PostgreSQL (Persistent with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration, database deployment configuration for PostgreSQL
        using persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and PostgreSQL persistent based application with SSL support has
        been created in your project. The username/password for accessing the PostgreSQL
        database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure
        to create the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"DEFAULT_JOB_REPOSITORY","value":"${APPLICATION_NAME}-postgresql"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-postgresql"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-postgresql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-postgresql-s2i","uid":"1b29c289-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687310","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 + PostgreSQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration, database deployment configuration for PostgreSQL
        using ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and PostgreSQL based application with SSL support has been created
        in your project. The username/password for accessing the PostgreSQL database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create
        the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"DEFAULT_JOB_REPOSITORY","value":"${APPLICATION_NAME}-postgresql"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-postgresql"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-postgresql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-sso-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-sso-s2i","uid":"1b2b12c2-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687311","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 Single Sign-On application. For more information about using
        this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 + Single Sign-On (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration and integrated with Red Hat Single Sign-On.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 based application with SSL and SSO support has been created in your
        project. Please be sure to create the following secrets: \"${HTTPS_SECRET}\"
        containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS_APPEND","value":""},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HOSTNAME_HTTP","value":"${HOSTNAME_HTTP}"},{"name":"HOSTNAME_HTTPS","value":"${HOSTNAME_HTTPS}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"SSO_URL","value":"${SSO_URL}"},{"name":"SSO_SERVICE_URL","value":"${SSO_SERVICE_URL}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_USERNAME","value":"${SSO_USERNAME}"},{"name":"SSO_PASSWORD","value":"${SSO_PASSWORD}"},{"name":"SSO_PUBLIC_KEY","value":"${SSO_PUBLIC_KEY}"},{"name":"SSO_BEARER_ONLY","value":"${SSO_BEARER_ONLY}"},{"name":"SSO_SAML_KEYSTORE_SECRET","value":"${SSO_SAML_KEYSTORE_SECRET}"},{"name":"SSO_SAML_KEYSTORE","value":"${SSO_SAML_KEYSTORE}"},{"name":"SSO_SAML_KEYSTORE_DIR","value":"/etc/sso-saml-secret-volume"},{"name":"SSO_SAML_CERTIFICATE_NAME","value":"${SSO_SAML_CERTIFICATE_NAME}"},{"name":"SSO_SAML_KEYSTORE_PASSWORD","value":"${SSO_SAML_KEYSTORE_PASSWORD}"},{"name":"SSO_SECRET","value":"${SSO_SECRET}"},{"name":"SSO_ENABLE_CORS","value":"${SSO_ENABLE_CORS}"},{"name":"SSO_SAML_LOGOUT_PAGE","value":"${SSO_SAML_LOGOUT_PAGE}"},{"name":"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","value":"${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/sso-saml-secret-volume","name":"sso-saml-keystore-volume","readOnly":true},{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"sso-saml-keystore-volume","secret":{"secretName":"${SSO_SAML_KEYSTORE_SECRET}"}},{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Hostname for http service route (e.g.
        eap-app-myproject.example.com).  Required for SSO-enabled applications.  This
        is added to the white list of redirects in the SSO server.","required":true},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Hostname for https service route (e.g.
        secure-eap-app-myproject.example.com).  Required for SSO-enabled applications.  This
        is added to the white list of redirects in the SSO server.","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/redhat-developer/redhat-sso-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"7.0.x-ose"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory."},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"SSO_URL","displayName":"URL
        for SSO","description":"The URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This
        is the URL through which the user will be redirected when a login or token
        is required by the application.","required":true},{"name":"SSO_SERVICE_URL","displayName":"URL
        for SSO (internal service)","description":"The URL for the internal SSO service,
        where secure-sso (the default) is the kubernetes service exposed by the SSO
        server.  This is used to create the application client(s) (see SSO_USERNAME).  This
        can also be the same as SSO_URL.","value":"https://secure-sso:8443/auth"},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"The SSO realm to which the application client(s) should
        be associated (e.g. demo).","required":true},{"name":"SSO_USERNAME","displayName":"SSO
        Username","description":"The username used to access the SSO service.  This
        is used to create the appliction client(s) within the specified SSO realm.
        This should match the SSO_SERVICE_USERNAME specified through one of the sso70-*
        templates."},{"name":"SSO_PASSWORD","displayName":"SSO Password","description":"The
        password for the SSO service user."},{"name":"SSO_PUBLIC_KEY","displayName":"SSO
        Public Key","description":"SSO Public Key. Public key is recommended to be
        passed into the template to avoid man-in-the-middle security vulnerability"},{"name":"SSO_BEARER_ONLY","displayName":"SSO
        Bearer Only?","description":"SSO Client Access Type"},{"name":"ARTIFACT_DIR","displayName":"Artifact
        Directories","description":"List of directories from which archives will be
        copied into the deployment folder.  If unspecified, all archives in /target
        will be copied.","value":"app-jee-jsp/target,service-jee-jaxrs/target,app-profile-jee-jsp/target,app-profile-saml-jee-jsp/target"},{"name":"SSO_SAML_KEYSTORE_SECRET","displayName":"SSO
        SAML Keystore Secret","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret"},{"name":"SSO_SAML_KEYSTORE","displayName":"SSO
        SAML Keystore","description":"The name of the keystore file within the secret","value":"keystore.jks"},{"name":"SSO_SAML_CERTIFICATE_NAME","displayName":"SSO
        SAML Certificate Name","description":"The name associated with the server
        certificate","value":"jboss"},{"name":"SSO_SAML_KEYSTORE_PASSWORD","displayName":"SSO
        SAML Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"SSO_SECRET","displayName":"SSO
        Client Secret","description":"The SSO Client Secret for Confidential Access","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ENABLE_CORS","displayName":"Enable
        CORS for SSO?","description":"Enable CORS for SSO applications","value":"false"},{"name":"SSO_SAML_LOGOUT_PAGE","displayName":"SSO
        SAML Logout Page","description":"SSO logout page for SAML applications","value":"/"},{"name":"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","displayName":"Disable
        SSL Validation in EAP-\u003eSSO communication","description":"If true SSL
        communication between EAP and the SSO Server will be insecure (i.e. certificate
        validation is disabled with curl)","value":"true"},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"eap7-app-secret"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-sso-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-third-party-db-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-third-party-db-s2i","uid":"1b2c47f8-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687312","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 DB application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 (with https, DB drivers)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration, using third-party DB drivers and secure communication
        using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 based application with SSL support has been created in your project.
        Please be sure to create the following secrets:\"${CONFIGURATION_NAME}\" containing
        the datasource configuration details required by the deployed application(s);  \"${HTTPS_SECRET}\"
        containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"images":[{"from":{"kind":"ImageStreamTag","name":"${EXTENSIONS_IMAGE}","namespace":"${EXTENSIONS_IMAGE_NAMESPACE}"},"paths":[{"destinationDir":"./${CONTEXT_DIR}/extensions/extras","sourcePath":"${EXTENSIONS_INSTALL_DIR}/."}]}],"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"CUSTOM_INSTALL_DIRECTORIES","value":"extensions/*"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"imageChange":{"from":{"kind":"ImageStreamTag","name":"${EXTENSIONS_IMAGE}","namespace":"${EXTENSIONS_IMAGE_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"ENV_FILES","value":"/etc/eap-environment/*"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-environment","name":"configuration","readOnly":true},{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"configuration","secret":{"secretName":"${CONFIGURATION_NAME}"}},{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"CONFIGURATION_NAME","displayName":"Configuration
        Secret Name","description":"The name of the secret containing configuration
        properties for the datasources.","value":"eap-app-config","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"master"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"datavirt/hibernate-webapp"},{"name":"EXTENSIONS_IMAGE","displayName":"Drivers
        ImageStreamTag","description":"ImageStreamTag definition for the image containing
        the drivers and configuration, e.g. jboss-datavirt63-driver-openshift:1.1","value":"jboss-datavirt63-driver-openshift:1.1","required":true},{"name":"EXTENSIONS_IMAGE_NAMESPACE","displayName":"Drivers
        ImageStream Namespace","description":"Namespace within which the ImageStream
        definition for the image containing the drivers and configuration is located.","value":"openshift","required":true},{"name":"EXTENSIONS_INSTALL_DIR","displayName":"Drivers
        Image Install Directory","description":"Full path to the directory within
        the extensions image where the extensions are located (e.g. install.sh, modules/,
        etc.)","value":"/extensions","required":true},{"name":"MQ_QUEUES","displayName":"Queue
        Names","description":"Queue names to preconfigure within Messaging subsystem."},{"name":"MQ_TOPICS","displayName":"Topic
        Names","description":"Topic names to preconfigure within Messaging subsystem."},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"MQ_CLUSTER_PASSWORD","displayName":"Messaging
        Cluster Admin Password","description":"Admin password for Messaging cluster.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"A secret string used to configure the GitHub
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        to be used for securing JGroups communications.","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        JGroups secret.","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the JGroups server
        certificate","value":"secret-key"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate","value":"password"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"Password used by JGroups to authenticate
        nodes in the cluster.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap70-third-party-db-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap70-tx-recovery-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap70-tx-recovery-s2i","uid":"ce482052-5888-11e8-8ee7-d094660d31fb","resourceVersion":"1687313","creationTimestamp":"2018-05-15T21:42:03Z","annotations":{"description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.0 (tx recovery)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.0 based application, including a build configuration, application
        deployment configuration and insecure communication using http.  The template
        also demonstrates how to enable automated transaction recovery on scale down
        of application pods.  Automated transaction recovery is currently Technology
        Preview.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 based application has been created in your project.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap70-openshift:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"SPLIT_DATA","value":"${SPLIT_DATA}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/opt/eap/standalone/partitioned_data","name":"${APPLICATION_NAME}-eap-pvol"}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"${APPLICATION_NAME}-eap-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-eap-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-migration"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-migration"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-migration"},"name":"${APPLICATION_NAME}-migration"},"spec":{"containers":[{"command":["/opt/eap/bin/openshift-migrate.sh"],"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"SPLIT_DATA","value":"${SPLIT_DATA}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-migration","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/opt/eap/standalone/partitioned_data","name":"${APPLICATION_NAME}-eap-pvol"}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"${APPLICATION_NAME}-eap-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-eap-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-migration"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-eap-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"7.0.0.GA"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"kitchensink"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"},{"name":"VOLUME_CAPACITY","displayName":"EAP
        Volume Size","description":"Size of the volume used by EAP for persisting
        data.","value":"1Gi","required":true},{"name":"SPLIT_DATA","displayName":"Split
        the data directory?","description":"Split the data directory for each node
        in a cluster.","value":"true"}],"labels":{"template":"eap70-tx-recovery-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-amq-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-amq-persistent-s2i","uid":"1b2d95bd-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687314","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 + A-MQ (with https)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration, using Red Hat JBoss A-MQ with persistence and secure
        communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and A-MQ persistent based application with SSL support has been
        created in your project. The username/password for accessing the A-MQ service
        is ${MQ_USERNAME}/${MQ_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"rollingParams":{"maxSurge":0},"type":"Rolling"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/opt/amq/data/kahadb","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"helloworld-mdb"},{"name":"VOLUME_CAPACITY","displayName":"A-MQ
        Volume Size","description":"Size of the volume used by A-MQ for persisting
        messages.","value":"1Gi","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/ConnectionFactory","value":"java:/ConnectionFactory"},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh.","value":"false"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBQueue"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBTopic"},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-amq-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-amq-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-amq-s2i","uid":"1b2ee638-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687315","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 A-MQ application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 + A-MQ (with https)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration, using Red Hat JBoss A-MQ and secure communication
        using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and A-MQ based application with SSL support has been created in
        your project. The username/password for accessing the A-MQ service is ${MQ_USERNAME}/${MQ_PASSWORD}.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTP port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s HTTPS port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTP service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s HTTPS service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"AMQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"MQ_SERIALIZABLE_PACKAGES","value":"${MQ_SERIALIZABLE_PACKAGES}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.7","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"helloworld-mdb"},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/ConnectionFactory","value":"java:/ConnectionFactory"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBQueue"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"HELLOWORLDMDBTopic"},{"name":"MQ_SERIALIZABLE_PACKAGES","displayName":"A-MQ
        Serializable Packages","description":"List of packages that are allowed to
        be serialized for use in ObjectMessage, separated by commas. If your app doesn''t
        use ObjectMessages, leave this blank. This is a security enforcement. For
        the rationale, see http://activemq.apache.org/objectmessage.html"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"MQ_USERNAME","displayName":"A-MQ
        Username","description":"User name for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-amq-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-basic-s2i","uid":"1b2fec21-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687316","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 (no https)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration and insecure communication using http.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 based application has been created in your project.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}],"terminationGracePeriodSeconds":75}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"7.0.0.GA"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"kitchensink"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-basic-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-https-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-https-s2i","uid":"1b30f33d-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687317","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 (with https)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 based application with SSL support has been created in your project.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"7.0.0.GA"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"kitchensink"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-https-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-mongodb-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-mongodb-persistent-s2i","uid":"1b323cdd-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687318","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 + MongoDB (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MongoDB using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and MongoDB persistent based application with SSL support has been
        created in your project. The username/password for accessing the MongoDB database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-mongodb-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mongodb-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mongodb-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-mongodb-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-mongodb-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-mongodb-s2i","uid":"1b33c9c0-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687319","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a MongoDB database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 + MongoDB (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MongoDB using
        ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and MongoDB based application with SSL support has been created
        in your project. The username/password for accessing the MongoDB database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-mongodb-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-mysql-persistent-s2i","uid":"1b3524cd-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687320","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 + MySQL (with https)","openshift.io/provider-display-name":"Red Hat,
        Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MySQL using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and MySQL persistent based application with SSL support has been
        created in your project. The username/password for accessing the MySQL database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create
        the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"DEFAULT_JOB_REPOSITORY","value":"${APPLICATION_NAME}-mysql"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-mysql"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-mysql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-mysql-s2i","uid":"1b367189-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687321","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 + MySQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MySQL using
        ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and MySQL based application with SSL support has been created in
        your project. The username/password for accessing the MySQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"DEFAULT_JOB_REPOSITORY","value":"${APPLICATION_NAME}-mysql"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-mysql"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-mysql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-postgresql-persistent-s2i","uid":"1b37c2b4-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687322","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 + PostgreSQL (Persistent with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration, database deployment configuration for PostgreSQL
        using persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and PostgreSQL persistent based application with SSL support has
        been created in your project. The username/password for accessing the PostgreSQL
        database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure
        to create the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"DEFAULT_JOB_REPOSITORY","value":"${APPLICATION_NAME}-postgresql"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-postgresql"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-postgresql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-postgresql-s2i","uid":"1b3920fe-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687323","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 + PostgreSQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration, database deployment configuration for PostgreSQL
        using ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 and PostgreSQL based application with SSL support has been created
        in your project. The username/password for accessing the PostgreSQL database
        \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create
        the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"DEFAULT_JOB_REPOSITORY","value":"${APPLICATION_NAME}-postgresql"},{"name":"TIMER_SERVICE_DATA_STORE","value":"${APPLICATION_NAME}-postgresql"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/TodoListDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-postgresql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-sso-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-sso-s2i","uid":"1b3a6f10-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687324","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 Single Sign-On application. For more information about using
        this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 + Single Sign-On (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration and integrated with Red Hat Single Sign-On.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 based application with SSL and SSO support has been created in your
        project. Please be sure to create the following secrets: \"${HTTPS_SECRET}\"
        containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS_APPEND","value":""},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HOSTNAME_HTTP","value":"${HOSTNAME_HTTP}"},{"name":"HOSTNAME_HTTPS","value":"${HOSTNAME_HTTPS}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"SSO_URL","value":"${SSO_URL}"},{"name":"SSO_SERVICE_URL","value":"${SSO_SERVICE_URL}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_USERNAME","value":"${SSO_USERNAME}"},{"name":"SSO_PASSWORD","value":"${SSO_PASSWORD}"},{"name":"SSO_PUBLIC_KEY","value":"${SSO_PUBLIC_KEY}"},{"name":"SSO_BEARER_ONLY","value":"${SSO_BEARER_ONLY}"},{"name":"SSO_SAML_KEYSTORE_SECRET","value":"${SSO_SAML_KEYSTORE_SECRET}"},{"name":"SSO_SAML_KEYSTORE","value":"${SSO_SAML_KEYSTORE}"},{"name":"SSO_SAML_KEYSTORE_DIR","value":"/etc/sso-saml-secret-volume"},{"name":"SSO_SAML_CERTIFICATE_NAME","value":"${SSO_SAML_CERTIFICATE_NAME}"},{"name":"SSO_SAML_KEYSTORE_PASSWORD","value":"${SSO_SAML_KEYSTORE_PASSWORD}"},{"name":"SSO_SECRET","value":"${SSO_SECRET}"},{"name":"SSO_ENABLE_CORS","value":"${SSO_ENABLE_CORS}"},{"name":"SSO_SAML_LOGOUT_PAGE","value":"${SSO_SAML_LOGOUT_PAGE}"},{"name":"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","value":"${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/sso-saml-secret-volume","name":"sso-saml-keystore-volume","readOnly":true},{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"sso-saml-keystore-volume","secret":{"secretName":"${SSO_SAML_KEYSTORE_SECRET}"}},{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Hostname for http service route (e.g.
        eap-app-myproject.example.com).  Required for SSO-enabled applications.  This
        is added to the white list of redirects in the SSO server.","required":true},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Hostname for https service route (e.g.
        secure-eap-app-myproject.example.com).  Required for SSO-enabled applications.  This
        is added to the white list of redirects in the SSO server.","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/redhat-developer/redhat-sso-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"7.0.x-ose"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory."},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"eap7-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"SSO_URL","displayName":"URL
        for SSO","description":"The URL for the SSO server (e.g. https://secure-sso-myproject.example.com/auth).  This
        is the URL through which the user will be redirected when a login or token
        is required by the application.","required":true},{"name":"SSO_SERVICE_URL","displayName":"URL
        for SSO (internal service)","description":"The URL for the internal SSO service,
        where secure-sso (the default) is the kubernetes service exposed by the SSO
        server.  This is used to create the application client(s) (see SSO_USERNAME).  This
        can also be the same as SSO_URL.","value":"https://secure-sso:8443/auth"},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"The SSO realm to which the application client(s) should
        be associated (e.g. demo).","required":true},{"name":"SSO_USERNAME","displayName":"SSO
        Username","description":"The username used to access the SSO service.  This
        is used to create the appliction client(s) within the specified SSO realm.
        This should match the SSO_SERVICE_USERNAME specified through one of the sso70-*
        templates."},{"name":"SSO_PASSWORD","displayName":"SSO Password","description":"The
        password for the SSO service user."},{"name":"SSO_PUBLIC_KEY","displayName":"SSO
        Public Key","description":"SSO Public Key. Public key is recommended to be
        passed into the template to avoid man-in-the-middle security vulnerability"},{"name":"SSO_BEARER_ONLY","displayName":"SSO
        Bearer Only?","description":"SSO Client Access Type"},{"name":"ARTIFACT_DIR","displayName":"Artifact
        Directories","description":"List of directories from which archives will be
        copied into the deployment folder.  If unspecified, all archives in /target
        will be copied.","value":"app-jee-jsp/target,service-jee-jaxrs/target,app-profile-jee-jsp/target,app-profile-saml-jee-jsp/target"},{"name":"SSO_SAML_KEYSTORE_SECRET","displayName":"SSO
        SAML Keystore Secret","description":"The name of the secret containing the
        keystore file","value":"eap7-app-secret"},{"name":"SSO_SAML_KEYSTORE","displayName":"SSO
        SAML Keystore","description":"The name of the keystore file within the secret","value":"keystore.jks"},{"name":"SSO_SAML_CERTIFICATE_NAME","displayName":"SSO
        SAML Certificate Name","description":"The name associated with the server
        certificate","value":"jboss"},{"name":"SSO_SAML_KEYSTORE_PASSWORD","displayName":"SSO
        SAML Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"SSO_SECRET","displayName":"SSO
        Client Secret","description":"The SSO Client Secret for Confidential Access","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ENABLE_CORS","displayName":"Enable
        CORS for SSO?","description":"Enable CORS for SSO applications","value":"false"},{"name":"SSO_SAML_LOGOUT_PAGE","displayName":"SSO
        SAML Logout Page","description":"SSO logout page for SAML applications","value":"/"},{"name":"SSO_DISABLE_SSL_CERTIFICATE_VALIDATION","displayName":"Disable
        SSL Validation in EAP-\u003eSSO communication","description":"If true SSL
        communication between EAP and the SSO Server will be insecure (i.e. certificate
        validation is disabled with curl)","value":"true"},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"eap7-app-secret"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-sso-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-third-party-db-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-third-party-db-s2i","uid":"1b3b9a4f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687325","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example EAP 7 DB application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 (with https, DB drivers)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"eap,javaee,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration, using third-party DB drivers and secure communication
        using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 based application with SSL support has been created in your project.
        Please be sure to create the following secrets:\"${CONFIGURATION_NAME}\" containing
        the datasource configuration details required by the deployed application(s);  \"${HTTPS_SECRET}\"
        containing the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"images":[{"from":{"kind":"ImageStreamTag","name":"${EXTENSIONS_IMAGE}","namespace":"${EXTENSIONS_IMAGE_NAMESPACE}"},"paths":[{"destinationDir":"./${CONTEXT_DIR}/extensions/extras","sourcePath":"${EXTENSIONS_INSTALL_DIR}/."}]}],"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"CUSTOM_INSTALL_DIRECTORIES","value":"extensions/*"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"imageChange":{"from":{"kind":"ImageStreamTag","name":"${EXTENSIONS_IMAGE}","namespace":"${EXTENSIONS_IMAGE_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"ENV_FILES","value":"/etc/eap-environment/*"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-environment","name":"configuration","readOnly":true},{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"configuration","secret":{"secretName":"${CONFIGURATION_NAME}"}},{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"CONFIGURATION_NAME","displayName":"Configuration
        Secret Name","description":"The name of the secret containing configuration
        properties for the datasources.","value":"eap-app-config","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"master"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"datavirt/hibernate-webapp"},{"name":"EXTENSIONS_IMAGE","displayName":"Drivers
        ImageStreamTag","description":"ImageStreamTag definition for the image containing
        the drivers and configuration, e.g. jboss-datavirt63-driver-openshift:1.1","value":"jboss-datavirt63-driver-openshift:1.1","required":true},{"name":"EXTENSIONS_IMAGE_NAMESPACE","displayName":"Drivers
        ImageStream Namespace","description":"Namespace within which the ImageStream
        definition for the image containing the drivers and configuration is located.","value":"openshift","required":true},{"name":"EXTENSIONS_INSTALL_DIR","displayName":"Drivers
        Image Install Directory","description":"Full path to the directory within
        the extensions image where the extensions are located (e.g. install.sh, modules/,
        etc.)","value":"/extensions","required":true},{"name":"MQ_QUEUES","displayName":"Queue
        Names","description":"Queue names to preconfigure within Messaging subsystem."},{"name":"MQ_TOPICS","displayName":"Topic
        Names","description":"Topic names to preconfigure within Messaging subsystem."},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"eap-app-secret","required":true},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"MQ_CLUSTER_PASSWORD","displayName":"Messaging
        Cluster Admin Password","description":"Admin password for Messaging cluster.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"A secret string used to configure the GitHub
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        to be used for securing JGroups communications.","value":"eap-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        JGroups secret.","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the JGroups server
        certificate","value":"secret-key"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate","value":"password"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"Password used by JGroups to authenticate
        nodes in the cluster.","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"eap71-third-party-db-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"eap71-tx-recovery-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/eap71-tx-recovery-s2i","uid":"ce54c225-5888-11e8-8ee7-d094660d31fb","resourceVersion":"1687326","creationTimestamp":"2018-05-15T21:42:03Z","annotations":{"description":"An
        example EAP 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-eap","openshift.io/display-name":"JBoss
        EAP 7.1 (tx recovery)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"eap,javaee,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Enterprise Application
        Server 7.1 based application, including a build configuration, application
        deployment configuration and insecure communication using http.  The template
        also demonstrates how to enable automated transaction recovery on scale down
        of application pods.  Automated transaction recovery is currently Technology
        Preview.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new EAP 7 based application has been created in your project.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-eap71-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"SPLIT_DATA","value":"${SPLIT_DATA}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/opt/eap/standalone/partitioned_data","name":"${APPLICATION_NAME}-eap-pvol"}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"${APPLICATION_NAME}-eap-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-eap-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-migration"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-migration"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-migration"},"name":"${APPLICATION_NAME}-migration"},"spec":{"containers":[{"command":["/opt/eap/bin/openshift-migrate.sh"],"env":[{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"MQ_CLUSTER_PASSWORD","value":"${MQ_CLUSTER_PASSWORD}"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"AUTO_DEPLOY_EXPLODED","value":"${AUTO_DEPLOY_EXPLODED}"},{"name":"SPLIT_DATA","value":"${SPLIT_DATA}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-migration","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/opt/eap/standalone/partitioned_data","name":"${APPLICATION_NAME}-eap-pvol"}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"${APPLICATION_NAME}-eap-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-eap-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-migration"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-eap-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"eap-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-developer/jboss-eap-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"7.0.0.GA"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"kitchensink"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic names"},{"name":"MQ_CLUSTER_PASSWORD","displayName":"A-MQ
        cluster password","description":"A-MQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"AUTO_DEPLOY_EXPLODED","displayName":"Deploy
        Exploded Archives","description":"Controls whether exploded deployment content
        should be automatically deployed","value":"false"},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"},{"name":"VOLUME_CAPACITY","displayName":"EAP
        Volume Size","description":"Size of the volume used by EAP for persisting
        data.","value":"1Gi","required":true},{"name":"SPLIT_DATA","displayName":"Split
        the data directory?","description":"Split the data directory for each node
        in a cluster.","value":"true"}],"labels":{"template":"eap71-tx-recovery-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"httpd-example","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/httpd-example","uid":"19a1c15a-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687327","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example Apache HTTP Server (httpd) application that serves static content.
        For more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/httpd-ex/blob/master/README.md.","iconClass":"icon-apache","openshift.io/display-name":"Apache
        HTTP Server","openshift.io/documentation-url":"https://github.com/openshift/httpd-ex","openshift.io/long-description":"This
        template defines resources needed to develop a static application served by
        Apache HTTP Server (httpd), including a build configuration and application
        deployment configuration.","openshift.io/provider-display-name":"Red Hat,
        Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,httpd","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}.\n\nFor more
        information about using this template, including OpenShift considerations,
        see https://github.com/openshift/httpd-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"from":{"kind":"ImageStreamTag","name":"httpd:2.4","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"type":"Rolling"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[],"image":"
        ","livenessProbe":{"httpGet":{"path":"/","port":8080},"initialDelaySeconds":30,"timeoutSeconds":3},"name":"httpd-example","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/","port":8080},"initialDelaySeconds":3,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["httpd-example"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"httpd-example","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/httpd-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the httpd
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{40}"}],"labels":{"app":"httpd-example","template":"httpd-example"}},{"metadata":{"name":"jenkins-ephemeral","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jenkins-ephemeral","uid":"19a29f02-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689573","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"Jenkins
        service, without persistent storage.\n\nWARNING: Any data stored will be lost
        upon pod destruction. Only use this template for testing.","iconClass":"icon-jenkins","openshift.io/display-name":"Jenkins
        (Ephemeral)","openshift.io/documentation-url":"https://docs.openshift.org/latest/using_images/other_images/jenkins.html","openshift.io/long-description":"This
        template deploys a Jenkins server capable of managing OpenShift Pipeline builds
        and supporting OpenShift-based oauth login.  The Jenkins configuration is
        stored in non-persistent storage, so this configuration should be used for
        experimental purposes only.","openshift.io/provider-display-name":"Red Hat,
        Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"instant-app,jenkins"}},"message":"A
        Jenkins service has been created in your project.  Log into Jenkins with your
        OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md
        contains more information about using this template.","objects":[{"apiVersion":"v1","kind":"Route","metadata":{"annotations":{"haproxy.router.openshift.io/timeout":"4m","template.openshift.io/expose-uri":"http://{.spec.host}{.spec.path}"},"name":"${JENKINS_SERVICE_NAME}"},"spec":{"tls":{"insecureEdgeTerminationPolicy":"Redirect","termination":"edge"},"to":{"kind":"Service","name":"${JENKINS_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${JENKINS_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${JENKINS_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${JENKINS_SERVICE_NAME}"}},"spec":{"containers":[{"capabilities":{},"env":[{"name":"OPENSHIFT_ENABLE_OAUTH","value":"${ENABLE_OAUTH}"},{"name":"OPENSHIFT_ENABLE_REDIRECT_PROMPT","value":"true"},{"name":"KUBERNETES_MASTER","value":"https://kubernetes.default:443"},{"name":"KUBERNETES_TRUST_CERTIFICATES","value":"true"},{"name":"JENKINS_SERVICE_NAME","value":"${JENKINS_SERVICE_NAME}"},{"name":"JNLP_SERVICE_NAME","value":"${JNLP_SERVICE_NAME}"}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":2,"httpGet":{"path":"/login","port":8080},"initialDelaySeconds":420,"periodSeconds":360,"timeoutSeconds":240},"name":"jenkins","readinessProbe":{"httpGet":{"path":"/login","port":8080},"initialDelaySeconds":3,"timeoutSeconds":240},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"securityContext":{"capabilities":{},"privileged":false},"terminationMessagePath":"/dev/termination-log","volumeMounts":[{"mountPath":"/var/lib/jenkins","name":"${JENKINS_SERVICE_NAME}-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","serviceAccountName":"${JENKINS_SERVICE_NAME}","volumes":[{"emptyDir":{"medium":""},"name":"${JENKINS_SERVICE_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["jenkins"],"from":{"kind":"ImageStreamTag","name":"${JENKINS_IMAGE_STREAM_TAG}","namespace":"${NAMESPACE}"},"lastTriggeredImage":""},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"serviceaccounts.openshift.io/oauth-redirectreference.jenkins":"{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"${JENKINS_SERVICE_NAME}\"}}"},"name":"${JENKINS_SERVICE_NAME}"}},{"apiVersion":"v1","groupNames":null,"kind":"RoleBinding","metadata":{"name":"${JENKINS_SERVICE_NAME}_edit"},"roleRef":{"name":"edit"},"subjects":[{"kind":"ServiceAccount","name":"${JENKINS_SERVICE_NAME}"}]},{"apiVersion":"v1","kind":"Service","metadata":{"name":"${JNLP_SERVICE_NAME}"},"spec":{"ports":[{"name":"agent","nodePort":0,"port":50000,"protocol":"TCP","targetPort":50000}],"selector":{"name":"${JENKINS_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${JNLP_SERVICE_NAME}\", \"namespace\": \"\", \"kind\": \"Service\"}]","service.openshift.io/infrastructure":"true"},"name":"${JENKINS_SERVICE_NAME}"},"spec":{"ports":[{"name":"web","nodePort":0,"port":80,"protocol":"TCP","targetPort":8080}],"selector":{"name":"${JENKINS_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"}}],"parameters":[{"name":"JENKINS_SERVICE_NAME","displayName":"Jenkins
        Service Name","description":"The name of the OpenShift Service exposed for
        the Jenkins container.","value":"jenkins"},{"name":"JNLP_SERVICE_NAME","displayName":"Jenkins
        JNLP Service Name","description":"The name of the service used for master/slave
        communication.","value":"jenkins-jnlp"},{"name":"ENABLE_OAUTH","displayName":"Enable
        OAuth in Jenkins","description":"Whether to enable OAuth OpenShift integration.
        If false, the static account ''admin'' will be initialized with the password
        ''password''.","value":"true"},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi"},{"name":"NAMESPACE","displayName":"Jenkins
        ImageStream Namespace","description":"The OpenShift Namespace where the Jenkins
        ImageStream resides.","value":"openshift"},{"name":"JENKINS_IMAGE_STREAM_TAG","displayName":"Jenkins
        ImageStreamTag","description":"Name of the ImageStreamTag to be used for the
        Jenkins image.","value":"jenkins:2"}],"labels":{"app":"jenkins-ephemeral","template":"jenkins-ephemeral-template"}},{"metadata":{"name":"jenkins-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jenkins-persistent","uid":"19a38330-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689574","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"Jenkins
        service, with persistent storage.\n\nNOTE: You must have persistent volumes
        available in your cluster to use this template.","iconClass":"icon-jenkins","openshift.io/display-name":"Jenkins","openshift.io/documentation-url":"https://docs.openshift.org/latest/using_images/other_images/jenkins.html","openshift.io/long-description":"This
        template deploys a Jenkins server capable of managing OpenShift Pipeline builds
        and supporting OpenShift-based oauth login.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"instant-app,jenkins"}},"message":"A
        Jenkins service has been created in your project.  Log into Jenkins with your
        OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md
        contains more information about using this template.","objects":[{"apiVersion":"v1","kind":"Route","metadata":{"annotations":{"haproxy.router.openshift.io/timeout":"4m","template.openshift.io/expose-uri":"http://{.spec.host}{.spec.path}"},"name":"${JENKINS_SERVICE_NAME}"},"spec":{"tls":{"insecureEdgeTerminationPolicy":"Redirect","termination":"edge"},"to":{"kind":"Service","name":"${JENKINS_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${JENKINS_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${JENKINS_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${JENKINS_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${JENKINS_SERVICE_NAME}"}},"spec":{"containers":[{"capabilities":{},"env":[{"name":"OPENSHIFT_ENABLE_OAUTH","value":"${ENABLE_OAUTH}"},{"name":"OPENSHIFT_ENABLE_REDIRECT_PROMPT","value":"true"},{"name":"KUBERNETES_MASTER","value":"https://kubernetes.default:443"},{"name":"KUBERNETES_TRUST_CERTIFICATES","value":"true"},{"name":"JENKINS_SERVICE_NAME","value":"${JENKINS_SERVICE_NAME}"},{"name":"JNLP_SERVICE_NAME","value":"${JNLP_SERVICE_NAME}"}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":2,"httpGet":{"path":"/login","port":8080},"initialDelaySeconds":420,"periodSeconds":360,"timeoutSeconds":240},"name":"jenkins","readinessProbe":{"httpGet":{"path":"/login","port":8080},"initialDelaySeconds":3,"timeoutSeconds":240},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"securityContext":{"capabilities":{},"privileged":false},"terminationMessagePath":"/dev/termination-log","volumeMounts":[{"mountPath":"/var/lib/jenkins","name":"${JENKINS_SERVICE_NAME}-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","serviceAccountName":"${JENKINS_SERVICE_NAME}","volumes":[{"name":"${JENKINS_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${JENKINS_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["jenkins"],"from":{"kind":"ImageStreamTag","name":"${JENKINS_IMAGE_STREAM_TAG}","namespace":"${NAMESPACE}"},"lastTriggeredImage":""},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{"serviceaccounts.openshift.io/oauth-redirectreference.jenkins":"{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"${JENKINS_SERVICE_NAME}\"}}"},"name":"${JENKINS_SERVICE_NAME}"}},{"apiVersion":"v1","groupNames":null,"kind":"RoleBinding","metadata":{"name":"${JENKINS_SERVICE_NAME}_edit"},"roleRef":{"name":"edit"},"subjects":[{"kind":"ServiceAccount","name":"${JENKINS_SERVICE_NAME}"}]},{"apiVersion":"v1","kind":"Service","metadata":{"name":"${JNLP_SERVICE_NAME}"},"spec":{"ports":[{"name":"agent","nodePort":0,"port":50000,"protocol":"TCP","targetPort":50000}],"selector":{"name":"${JENKINS_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${JNLP_SERVICE_NAME}\", \"namespace\": \"\", \"kind\": \"Service\"}]","service.openshift.io/infrastructure":"true"},"name":"${JENKINS_SERVICE_NAME}"},"spec":{"ports":[{"name":"web","nodePort":0,"port":80,"protocol":"TCP","targetPort":8080}],"selector":{"name":"${JENKINS_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"}}],"parameters":[{"name":"JENKINS_SERVICE_NAME","displayName":"Jenkins
        Service Name","description":"The name of the OpenShift Service exposed for
        the Jenkins container.","value":"jenkins"},{"name":"JNLP_SERVICE_NAME","displayName":"Jenkins
        JNLP Service Name","description":"The name of the service used for master/slave
        communication.","value":"jenkins-jnlp"},{"name":"ENABLE_OAUTH","displayName":"Enable
        OAuth in Jenkins","description":"Whether to enable OAuth OpenShift integration.
        If false, the static account ''admin'' will be initialized with the password
        ''password''.","value":"true"},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi"},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi.","value":"1Gi","required":true},{"name":"NAMESPACE","displayName":"Jenkins
        ImageStream Namespace","description":"The OpenShift Namespace where the Jenkins
        ImageStream resides.","value":"openshift"},{"name":"JENKINS_IMAGE_STREAM_TAG","displayName":"Jenkins
        ImageStreamTag","description":"Name of the ImageStreamTag to be used for the
        Jenkins image.","value":"jenkins:2"}],"labels":{"app":"jenkins-persistent","template":"jenkins-persistent-template"}},{"metadata":{"name":"jws30-tomcat7-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat7-basic-s2i","uid":"1b3c99d8-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687330","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS applications built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 (no https)","tags":"tomcat,tomcat7,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new JWS application for Tomcat 7 has been created in your project. The username/password
        for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat7-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"tomcat-websocket-chat"},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"jws30-tomcat7-basic-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat7-https-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat7-https-s2i","uid":"1b3d897e-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687331","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS applications built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 (with https)","tags":"tomcat,tomcat7,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new JWS application for Tomcat 7 has been created in your project. The username/password
        for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        Please be sure to create the \"jws-service-account\" service account and the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat7-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"tomcat-websocket-chat"},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"jws30-tomcat7-https-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat7-mongodb-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat7-mongodb-persistent-s2i","uid":"1b3eb4d0-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687332","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MongoDB applications with persistent storage built using
        S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red Hat JBoss
        Web Server 3.0 Tomcat 7 + MongoDB (Persistent with https)","tags":"tomcat,tomcat7,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent JWS application for Tomcat 7 (using MongoDB) has been created
        in your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MongoDB database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the \"jws-service-account\" service account and the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat7-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-mongodb-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mongodb-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mongodb-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true}],"labels":{"template":"jws30-tomcat7-mongodb-persistent-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat7-mongodb-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat7-mongodb-s2i","uid":"1b3fe350-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687333","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MongoDB applications built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 + MongoDB (Ephemeral with https)","tags":"tomcat,tomcat7,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new JWS application for Tomcat 7 (using MongoDB) has been created in your
        project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MongoDB database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the \"jws-service-account\" service account and the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat7-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true}],"labels":{"template":"jws30-tomcat7-mongodb-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat7-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat7-mysql-persistent-s2i","uid":"1b415503-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687334","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MySQL applications with persistent storage built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 + MySQL (Persistent with https)","tags":"tomcat,tomcat7,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent JWS application for Tomcat 7 (using MySQL) has been created
        in your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the \"jws-service-account\" service account and the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat7-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/mysqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"jws30-tomcat7-mysql-persistent-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat7-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat7-mysql-s2i","uid":"1b427d20-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687335","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MySQL applications built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 + MySQL (Ephemeral with https)","tags":"tomcat,tomcat7,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new JWS application for Tomcat 7 (using MySQL) has been created in your project.
        The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the \"jws-service-account\" service account and the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat7-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/mysqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"jws30-tomcat7-mysql-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat7-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat7-postgresql-persistent-s2i","uid":"1b43abfc-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687336","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS PostgreSQL applications with persistent storage built using
        S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red Hat JBoss
        Web Server 3.0 Tomcat 7 + PostgreSQL (Persistent with https)","tags":"tomcat,tomcat7,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent JWS application for Tomcat 7 (using PostgreSQL) has been created
        in your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the PostgreSQL database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the \"jws-service-account\"
        service account and the secret named \"${JWS_HTTPS_SECRET}\" containing the
        ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat7-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/postgresqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"jws30-tomcat7-postgresql-persistent-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat7-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat7-postgresql-s2i","uid":"1b44d2d8-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687337","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS PostgreSQL applications built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 7 + PostgreSQL (Ephemeral with https)","tags":"tomcat,tomcat7,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new JWS application for Tomcat 7 (using PostgreSQL) has been created in your
        project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the PostgreSQL database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the \"jws-service-account\"
        service account and the secret named \"${JWS_HTTPS_SECRET}\" containing the
        ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat7-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/postgresqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"jws30-tomcat7-postgresql-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat8-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat8-basic-s2i","uid":"1b45c444-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687338","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS applications built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 (no https)","tags":"tomcat,tomcat8,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new JWS application for Tomcat 8 has been created in your project. The username/password
        for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat8-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"tomcat-websocket-chat"},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"jws30-tomcat8-basic-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat8-https-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat8-https-s2i","uid":"1b46be0f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687339","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS applications built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 (with https)","tags":"tomcat,tomcat8,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new JWS application for Tomcat 8 has been created in your project. The username/password
        for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        Please be sure to create the \"jws-service-account\" service account and the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat8-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"tomcat-websocket-chat"},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"jws30-tomcat8-https-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat8-mongodb-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat8-mongodb-persistent-s2i","uid":"1b47db88-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687340","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MongoDB applications with persistent storage built using
        S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red Hat JBoss
        Web Server 3.0 Tomcat 8 + MongoDB (Persistent with https)","tags":"tomcat,tomcat8,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent JWS application for Tomcat 8 (using MongoDB) has been created
        in your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MongoDB database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the \"jws-service-account\" service account and the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat8-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-mongodb-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mongodb-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mongodb-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true}],"labels":{"template":"jws30-tomcat8-mongodb-persistent-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat8-mongodb-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat8-mongodb-s2i","uid":"1b49061d-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687341","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MongoDB applications built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 + MongoDB (Ephemeral with https)","tags":"tomcat,tomcat8,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new JWS application for Tomcat 8 (using MongoDB) has been created in your
        project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MongoDB database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the \"jws-service-account\" service account and the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat8-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true}],"labels":{"template":"jws30-tomcat8-mongodb-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat8-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat8-mysql-persistent-s2i","uid":"1b4a4709-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687342","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MySQL applications with persistent storage built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 + MySQL (Persistent with https)","tags":"tomcat,tomcat8,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent JWS application for Tomcat 8 (using MySQL) has been created
        in your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the \"jws-service-account\" service account and the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat8-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/mysqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"jws30-tomcat8-mysql-persistent-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat8-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat8-mysql-s2i","uid":"1b4b78fd-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687343","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MySQL applications built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 + MySQL (Ephemeral with https)","tags":"tomcat,tomcat8,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new JWS application for Tomcat 8 (using MySQL) has been created in your project.
        The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the \"jws-service-account\" service account and the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat8-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/mysqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"jws30-tomcat8-mysql-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat8-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat8-postgresql-persistent-s2i","uid":"1b4cab25-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687344","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS PostgreSQL applications with persistent storage built using
        S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red Hat JBoss
        Web Server 3.0 Tomcat 8 + PostgreSQL (Persistent with https)","tags":"tomcat,tomcat8,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent JWS application for Tomcat 8 (using PostgreSQL) has been created
        in your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the PostgreSQL database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the \"jws-service-account\"
        service account and the secret named \"${JWS_HTTPS_SECRET}\" containing the
        ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat8-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/postgresqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"jws30-tomcat8-postgresql-persistent-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws30-tomcat8-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws30-tomcat8-postgresql-s2i","uid":"1b4dd21a-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687345","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS PostgreSQL applications built using S2I.","iconClass":"icon-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.0 Tomcat 8 + (PostgreSQL with https)","tags":"tomcat,tomcat8,java,jboss,xpaas","version":"1.4.0"}},"message":"A
        new JWS application for Tomcat 8 (using PostgreSQL) has been created in your
        project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the PostgreSQL database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the \"jws-service-account\"
        service account and the secret named \"${JWS_HTTPS_SECRET}\" containing the
        ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver30-tomcat8-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"serviceAccountName":"jws-service-account","volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}]}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/postgresqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"jws30-tomcat8-postgresql-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"jws31-tomcat7-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat7-basic-s2i","uid":"1b4f1799-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687346","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS applications built using S2I.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 7 (no https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat7,java,jboss","version":"1.4.8"}},"message":"A
        new JWS application for Apache Tomcat 7 has been created in your project.
        The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat7-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"tomcat-websocket-chat"},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"jws31-tomcat7-basic-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat7-https-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat7-https-s2i","uid":"1b50193c-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687347","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Web Server application configured for use with https. For more
        information about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 7 (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat7,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-web-server/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Web Server 3.1
        Apache Tomcat 7 based application, including a build configuration, and application
        deployment configuration. This also illustrations how to connect to the web
        applicaiton using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new JWS application for Apache Tomcat 7 has been created in your project.
        The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing
        the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat7-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"tomcat-websocket-chat"},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"jws31-tomcat7-https-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat7-mongodb-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat7-mongodb-persistent-s2i","uid":"1b514d1c-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687348","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Web Server application with a MongoDB database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 7 + MongoDB (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat7,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-web-server/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Web Server 3.1
        Apache Tomcat 7 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MongoDB using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent JWS application for Apache Tomcat 7 (using MongoDB) has been
        created in your project. The username/password for administering your JWS
        is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the MongoDB
        database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}
        (Admin password is \"${DB_ADMIN_PASSWORD}\"). Please be sure to create the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat7-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-mongodb-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mongodb-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mongodb-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true}],"labels":{"template":"jws31-tomcat7-mongodb-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat7-mongodb-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat7-mongodb-s2i","uid":"1b528072-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687349","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MongoDB applications built using S2I.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 7 + MongoDB (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat7,java,jboss,hidden","version":"1.4.8"}},"message":"A
        new JWS application for Apache Tomcat 7 (using MongoDB) has been created in
        your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MongoDB database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing
        the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat7-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true}],"labels":{"template":"jws31-tomcat7-mongodb-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat7-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat7-mysql-persistent-s2i","uid":"1b53b99a-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687350","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Web Server application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"Red
        Hat JBoss Web Server 3.1 Apache Tomcat 7 + MySQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat7,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-web-server/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Web Server 3.1
        Apache Tomcat 7 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MySQL using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent JWS application for Apache Tomcat 7 (using MySQL) has been
        created in your project. The username/password for administering your JWS
        is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please
        be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing the
        ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat7-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/mysqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"jws31-tomcat7-mysql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat7-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat7-mysql-s2i","uid":"1b54f013-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687351","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MySQL applications built using S2I.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 7 + MySQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat7,java,jboss,hidden","version":"1.4.8"}},"message":"A
        new JWS application for Apache Tomcat 7 (using MySQL) has been created in
        your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing
        the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat7-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/mysqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"jws31-tomcat7-mysql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat7-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat7-postgresql-persistent-s2i","uid":"1b5628e0-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687352","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Web Server application with a PostgreSQL database. For more
        information about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 7 + PostgreSQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat7,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-web-server/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Web Server 3.1
        Apache Tomcat 8 based application, including a build configuration, application
        deployment configuration, database deployment configuration for PostgreSQL
        using persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent JWS application for Apache Tomcat 7 (using PostgreSQL) has
        been created in your project. The username/password for administering your
        JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the PostgreSQL
        database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing
        the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat7-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/postgresqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"jws31-tomcat7-postgresql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat7-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat7-postgresql-s2i","uid":"1b5761aa-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687353","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS PostgreSQL applications built using S2I.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 7 + PostgreSQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat7,java,jboss,hidden","version":"1.4.8"}},"message":"A
        new JWS application for Apache Tomcat 7 (using PostgreSQL) has been created
        in your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the PostgreSQL database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\"
        containing the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat7-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/postgresqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"jws31-tomcat7-postgresql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat8-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat8-basic-s2i","uid":"1b585a86-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687354","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Web Server application. For more information about using this
        template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 8 (no https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat8,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-web-server/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Web Server 3.1
        Apache Tomcat 8 based application, including a build configuration, and an
        application deployment configuration.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new JWS application for Apache Tomcat 8 has been created in your project.
        The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat8-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"tomcat-websocket-chat"},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"jws31-tomcat8-basic-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat8-https-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat8-https-s2i","uid":"1b594bc2-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687355","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Web Server application. For more information about using this
        template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 8 (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat8,java,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-web-server/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Web Server 3.1
        Apache Tomcat 8 based application, including a build configuration, application
        deployment configuration, and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new JWS application for Apache Tomcat 8 has been created in your project.
        The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing
        the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat8-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"tomcat-websocket-chat"},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"jws31-tomcat8-https-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat8-mongodb-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat8-mongodb-persistent-s2i","uid":"1b5a68bf-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687356","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Web Server application with a MongoDB database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 8 + MongoDB (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat8,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-web-server/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Web Server 3.1
        Apache Tomcat 8 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MongoDB using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent JWS application for Apache Tomcat 8 (using MongoDB) has been
        created in your project. The username/password for administering your JWS
        is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the MongoDB
        database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}
        (Admin password is \"${DB_ADMIN_PASSWORD}\"). Please be sure to create the
        secret named \"${JWS_HTTPS_SECRET}\" containing the ${JWS_HTTPS_CERTIFICATE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat8-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-mongodb-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mongodb-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mongodb-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true}],"labels":{"template":"jws31-tomcat8-mongodb-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat8-mongodb-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat8-mongodb-s2i","uid":"1b5b8f2f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687357","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MongoDB applications built using S2I.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 8 + MongoDB (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat8,java,jboss,hidden","version":"1.4.8"}},"message":"A
        new JWS application for Apache Tomcat 8 (using MongoDB) has been created in
        your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MongoDB database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD} (Admin password is \"${DB_ADMIN_PASSWORD}\").
        Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing
        the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mongodb\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"ports":[{"port":27017,"targetPort":27017}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat8-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mongodb=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mongodb"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mongodb"},"name":"${APPLICATION_NAME}-mongodb"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","value":"${DB_USERNAME}"},{"name":"MONGODB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MONGODB_DATABASE","value":"${DB_DATABASE}"},{"name":"MONGODB_ADMIN_PASSWORD","value":"${DB_ADMIN_PASSWORD}"},{"name":"MONGODB_NOPREALLOC","value":"${MONGODB_NOPREALLOC}"},{"name":"MONGODB_SMALLFILES","value":"${MONGODB_SMALLFILES}"},{"name":"MONGODB_QUIET","value":"${MONGODB_QUIET}"}],"image":"mongodb","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-mongodb"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mongodb"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MONGODB_NOPREALLOC","displayName":"MongoDB No Preallocation","description":"Disable
        data file preallocation."},{"name":"MONGODB_SMALLFILES","displayName":"MongoDB
        Small Files","description":"Set MongoDB to use a smaller default data file
        size."},{"name":"MONGODB_QUIET","displayName":"MongoDB Quiet","description":"Runs
        MongoDB in a quiet mode that attempts to limit the amount of output."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_ADMIN_PASSWORD","displayName":"Database
        admin password","description":"Database admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MONGODB_IMAGE_STREAM_TAG","displayName":"MongoDB
        Image Stream Tag","description":"The tag to use for the \"mongodb\" image
        stream.  Typically, this aligns with the major.minor version of MongoDB.","value":"3.2","required":true}],"labels":{"template":"jws31-tomcat8-mongodb-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat8-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat8-mysql-persistent-s2i","uid":"1b5d0b17-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687358","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"An
        example JBoss Web Server application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 8 + MySQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat8,java,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-web-server/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat JBoss Web Server 3.1
        Apache Tomcat 8 based application, including a build configuration, application
        deployment configuration, database deployment configuration for MySQL using
        persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent JWS application for Apache Tomcat 8 (using MySQL) has been
        created in your project. The username/password for administering your JWS
        is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please
        be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing the
        ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat8-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/mysqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"jws31-tomcat8-mysql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat8-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat8-mysql-s2i","uid":"1b5e40b2-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687359","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS MySQL applications built using S2I.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.1 Apache Tomcat 8 + MySQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat8,java,jboss,hidden","version":"1.4.8"}},"message":"A
        new JWS application for Apache Tomcat 8 (using MySQL) has been created in
        your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing
        the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat8-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/mysqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"jws31-tomcat8-mysql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat8-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat8-postgresql-persistent-s2i","uid":"1b5f72b4-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687360","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS PostgreSQL applications with persistent storage built using
        S2I.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss Web
        Server 3.1 Apache Tomcat 8 + PostgreSQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat8,java,jboss","version":"1.4.8"}},"message":"A
        new persistent JWS application for Apache Tomcat 8 (using PostgreSQL) has
        been created in your project. The username/password for administering your
        JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}. For accessing the PostgreSQL
        database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\" containing
        the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat8-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/postgresqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"jws31-tomcat8-postgresql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"jws31-tomcat8-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/jws31-tomcat8-postgresql-s2i","uid":"1b609b10-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687361","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Application
        template for JWS PostgreSQL applications built using S2I.","iconClass":"icon-rh-tomcat","openshift.io/display-name":"JBoss
        Web Server 3.0 Apache Tomcat 8 + PostgreSQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"tomcat,tomcat8,java,jboss,hidden","version":"1.4.8"}},"message":"A
        new JWS application for Apache Tomcat 8 (using PostgreSQL) has been created
        in your project. The username/password for administering your JWS is ${JWS_ADMIN_USERNAME}/${JWS_ADMIN_PASSWORD}.
        For accessing the PostgreSQL database \"${DB_DATABASE}\" use the credentials
        ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the secret named \"${JWS_HTTPS_SECRET}\"
        containing the ${JWS_HTTPS_CERTIFICATE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-webserver31-tomcat8-openshift:1.1","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JWS_HTTPS_CERTIFICATE_DIR","value":"/etc/jws-secret-volume"},{"name":"JWS_HTTPS_CERTIFICATE","value":"${JWS_HTTPS_CERTIFICATE}"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","value":"${JWS_HTTPS_CERTIFICATE_KEY}"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","value":"${JWS_HTTPS_CERTIFICATE_PASSWORD}"},{"name":"JWS_ADMIN_USERNAME","value":"${JWS_ADMIN_USERNAME}"},{"name":"JWS_ADMIN_PASSWORD","value":"${JWS_ADMIN_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","curl
        --noproxy ''*'' -s -u ${JWS_ADMIN_USERNAME}:${JWS_ADMIN_PASSWORD} ''http://localhost:8080/manager/jmxproxy/?get=Catalina%3Atype%3DServer\u0026att=stateName''
        |grep -iq ''stateName *= *STARTED''"]}},"volumeMounts":[{"mountPath":"/etc/jws-secret-volume","name":"jws-certificate-volume","readOnly":true}]}],"volumes":[{"name":"jws-certificate-volume","secret":{"secretName":"${JWS_HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-data"}]}],"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"jws-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.2"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"todolist/todolist-jdbc"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. jboss/datasources/postgresqlDS","value":"jboss/datasources/defaultDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"JWS_HTTPS_SECRET","displayName":"Secret
        Name","description":"The name of the secret containing the certificate files","value":"jws-app-secret","required":true},{"name":"JWS_HTTPS_CERTIFICATE","displayName":"Certificate
        Name","description":"The name of the certificate file within the secret","value":"server.crt"},{"name":"JWS_HTTPS_CERTIFICATE_KEY","displayName":"Certificate
        Key Name","description":"The name of the certificate key file within the secret","value":"server.key"},{"name":"JWS_HTTPS_CERTIFICATE_PASSWORD","displayName":"Certificate
        Password","description":"The certificate password"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_USERNAME","displayName":"JWS
        Admin Username","description":"JWS Admin User","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JWS_ADMIN_PASSWORD","displayName":"JWS
        Admin Password","description":"JWS Admin Password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"jws31-tomcat8-postgresql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"mariadb-ephemeral","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/mariadb-ephemeral","uid":"174fb3fa-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689527","creationTimestamp":"2018-02-08T20:46:09Z","annotations":{"description":"MariaDB
        database service, without persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing","iconClass":"icon-mariadb","openshift.io/display-name":"MariaDB
        (Ephemeral)","openshift.io/documentation-url":"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md","openshift.io/long-description":"This
        template provides a standalone MariaDB server with a database created.  The
        database is not stored on persistent storage, so any restart of the service
        will result in all data being lost.  The database name, username, and password
        are chosen via parameters when provisioning this service.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"database,mariadb"}},"message":"The
        following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username:
        ${MYSQL_USER}\n       Password: ${MYSQL_PASSWORD}\n  Database Name: ${MYSQL_DATABASE}\n
        Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/\n\nFor more information
        about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-database_name":"{.data[''database-name'']}","template.openshift.io/expose-password":"{.data[''database-password'']}","template.openshift.io/expose-root_password":"{.data[''database-root-password'']}","template.openshift.io/expose-username":"{.data[''database-user'']}"},"name":"${DATABASE_SERVICE_NAME}"},"stringData":{"database-name":"${MYSQL_DATABASE}","database-password":"${MYSQL_PASSWORD}","database-root-password":"${MYSQL_ROOT_PASSWORD}","database-user":"${MYSQL_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"template.openshift.io/expose-uri":"mysql://{.spec.clusterIP}:{.spec.ports[?(.name==\"mariadb\")].port}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mariadb","port":3306}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"}},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_ROOT_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-root-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_DATABASE","valueFrom":{"secretKeyRef":{"key":"database-name","name":"${DATABASE_SERVICE_NAME}"}}}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":3306},"timeoutSeconds":1},"name":"mariadb","ports":[{"containerPort":3306}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","MYSQL_PWD=\"$MYSQL_PASSWORD\"
        mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e ''SELECT 1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"volumes":[{"emptyDir":{"medium":""},"name":"${DATABASE_SERVICE_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mariadb"],"from":{"kind":"ImageStreamTag","name":"mariadb:${MARIADB_VERSION}","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","description":"The name of the OpenShift Service exposed for
        the database.","value":"mariadb","required":true},{"name":"MYSQL_USER","displayName":"MariaDB
        Connection Username","description":"Username for MariaDB user that will be
        used for accessing the database.","generate":"expression","from":"user[A-Z0-9]{3}","required":true},{"name":"MYSQL_PASSWORD","displayName":"MariaDB
        Connection Password","description":"Password for the MariaDB connection user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MYSQL_ROOT_PASSWORD","displayName":"MariaDB
        root Password","description":"Password for the MariaDB root user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MYSQL_DATABASE","displayName":"MariaDB
        Database Name","description":"Name of the MariaDB database accessed.","value":"sampledb","required":true},{"name":"MARIADB_VERSION","displayName":"Version
        of MariaDB Image","description":"Version of MariaDB image to be used (10.0,
        10.1, 10.2 or latest).","value":"10.2","required":true}],"labels":{"template":"mariadb-persistent-template"}},{"metadata":{"name":"mariadb-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/mariadb-persistent","uid":"1750b5d6-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689528","creationTimestamp":"2018-02-08T20:46:09Z","annotations":{"description":"MariaDB
        database service, with persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md.\n\nNOTE:
        Scaling to more than one replica is not supported. You must have persistent
        volumes available in your cluster to use this template.","iconClass":"icon-mariadb","openshift.io/display-name":"MariaDB","openshift.io/documentation-url":"https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md","openshift.io/long-description":"This
        template provides a standalone MariaDB server with a database created.  The
        database is stored on persistent storage.  The database name, username, and
        password are chosen via parameters when provisioning this service.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"database,mariadb"}},"message":"The
        following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username:
        ${MYSQL_USER}\n       Password: ${MYSQL_PASSWORD}\n  Database Name: ${MYSQL_DATABASE}\n
        Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/\n\nFor more information
        about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-database_name":"{.data[''database-name'']}","template.openshift.io/expose-password":"{.data[''database-password'']}","template.openshift.io/expose-root_password":"{.data[''database-root-password'']}","template.openshift.io/expose-username":"{.data[''database-user'']}"},"name":"${DATABASE_SERVICE_NAME}"},"stringData":{"database-name":"${MYSQL_DATABASE}","database-password":"${MYSQL_PASSWORD}","database-root-password":"${MYSQL_ROOT_PASSWORD}","database-user":"${MYSQL_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"template.openshift.io/expose-uri":"mysql://{.spec.clusterIP}:{.spec.ports[?(.name==\"mariadb\")].port}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mariadb","port":3306}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"}},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_ROOT_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-root-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_DATABASE","valueFrom":{"secretKeyRef":{"key":"database-name","name":"${DATABASE_SERVICE_NAME}"}}}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":3306},"timeoutSeconds":1},"name":"mariadb","ports":[{"containerPort":3306}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","MYSQL_PWD=\"$MYSQL_PASSWORD\"
        mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e ''SELECT 1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mariadb"],"from":{"kind":"ImageStreamTag","name":"mariadb:${MARIADB_VERSION}","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","description":"The name of the OpenShift Service exposed for
        the database.","value":"mariadb","required":true},{"name":"MYSQL_USER","displayName":"MariaDB
        Connection Username","description":"Username for MariaDB user that will be
        used for accessing the database.","generate":"expression","from":"user[A-Z0-9]{3}","required":true},{"name":"MYSQL_PASSWORD","displayName":"MariaDB
        Connection Password","description":"Password for the MariaDB connection user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MYSQL_ROOT_PASSWORD","displayName":"MariaDB
        root Password","description":"Password for the MariaDB root user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MYSQL_DATABASE","displayName":"MariaDB
        Database Name","description":"Name of the MariaDB database accessed.","value":"sampledb","required":true},{"name":"MARIADB_VERSION","displayName":"Version
        of MariaDB Image","description":"Version of MariaDB image to be used (10.0,
        10.1, 10.2 or latest).","value":"10.2","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi.","value":"1Gi","required":true}],"labels":{"template":"mariadb-persistent-template"}},{"metadata":{"name":"mongodb-ephemeral","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/mongodb-ephemeral","uid":"1751dc6f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687364","creationTimestamp":"2018-02-08T20:46:09Z","annotations":{"description":"MongoDB
        database service, without persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing","iconClass":"icon-mongodb","openshift.io/display-name":"MongoDB
        (Ephemeral)","openshift.io/documentation-url":"https://docs.openshift.org/latest/using_images/db_images/mongodb.html","openshift.io/long-description":"This
        template provides a standalone MongoDB server with a database created.  The
        database is not stored on persistent storage, so any restart of the service
        will result in all data being lost.  The database name, username, and password
        are chosen via parameters when provisioning this service.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"database,mongodb"}},"message":"The
        following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username:
        ${MONGODB_USER}\n       Password: ${MONGODB_PASSWORD}\n  Database Name: ${MONGODB_DATABASE}\n
        Connection URL: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${DATABASE_SERVICE_NAME}/${MONGODB_DATABASE}\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-admin_password":"{.data[''database-admin-password'']}","template.openshift.io/expose-database_name":"{.data[''database-name'']}","template.openshift.io/expose-password":"{.data[''database-password'']}","template.openshift.io/expose-username":"{.data[''database-user'']}"},"name":"${DATABASE_SERVICE_NAME}"},"stringData":{"database-admin-password":"${MONGODB_ADMIN_PASSWORD}","database-name":"${MONGODB_DATABASE}","database-password":"${MONGODB_PASSWORD}","database-user":"${MONGODB_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"template.openshift.io/expose-uri":"mongodb://{.spec.clusterIP}:{.spec.ports[?(.name==\"mongo\")].port}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mongo","nodePort":0,"port":27017,"protocol":"TCP","targetPort":27017}],"selector":{"name":"${DATABASE_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"}},"spec":{"containers":[{"capabilities":{},"env":[{"name":"MONGODB_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MONGODB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MONGODB_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-admin-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MONGODB_DATABASE","valueFrom":{"secretKeyRef":{"key":"database-name","name":"${DATABASE_SERVICE_NAME}"}}}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":27017},"timeoutSeconds":1},"name":"mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","mongo
        127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""]},"initialDelaySeconds":3,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"securityContext":{"capabilities":{},"privileged":false},"terminationMessagePath":"/dev/termination-log","volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","volumes":[{"emptyDir":{"medium":""},"name":"${DATABASE_SERVICE_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_VERSION}","namespace":"${NAMESPACE}"},"lastTriggeredImage":""},"type":"ImageChange"},{"type":"ConfigChange"}]},"status":{}}],"parameters":[{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","description":"The name of the OpenShift Service exposed for
        the database.","value":"mongodb","required":true},{"name":"MONGODB_USER","displayName":"MongoDB
        Connection Username","description":"Username for MongoDB user that will be
        used for accessing the database.","generate":"expression","from":"user[A-Z0-9]{3}","required":true},{"name":"MONGODB_PASSWORD","displayName":"MongoDB
        Connection Password","description":"Password for the MongoDB connection user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MONGODB_DATABASE","displayName":"MongoDB
        Database Name","description":"Name of the MongoDB database accessed.","value":"sampledb","required":true},{"name":"MONGODB_ADMIN_PASSWORD","displayName":"MongoDB
        Admin Password","description":"Password for the database admin user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MONGODB_VERSION","displayName":"Version
        of MongoDB Image","description":"Version of MongoDB image to be used (2.4,
        2.6, 3.2 or latest).","value":"3.2","required":true}],"labels":{"template":"mongodb-ephemeral-template"}},{"metadata":{"name":"mongodb-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/mongodb-persistent","uid":"1752bf6f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687365","creationTimestamp":"2018-02-08T20:46:09Z","annotations":{"description":"MongoDB
        database service, with persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.\n\nNOTE:
        Scaling to more than one replica is not supported. You must have persistent
        volumes available in your cluster to use this template.","iconClass":"icon-mongodb","openshift.io/display-name":"MongoDB","openshift.io/documentation-url":"https://docs.openshift.org/latest/using_images/db_images/mongodb.html","openshift.io/long-description":"This
        template provides a standalone MongoDB server with a database created.  The
        database is stored on persistent storage.  The database name, username, and
        password are chosen via parameters when provisioning this service.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"database,mongodb"}},"message":"The
        following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username:
        ${MONGODB_USER}\n       Password: ${MONGODB_PASSWORD}\n  Database Name: ${MONGODB_DATABASE}\n
        Connection URL: mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${DATABASE_SERVICE_NAME}/${MONGODB_DATABASE}\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-admin_password":"{.data[''database-admin-password'']}","template.openshift.io/expose-database_name":"{.data[''database-name'']}","template.openshift.io/expose-password":"{.data[''database-password'']}","template.openshift.io/expose-username":"{.data[''database-user'']}"},"name":"${DATABASE_SERVICE_NAME}"},"stringData":{"database-admin-password":"${MONGODB_ADMIN_PASSWORD}","database-name":"${MONGODB_DATABASE}","database-password":"${MONGODB_PASSWORD}","database-user":"${MONGODB_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"template.openshift.io/expose-uri":"mongodb://{.spec.clusterIP}:{.spec.ports[?(.name==\"mongo\")].port}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mongo","nodePort":0,"port":27017,"protocol":"TCP","targetPort":27017}],"selector":{"name":"${DATABASE_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"}},"spec":{"containers":[{"capabilities":{},"env":[{"name":"MONGODB_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MONGODB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MONGODB_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-admin-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MONGODB_DATABASE","valueFrom":{"secretKeyRef":{"key":"database-name","name":"${DATABASE_SERVICE_NAME}"}}}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":27017},"timeoutSeconds":1},"name":"mongodb","ports":[{"containerPort":27017,"protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","mongo
        127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""]},"initialDelaySeconds":3,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"securityContext":{"capabilities":{},"privileged":false},"terminationMessagePath":"/dev/termination-log","volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:${MONGODB_VERSION}","namespace":"${NAMESPACE}"},"lastTriggeredImage":""},"type":"ImageChange"},{"type":"ConfigChange"}]},"status":{}}],"parameters":[{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","description":"The name of the OpenShift Service exposed for
        the database.","value":"mongodb","required":true},{"name":"MONGODB_USER","displayName":"MongoDB
        Connection Username","description":"Username for MongoDB user that will be
        used for accessing the database.","generate":"expression","from":"user[A-Z0-9]{3}","required":true},{"name":"MONGODB_PASSWORD","displayName":"MongoDB
        Connection Password","description":"Password for the MongoDB connection user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MONGODB_DATABASE","displayName":"MongoDB
        Database Name","description":"Name of the MongoDB database accessed.","value":"sampledb","required":true},{"name":"MONGODB_ADMIN_PASSWORD","displayName":"MongoDB
        Admin Password","description":"Password for the database admin user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi.","value":"1Gi","required":true},{"name":"MONGODB_VERSION","displayName":"Version
        of MongoDB Image","description":"Version of MongoDB image to be used (2.4,
        2.6, 3.2 or latest).","value":"3.2","required":true}],"labels":{"template":"mongodb-persistent-template"}},{"metadata":{"name":"mysql-ephemeral","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/mysql-ephemeral","uid":"17539bd2-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689529","creationTimestamp":"2018-02-08T20:46:09Z","annotations":{"description":"MySQL
        database service, without persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/root/usr/share/container-scripts/mysql/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing","iconClass":"icon-mysql-database","openshift.io/display-name":"MySQL
        (Ephemeral)","openshift.io/documentation-url":"https://docs.openshift.org/latest/using_images/db_images/mysql.html","openshift.io/long-description":"This
        template provides a standalone MySQL server with a database created.  The
        database is not stored on persistent storage, so any restart of the service
        will result in all data being lost.  The database name, username, and password
        are chosen via parameters when provisioning this service.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"database,mysql"}},"message":"The
        following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username:
        ${MYSQL_USER}\n       Password: ${MYSQL_PASSWORD}\n  Database Name: ${MYSQL_DATABASE}\n
        Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/\n\nFor more information
        about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/root/usr/share/container-scripts/mysql/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-database_name":"{.data[''database-name'']}","template.openshift.io/expose-password":"{.data[''database-password'']}","template.openshift.io/expose-root_password":"{.data[''database-root-password'']}","template.openshift.io/expose-username":"{.data[''database-user'']}"},"name":"${DATABASE_SERVICE_NAME}"},"stringData":{"database-name":"${MYSQL_DATABASE}","database-password":"${MYSQL_PASSWORD}","database-root-password":"${MYSQL_ROOT_PASSWORD}","database-user":"${MYSQL_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"template.openshift.io/expose-uri":"mysql://{.spec.clusterIP}:{.spec.ports[?(.name==\"mysql\")].port}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mysql","nodePort":0,"port":3306,"protocol":"TCP","targetPort":3306}],"selector":{"name":"${DATABASE_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"}},"spec":{"containers":[{"capabilities":{},"env":[{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_ROOT_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-root-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_DATABASE","valueFrom":{"secretKeyRef":{"key":"database-name","name":"${DATABASE_SERVICE_NAME}"}}}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":3306},"timeoutSeconds":1},"name":"mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","MYSQL_PWD=\"$MYSQL_PASSWORD\"
        mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e ''SELECT 1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"securityContext":{"capabilities":{},"privileged":false},"terminationMessagePath":"/dev/termination-log","volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","volumes":[{"emptyDir":{"medium":""},"name":"${DATABASE_SERVICE_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_VERSION}","namespace":"${NAMESPACE}"},"lastTriggeredImage":""},"type":"ImageChange"},{"type":"ConfigChange"}]},"status":{}}],"parameters":[{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","description":"The name of the OpenShift Service exposed for
        the database.","value":"mysql","required":true},{"name":"MYSQL_USER","displayName":"MySQL
        Connection Username","description":"Username for MySQL user that will be used
        for accessing the database.","generate":"expression","from":"user[A-Z0-9]{3}","required":true},{"name":"MYSQL_PASSWORD","displayName":"MySQL
        Connection Password","description":"Password for the MySQL connection user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MYSQL_ROOT_PASSWORD","displayName":"MySQL
        root user Password","description":"Password for the MySQL root user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MYSQL_DATABASE","displayName":"MySQL
        Database Name","description":"Name of the MySQL database accessed.","value":"sampledb","required":true},{"name":"MYSQL_VERSION","displayName":"Version
        of MySQL Image","description":"Version of MySQL image to be used (5.5, 5.6,
        5.7, or latest).","value":"5.7","required":true}],"labels":{"template":"mysql-ephemeral-template"}},{"metadata":{"name":"mysql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/mysql-persistent","uid":"1754752d-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689530","creationTimestamp":"2018-02-08T20:46:09Z","annotations":{"description":"MySQL
        database service, with persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/root/usr/share/container-scripts/mysql/README.md.\n\nNOTE:
        Scaling to more than one replica is not supported. You must have persistent
        volumes available in your cluster to use this template.","iconClass":"icon-mysql-database","openshift.io/display-name":"MySQL","openshift.io/documentation-url":"https://docs.openshift.org/latest/using_images/db_images/mysql.html","openshift.io/long-description":"This
        template provides a standalone MySQL server with a database created.  The
        database is stored on persistent storage.  The database name, username, and
        password are chosen via parameters when provisioning this service.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"database,mysql"}},"message":"The
        following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username:
        ${MYSQL_USER}\n       Password: ${MYSQL_PASSWORD}\n  Database Name: ${MYSQL_DATABASE}\n
        Connection URL: mysql://${DATABASE_SERVICE_NAME}:3306/\n\nFor more information
        about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/root/usr/share/container-scripts/mysql/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-database_name":"{.data[''database-name'']}","template.openshift.io/expose-password":"{.data[''database-password'']}","template.openshift.io/expose-root_password":"{.data[''database-root-password'']}","template.openshift.io/expose-username":"{.data[''database-user'']}"},"name":"${DATABASE_SERVICE_NAME}"},"stringData":{"database-name":"${MYSQL_DATABASE}","database-password":"${MYSQL_PASSWORD}","database-root-password":"${MYSQL_ROOT_PASSWORD}","database-user":"${MYSQL_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"template.openshift.io/expose-uri":"mysql://{.spec.clusterIP}:{.spec.ports[?(.name==\"mysql\")].port}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mysql","port":3306}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"}},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_ROOT_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-root-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"MYSQL_DATABASE","valueFrom":{"secretKeyRef":{"key":"database-name","name":"${DATABASE_SERVICE_NAME}"}}}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":3306},"timeoutSeconds":1},"name":"mysql","ports":[{"containerPort":3306}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","MYSQL_PWD=\"$MYSQL_PASSWORD\"
        mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e ''SELECT 1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_VERSION}","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","description":"The name of the OpenShift Service exposed for
        the database.","value":"mysql","required":true},{"name":"MYSQL_USER","displayName":"MySQL
        Connection Username","description":"Username for MySQL user that will be used
        for accessing the database.","generate":"expression","from":"user[A-Z0-9]{3}","required":true},{"name":"MYSQL_PASSWORD","displayName":"MySQL
        Connection Password","description":"Password for the MySQL connection user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MYSQL_ROOT_PASSWORD","displayName":"MySQL
        root user Password","description":"Password for the MySQL root user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"MYSQL_DATABASE","displayName":"MySQL
        Database Name","description":"Name of the MySQL database accessed.","value":"sampledb","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi.","value":"1Gi","required":true},{"name":"MYSQL_VERSION","displayName":"Version
        of MySQL Image","description":"Version of MySQL image to be used (5.5, 5.6,
        5.7, or latest).","value":"5.7","required":true}],"labels":{"template":"mysql-persistent-template"}},{"metadata":{"name":"nginx-example","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/nginx-example","uid":"1e443dec-594a-11e8-ba7e-d094660d31fb","resourceVersion":"1689429","creationTimestamp":"2018-05-16T20:45:50Z","annotations":{"description":"An
        example Nginx HTTP server and a reverse proxy (nginx) application that serves
        static content. For more information about using this template, including
        OpenShift considerations, see https://github.com/sclorg/nginx-ex/blob/master/README.md.","iconClass":"icon-nginx","openshift.io/display-name":"Nginx
        HTTP server and a reverse proxy","openshift.io/documentation-url":"https://github.com/sclorg/nginx-ex","openshift.io/long-description":"This
        template defines resources needed to develop a static application served by
        Nginx HTTP server and a reverse proxy (nginx), including a build configuration
        and application deployment configuration.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,nginx"}},"message":"The
        following service(s) have been created in your project: ${NAME}.\n\nFor more
        information about using this template, including OpenShift considerations,
        see https://github.com/sclorg/nginx-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"annotations":{"template.openshift.io/expose-uri":"http://{.spec.host}{.spec.path}"},"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"from":{"kind":"ImageStreamTag","name":"nginx:${NGINX_VERSION}","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"type":"Rolling"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[],"image":"
        ","livenessProbe":{"httpGet":{"path":"/","port":8080},"initialDelaySeconds":30,"timeoutSeconds":3},"name":"nginx-example","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/","port":8080},"initialDelaySeconds":3,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["nginx-example"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"nginx-example","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"NGINX_VERSION","displayName":"NGINX
        Version","description":"Version of NGINX image to be used (1.12 by default).","value":"1.12","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/sclorg/nginx-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the nginx
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{40}"}],"labels":{"template":"nginx-example"}},{"metadata":{"name":"nodejs-mongo-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/nodejs-mongo-persistent","uid":"19a48747-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689575","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example Node.js application with a MongoDB database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.","iconClass":"icon-nodejs","openshift.io/display-name":"Node.js
        + MongoDB","openshift.io/documentation-url":"https://github.com/openshift/nodejs-ex","openshift.io/long-description":"This
        template defines resources needed to develop a NodeJS application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.","openshift.io/provider-display-name":"Red Hat,
        Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,nodejs","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/nodejs-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"database-admin-password":"${DATABASE_ADMIN_PASSWORD}","database-password":"${DATABASE_PASSWORD}","database-user":"${DATABASE_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{"script":"npm
        test"},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"NPM_MIRROR","value":"${NPM_MIRROR}"}],"from":{"kind":"ImageStreamTag","name":"nodejs:6","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"MONGODB_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"MONGODB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"MONGODB_DATABASE","value":"${DATABASE_NAME}"},{"name":"MONGODB_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-admin-password","name":"${NAME}"}}}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/pagecount","port":8080},"initialDelaySeconds":30,"timeoutSeconds":3},"name":"nodejs-mongo-persistent","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/pagecount","port":8080},"initialDelaySeconds":3,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["nodejs-mongo-persistent"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mongodb","port":27017,"targetPort":27017}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"MONGODB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"MONGODB_DATABASE","value":"${DATABASE_NAME}"},{"name":"MONGODB_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-admin-password","name":"${NAME}"}}}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":27017},"timeoutSeconds":1},"name":"mongodb","ports":[{"containerPort":27017}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","mongo
        127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""]},"initialDelaySeconds":3,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_MONGODB_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:3.2","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"nodejs-mongo-persistent","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the Node.js container can use.","value":"512Mi","required":true},{"name":"MEMORY_MONGODB_LIMIT","displayName":"Memory
        Limit (MongoDB)","description":"Maximum amount of memory the MongoDB container
        can use.","value":"512Mi","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi","value":"1Gi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/nodejs-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the Node.js
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"mongodb","required":true},{"name":"DATABASE_USER","displayName":"MongoDB
        Username","description":"Username for MongoDB user that will be used for accessing
        the database.","generate":"expression","from":"user[A-Z0-9]{3}"},{"name":"DATABASE_PASSWORD","displayName":"MongoDB
        Password","description":"Password for the MongoDB user.","generate":"expression","from":"[a-zA-Z0-9]{16}"},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"sampledb","required":true},{"name":"DATABASE_ADMIN_PASSWORD","displayName":"Database
        Administrator Password","description":"Password for the database admin user.","generate":"expression","from":"[a-zA-Z0-9]{16}"},{"name":"NPM_MIRROR","displayName":"Custom
        NPM Mirror URL","description":"The custom NPM mirror URL"}],"labels":{"template":"nodejs-mongo-persistent"}},{"metadata":{"name":"nodejs-mongodb-example","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/nodejs-mongodb-example","uid":"19a58974-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687369","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example Node.js application with a MongoDB database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing.","iconClass":"icon-nodejs","openshift.io/display-name":"Node.js
        + MongoDB (Ephemeral)","openshift.io/documentation-url":"https://github.com/openshift/nodejs-ex","openshift.io/long-description":"This
        template defines resources needed to develop a NodeJS application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.  The database is stored in non-persistent storage,
        so this configuration should be used for experimental purposes only.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,nodejs","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/nodejs-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"database-admin-password":"${DATABASE_ADMIN_PASSWORD}","database-password":"${DATABASE_PASSWORD}","database-user":"${DATABASE_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{"script":"npm
        test"},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"NPM_MIRROR","value":"${NPM_MIRROR}"}],"from":{"kind":"ImageStreamTag","name":"nodejs:6","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"MONGODB_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"MONGODB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"MONGODB_DATABASE","value":"${DATABASE_NAME}"},{"name":"MONGODB_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-admin-password","name":"${NAME}"}}}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/pagecount","port":8080},"initialDelaySeconds":30,"timeoutSeconds":3},"name":"nodejs-mongodb-example","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/pagecount","port":8080},"initialDelaySeconds":3,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["nodejs-mongodb-example"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"mongodb","port":27017,"targetPort":27017}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"MONGODB_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"MONGODB_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"MONGODB_DATABASE","value":"${DATABASE_NAME}"},{"name":"MONGODB_ADMIN_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-admin-password","name":"${NAME}"}}}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":27017},"timeoutSeconds":1},"name":"mongodb","ports":[{"containerPort":27017}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","mongo
        127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD --eval=\"quit()\""]},"initialDelaySeconds":3,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_MONGODB_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/mongodb/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"volumes":[{"emptyDir":{"medium":""},"name":"${DATABASE_SERVICE_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["mongodb"],"from":{"kind":"ImageStreamTag","name":"mongodb:3.2","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"nodejs-mongodb-example","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the Node.js container can use.","value":"512Mi","required":true},{"name":"MEMORY_MONGODB_LIMIT","displayName":"Memory
        Limit (MongoDB)","description":"Maximum amount of memory the MongoDB container
        can use.","value":"512Mi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/nodejs-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the Node.js
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"A secret string used to configure the Generic
        webhook.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"mongodb","required":true},{"name":"DATABASE_USER","displayName":"MongoDB
        Username","description":"Username for MongoDB user that will be used for accessing
        the database.","generate":"expression","from":"user[A-Z0-9]{3}"},{"name":"DATABASE_PASSWORD","displayName":"MongoDB
        Password","description":"Password for the MongoDB user.","generate":"expression","from":"[a-zA-Z0-9]{16}"},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"sampledb","required":true},{"name":"DATABASE_ADMIN_PASSWORD","displayName":"Database
        Administrator Password","description":"Password for the database admin user.","generate":"expression","from":"[a-zA-Z0-9]{16}"},{"name":"NPM_MIRROR","displayName":"Custom
        NPM Mirror URL","description":"The custom NPM mirror URL"}],"labels":{"app":"nodejs-mongodb-example","template":"nodejs-mongodb-example"}},{"metadata":{"name":"openjdk18-web-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/openjdk18-web-basic-s2i","uid":"1b652b20-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687370","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example Java application using OpenJDK 8. For more information about using
        this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-rh-openjdk","openshift.io/display-name":"OpenJDK
        8","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"java","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat OpenJDK Java 8 based
        application.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new java application has been created in your project.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        application''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"forcePull":true,"from":{"kind":"ImageStreamTag","name":"redhat-openjdk18-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}]}],"terminationGracePeriodSeconds":75}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"openjdk-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"master"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"undertow-servlet"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true}],"labels":{"template":"openjdk18-web-basic-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"postgresql-ephemeral","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/postgresql-ephemeral","uid":"17554df6-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689531","creationTimestamp":"2018-02-08T20:46:09Z","annotations":{"description":"PostgreSQL
        database service, without persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing","iconClass":"icon-postgresql","openshift.io/display-name":"PostgreSQL
        (Ephemeral)","openshift.io/documentation-url":"https://docs.openshift.org/latest/using_images/db_images/postgresql.html","openshift.io/long-description":"This
        template provides a standalone PostgreSQL server with a database created.  The
        database is not stored on persistent storage, so any restart of the service
        will result in all data being lost.  The database name, username, and password
        are chosen via parameters when provisioning this service.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"database,postgresql"}},"message":"The
        following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username:
        ${POSTGRESQL_USER}\n       Password: ${POSTGRESQL_PASSWORD}\n  Database Name:
        ${POSTGRESQL_DATABASE}\n Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/sclorg/postgresql-container/.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-database_name":"{.data[''database-name'']}","template.openshift.io/expose-password":"{.data[''database-password'']}","template.openshift.io/expose-username":"{.data[''database-user'']}"},"name":"${DATABASE_SERVICE_NAME}"},"stringData":{"database-name":"${POSTGRESQL_DATABASE}","database-password":"${POSTGRESQL_PASSWORD}","database-user":"${POSTGRESQL_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"template.openshift.io/expose-uri":"postgres://{.spec.clusterIP}:{.spec.ports[?(.name==\"postgresql\")].port}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","nodePort":0,"port":5432,"protocol":"TCP","targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"}},"spec":{"containers":[{"capabilities":{},"env":[{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"POSTGRESQL_DATABASE","valueFrom":{"secretKeyRef":{"key":"database-name","name":"${DATABASE_SERVICE_NAME}"}}}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/bin/sh","-i","-c","pg_isready
        -h 127.0.0.1 -p 5432"]},"initialDelaySeconds":30,"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c ''SELECT 1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"securityContext":{"capabilities":{},"privileged":false},"terminationMessagePath":"/dev/termination-log","volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","volumes":[{"emptyDir":{"medium":""},"name":"${DATABASE_SERVICE_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_VERSION}","namespace":"${NAMESPACE}"},"lastTriggeredImage":""},"type":"ImageChange"},{"type":"ConfigChange"}]},"status":{}}],"parameters":[{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","description":"The name of the OpenShift Service exposed for
        the database.","value":"postgresql","required":true},{"name":"POSTGRESQL_USER","displayName":"PostgreSQL
        Connection Username","description":"Username for PostgreSQL user that will
        be used for accessing the database.","generate":"expression","from":"user[A-Z0-9]{3}","required":true},{"name":"POSTGRESQL_PASSWORD","displayName":"PostgreSQL
        Connection Password","description":"Password for the PostgreSQL connection
        user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"POSTGRESQL_DATABASE","displayName":"PostgreSQL
        Database Name","description":"Name of the PostgreSQL database accessed.","value":"sampledb","required":true},{"name":"POSTGRESQL_VERSION","displayName":"Version
        of PostgreSQL Image","description":"Version of PostgreSQL image to be used
        (9.4, 9.5, 9.6 or latest).","value":"9.6","required":true}],"labels":{"template":"postgresql-ephemeral-template"}},{"metadata":{"name":"postgresql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/postgresql-persistent","uid":"1756262c-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689532","creationTimestamp":"2018-02-08T20:46:09Z","annotations":{"description":"PostgreSQL
        database service, with persistent storage. For more information about using
        this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/.\n\nNOTE:
        Scaling to more than one replica is not supported. You must have persistent
        volumes available in your cluster to use this template.","iconClass":"icon-postgresql","openshift.io/display-name":"PostgreSQL","openshift.io/documentation-url":"https://docs.openshift.org/latest/using_images/db_images/postgresql.html","openshift.io/long-description":"This
        template provides a standalone PostgreSQL server with a database created.  The
        database is stored on persistent storage.  The database name, username, and
        password are chosen via parameters when provisioning this service.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"database,postgresql"}},"message":"The
        following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Username:
        ${POSTGRESQL_USER}\n       Password: ${POSTGRESQL_PASSWORD}\n  Database Name:
        ${POSTGRESQL_DATABASE}\n Connection URL: postgresql://${DATABASE_SERVICE_NAME}:5432/\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/sclorg/postgresql-container/.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-database_name":"{.data[''database-name'']}","template.openshift.io/expose-password":"{.data[''database-password'']}","template.openshift.io/expose-username":"{.data[''database-user'']}"},"name":"${DATABASE_SERVICE_NAME}"},"stringData":{"database-name":"${POSTGRESQL_DATABASE}","database-password":"${POSTGRESQL_PASSWORD}","database-user":"${POSTGRESQL_USER}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"template.openshift.io/expose-uri":"postgres://{.spec.clusterIP}:{.spec.ports[?(.name==\"postgresql\")].port}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","nodePort":0,"port":5432,"protocol":"TCP","targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"}},"spec":{"containers":[{"capabilities":{},"env":[{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${DATABASE_SERVICE_NAME}"}}},{"name":"POSTGRESQL_DATABASE","valueFrom":{"secretKeyRef":{"key":"database-name","name":"${DATABASE_SERVICE_NAME}"}}}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/bin/sh","-i","-c","pg_isready
        -h 127.0.0.1 -p 5432"]},"initialDelaySeconds":30,"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c ''SELECT 1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"securityContext":{"capabilities":{},"privileged":false},"terminationMessagePath":"/dev/termination-log","volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_VERSION}","namespace":"${NAMESPACE}"},"lastTriggeredImage":""},"type":"ImageChange"},{"type":"ConfigChange"}]},"status":{}}],"parameters":[{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","description":"The name of the OpenShift Service exposed for
        the database.","value":"postgresql","required":true},{"name":"POSTGRESQL_USER","displayName":"PostgreSQL
        Connection Username","description":"Username for PostgreSQL user that will
        be used for accessing the database.","generate":"expression","from":"user[A-Z0-9]{3}","required":true},{"name":"POSTGRESQL_PASSWORD","displayName":"PostgreSQL
        Connection Password","description":"Password for the PostgreSQL connection
        user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"POSTGRESQL_DATABASE","displayName":"PostgreSQL
        Database Name","description":"Name of the PostgreSQL database accessed.","value":"sampledb","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi.","value":"1Gi","required":true},{"name":"POSTGRESQL_VERSION","displayName":"Version
        of PostgreSQL Image","description":"Version of PostgreSQL image to be used
        (9.4, 9.5, 9.6 or latest).","value":"9.6","required":true}],"labels":{"template":"postgresql-persistent-template"}},{"metadata":{"name":"processserver63-amq-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver63-amq-mysql-persistent-s2i","uid":"1b668a4a-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687373","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server AMQ and
        MySQL applications with persistent storage built using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + A-MQ + MySQL (Persistent
        with https)","tags":"processserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent BPMS application (using MySQL and A-MQ) has been created in
        your project. The username/password for accessing the KIE Server REST or JMS
        interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the
        MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        And for the A-MQ service use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}.
        Please be sure to create the \"processserver-service-account\" service account
        and the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","value":"${KIE_SERVER_JMS_QUEUES_REQUEST}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","value":"${KIE_SERVER_EXECUTOR_JMS_QUEUE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB,${APPLICATION_NAME}-mysql=QUARTZ"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JNDI","value":"${DB_JNDI}NotManaged"},{"name":"QUARTZ_USERNAME","value":"${DB_USERNAME}"},{"name":"QUARTZ_PASSWORD","value":"${DB_PASSWORD}"},{"name":"QUARTZ_DATABASE","value":"${DB_DATABASE}"},{"name":"QUARTZ_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"QUARTZ_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"QUARTZ_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JTA","value":"false"},{"name":"QUARTZ_NONXA","value":"true"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"processserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-tcp"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","displayName":"KIE
        Server JMS Queues Request","description":"JNDI name of request queue for JMS.","value":"queue/KIE.SERVER.REQUEST"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","displayName":"KIE
        Server Executor JMS Queue","description":"JNDI name of executor queue for
        JMS.","value":"queue/KIE.SERVER.EXECUTOR"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.MySQL5Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh.","value":"false"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"MQ_USERNAME","displayName":"A-MQ Username","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"kube"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"processserver63-amq-mysql-persistent-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"processserver63-amq-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver63-amq-mysql-s2i","uid":"1b680368-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687374","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server AMQ and
        MySQL applications built using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + A-MQ + MySQL (Ephemeral
        with https)","tags":"processserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new BPMS application (using MySQL and A-MQ) has been created in your project.
        The username/password for accessing the KIE Server REST or JMS interface is
        ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. And
        for the A-MQ service use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}. Please
        be sure to create the \"processserver-service-account\" service account and
        the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file
        used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","value":"${KIE_SERVER_JMS_QUEUES_REQUEST}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","value":"${KIE_SERVER_EXECUTOR_JMS_QUEUE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"processserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-tcp"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","displayName":"KIE
        Server JMS Queues Request","description":"JNDI name of request queue for JMS.","value":"queue/KIE.SERVER.REQUEST"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","displayName":"KIE
        Server Executor JMS Queue","description":"JNDI name of executor queue for
        JMS.","value":"queue/KIE.SERVER.EXECUTOR"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.MySQL5Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"MQ_USERNAME","displayName":"A-MQ Username","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"kube"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"processserver63-amq-mysql-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"processserver63-amq-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver63-amq-postgresql-persistent-s2i","uid":"1b69897f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687375","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server AMQ and
        PostgreSQL applications with persistent storage built using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + A-MQ + PostgreSQL (Persistent
        with https)","tags":"processserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent BPMS application (using PostgreSQL and A-MQ) has been created
        in your project. The username/password for accessing the KIE Server REST or
        JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing
        the MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        And for the A-MQ service use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}.
        Please be sure to create the \"processserver-service-account\" service account
        and the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","value":"${KIE_SERVER_JMS_QUEUES_REQUEST}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","value":"${KIE_SERVER_EXECUTOR_JMS_QUEUE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB,${APPLICATION_NAME}-postgresql=QUARTZ"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JNDI","value":"${DB_JNDI}NotManaged"},{"name":"QUARTZ_USERNAME","value":"${DB_USERNAME}"},{"name":"QUARTZ_PASSWORD","value":"${DB_PASSWORD}"},{"name":"QUARTZ_DATABASE","value":"${DB_DATABASE}"},{"name":"QUARTZ_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"QUARTZ_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"QUARTZ_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JTA","value":"false"},{"name":"QUARTZ_NONXA","value":"true"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"processserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-tcp"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","displayName":"KIE
        Server JMS Queues Request","description":"JNDI name of request queue for JMS.","value":"queue/KIE.SERVER.REQUEST"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","displayName":"KIE
        Server Executor JMS Queue","description":"JNDI name of executor queue for
        JMS.","value":"queue/KIE.SERVER.EXECUTOR"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.PostgreSQL82Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh.","value":"false"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"MQ_USERNAME","displayName":"A-MQ Username","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"kube"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"processserver63-amq-postgresql-persistent-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"processserver63-amq-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver63-amq-postgresql-s2i","uid":"1b6b4426-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687376","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server AMQ and
        PostgreSQL applications built using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + A-MQ + PostgreSQL (Ephemeral
        with https)","tags":"processserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new BPMS application (using PostgreSQL and A-MQ) has been created in your
        project. The username/password for accessing the KIE Server REST or JMS interface
        is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. And
        for the A-MQ service use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}. Please
        be sure to create the \"processserver-service-account\" service account and
        the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file
        used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","value":"${KIE_SERVER_JMS_QUEUES_REQUEST}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","value":"${KIE_SERVER_EXECUTOR_JMS_QUEUE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"processserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-tcp"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-62","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-62:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","displayName":"KIE
        Server JMS Queues Request","description":"JNDI name of request queue for JMS.","value":"queue/KIE.SERVER.REQUEST"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","displayName":"KIE
        Server Executor JMS Queue","description":"JNDI name of executor queue for
        JMS.","value":"queue/KIE.SERVER.EXECUTOR"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.PostgreSQL82Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"MQ_USERNAME","displayName":"A-MQ Username","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"kube"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"processserver63-amq-postgresql-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"processserver63-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver63-basic-s2i","uid":"1b6c548d-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687377","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server applications
        built using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server (no https)","tags":"processserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new BPMS application has been created in your project. The username/password
        for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.H2Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ Password","description":"HornetQ
        cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."}],"labels":{"template":"processserver63-basic-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"processserver63-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver63-mysql-persistent-s2i","uid":"1b6d7849-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687378","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server MySQL
        applications with persistent storage built using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + MySQL (Persistent with
        https)","tags":"processserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent BPMS application (using MySQL) has been created in your project.
        The username/password for accessing the KIE Server REST or JMS interface is
        ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please
        be sure to create the \"processserver-service-account\" service account and
        the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file
        used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB,${APPLICATION_NAME}-mysql=QUARTZ"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JNDI","value":"${DB_JNDI}NotManaged"},{"name":"QUARTZ_USERNAME","value":"${DB_USERNAME}"},{"name":"QUARTZ_PASSWORD","value":"${DB_PASSWORD}"},{"name":"QUARTZ_DATABASE","value":"${DB_DATABASE}"},{"name":"QUARTZ_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"QUARTZ_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"QUARTZ_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JTA","value":"false"},{"name":"QUARTZ_NONXA","value":"true"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"processserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.MySQL5Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"processserver63-mysql-persistent-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"processserver63-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver63-mysql-s2i","uid":"1b6ebde1-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687379","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server MySQL
        applications built using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + MySQL (Ephemeral with
        https)","tags":"processserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new BPMS application (using MySQL) has been created in your project. The username/password
        for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.
        For accessing the MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the \"processserver-service-account\" service account
        and the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"processserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.MySQL5Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"processserver63-mysql-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"processserver63-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver63-postgresql-persistent-s2i","uid":"1b701477-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687380","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server PostgreSQL
        applications with persistent storage built using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + PostgreSQL (Persistent
        with https)","tags":"processserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent BPMS application (using PostgreSQL) has been created in your
        project. The username/password for accessing the KIE Server REST or JMS interface
        is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please
        be sure to create the \"processserver-service-account\" service account and
        the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file
        used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB,${APPLICATION_NAME}-postgresql=QUARTZ"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JNDI","value":"${DB_JNDI}NotManaged"},{"name":"QUARTZ_USERNAME","value":"${DB_USERNAME}"},{"name":"QUARTZ_PASSWORD","value":"${DB_PASSWORD}"},{"name":"QUARTZ_DATABASE","value":"${DB_DATABASE}"},{"name":"QUARTZ_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"QUARTZ_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"QUARTZ_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JTA","value":"false"},{"name":"QUARTZ_NONXA","value":"true"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"processserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.PostgreSQL82Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"processserver63-postgresql-persistent-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"processserver63-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver63-postgresql-s2i","uid":"1b715303-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687381","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for Red Hat JBoss BPM Suite 6.3 intelligent process server PostgreSQL
        applications built using S2I.","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat JBoss BPM Suite 6.3 intelligent process server + PostgreSQL (Ephemeral
        with https)","tags":"processserver,jboss,xpaas","version":"1.4.0"}},"message":"A
        new BPMS application (using PostgreSQL) has been created in your project.
        The username/password for accessing the KIE Server REST or JMS interface is
        ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please
        be sure to create the \"processserver-service-account\" service account and
        the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file
        used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver63-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"serviceAccountName":"processserver-service-account","terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.PostgreSQL82Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"processserver63-postgresql-s2i","xpaas":"1.4.0"}},{"metadata":{"name":"processserver64-amq-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver64-amq-mysql-persistent-s2i","uid":"1b72dad7-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687382","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example BPM Suite application with A-MQ and a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-processserver","openshift.io/display-name":"JBoss
        BPM Suite 6.4 intelligent process server + A-MQ + MySQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"processserver,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-bpm-suite/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Business Process Suite
        intelligent process server 6.4 based application, including a build configuration,
        application deployment configuration, Red Hat A-MQ for messaging broker, database
        deployment configuration for MySQL using persistence and secure communication
        using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent BPMS application (using MySQL and A-MQ) has been created in
        your project. The username/password for accessing the KIE Server REST or JMS
        interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the
        MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        And for the A-MQ service use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}.
        Please be sure to create the secret named \"${HTTPS_SECRET}\" containing the
        ${HTTPS_KEYSTORE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","value":"${KIE_SERVER_JMS_QUEUES_REQUEST}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","value":"${KIE_SERVER_EXECUTOR_JMS_QUEUE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB,${APPLICATION_NAME}-mysql=QUARTZ"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JNDI","value":"${DB_JNDI}NotManaged"},{"name":"QUARTZ_USERNAME","value":"${DB_USERNAME}"},{"name":"QUARTZ_PASSWORD","value":"${DB_PASSWORD}"},{"name":"QUARTZ_DATABASE","value":"${DB_DATABASE}"},{"name":"QUARTZ_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"QUARTZ_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"QUARTZ_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JTA","value":"false"},{"name":"QUARTZ_NONXA","value":"true"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","displayName":"KIE
        Server JMS Queues Request","description":"JNDI name of request queue for JMS.","value":"queue/KIE.SERVER.REQUEST"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","displayName":"KIE
        Server Executor JMS Queue","description":"JNDI name of executor queue for
        JMS.","value":"queue/KIE.SERVER.EXECUTOR"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.MySQL5Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh.","value":"false"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"MQ_USERNAME","displayName":"A-MQ Username","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"processserver64-amq-mysql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"processserver64-amq-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver64-amq-mysql-s2i","uid":"1b745fc1-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687383","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example BPM Suite application with A-MQ and a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-processserver","openshift.io/display-name":"JBoss
        BPM Suite 6.4 intelligent process server + A-MQ + MySQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"processserver,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-bpm-suite/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Business Process Suite
        intelligent process server 6.4 based application, including a build configuration,
        application deployment configuration, Red Hat A-MQ for messaging broker, database
        deployment configuration for MySQL using ephemeral (temporary) storage and
        secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new BPMS application (using MySQL and A-MQ) has been created in your project.
        The username/password for accessing the KIE Server REST or JMS interface is
        ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. And
        for the A-MQ service use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}. Please
        be sure to create the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","value":"${KIE_SERVER_JMS_QUEUES_REQUEST}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","value":"${KIE_SERVER_EXECUTOR_JMS_QUEUE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","displayName":"KIE
        Server JMS Queues Request","description":"JNDI name of request queue for JMS.","value":"queue/KIE.SERVER.REQUEST"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","displayName":"KIE
        Server Executor JMS Queue","description":"JNDI name of executor queue for
        JMS.","value":"queue/KIE.SERVER.EXECUTOR"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.MySQL5Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"MQ_USERNAME","displayName":"A-MQ Username","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"processserver64-amq-mysql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"processserver64-amq-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver64-amq-postgresql-persistent-s2i","uid":"1b75d938-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687384","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example BPM Suite application with A-MQ and a PostgreSQL database. For more
        information about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-processserver","openshift.io/display-name":"JBoss
        BPM Suite 6.4 intelligent process server + A-MQ + PostgreSQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"processserver,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-bpm-suite/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Business Process Suite
        intelligent process server 6.4 based application, including a build configuration,
        application deployment configuration, Red Hat A-MQ for messaging broker, database
        deployment configuration for PostgreSQL using persistence and secure communication
        using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent BPMS application (using PostgreSQL and A-MQ) has been created
        in your project. The username/password for accessing the KIE Server REST or
        JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing
        the MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        And for the A-MQ service use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}.
        Please be sure to create the secret named \"${HTTPS_SECRET}\" containing the
        ${HTTPS_KEYSTORE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","value":"${KIE_SERVER_JMS_QUEUES_REQUEST}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","value":"${KIE_SERVER_EXECUTOR_JMS_QUEUE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB,${APPLICATION_NAME}-postgresql=QUARTZ"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JNDI","value":"${DB_JNDI}NotManaged"},{"name":"QUARTZ_USERNAME","value":"${DB_USERNAME}"},{"name":"QUARTZ_PASSWORD","value":"${DB_PASSWORD}"},{"name":"QUARTZ_DATABASE","value":"${DB_DATABASE}"},{"name":"QUARTZ_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"QUARTZ_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"QUARTZ_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JTA","value":"false"},{"name":"QUARTZ_NONXA","value":"true"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_SPLIT","value":"${AMQ_SPLIT}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/opt/amq/data","name":"${APPLICATION_NAME}-amq-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-amq-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-amq-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-claim"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","displayName":"KIE
        Server JMS Queues Request","description":"JNDI name of request queue for JMS.","value":"queue/KIE.SERVER.REQUEST"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","displayName":"KIE
        Server Executor JMS Queue","description":"JNDI name of executor queue for
        JMS.","value":"queue/KIE.SERVER.EXECUTOR"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.PostgreSQL82Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"AMQ_SPLIT","displayName":"Split
        Data?","description":"Split the data directory for each node in a mesh.","value":"false"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"MQ_USERNAME","displayName":"A-MQ Username","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"processserver64-amq-postgresql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"processserver64-amq-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver64-amq-postgresql-s2i","uid":"1b778cd6-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687385","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example BPM Suite application with A-MQ and a PostgreSQL database. For more
        information about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-processserver","openshift.io/display-name":"JBoss
        BPM Suite 6.4 intelligent process server + A-MQ + PostgreSQL (Ephemeral with
        https)","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"processserver,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-bpm-suite/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Business Process Suite
        intelligent process server 6.4 based application, including a build configuration,
        application deployment configuration, Red Hat A-MQ for messaging broker, database
        deployment configuration for PostgreSQL using ephemeral (temporary) storage
        and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new BPMS application (using PostgreSQL and A-MQ) has been created in your
        project. The username/password for accessing the KIE Server REST or JMS interface
        is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. And
        for the A-MQ service use the credentials ${MQ_USERNAME}/${MQ_PASSWORD}. Please
        be sure to create the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-tcp\",
        \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        broker''s OpenWire port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-tcp"},"spec":{"ports":[{"port":61616,"targetPort":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Supports
        node discovery for mesh formation.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq-mesh"},"spec":{"clusterIP":"None","ports":[{"name":"mesh","port":61616}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","value":"${KIE_SERVER_JMS_QUEUES_REQUEST}"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","value":"${KIE_SERVER_JMS_QUEUES_RESPONSE}"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","value":"${KIE_SERVER_EXECUTOR_JMS_QUEUE}"},{"name":"MQ_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-amq=MQ"},{"name":"MQ_JNDI","value":"${MQ_JNDI}"},{"name":"MQ_USERNAME","value":"${MQ_USERNAME}"},{"name":"MQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"MQ_PROTOCOL","value":"tcp"},{"name":"MQ_QUEUES","value":"${MQ_QUEUES}"},{"name":"MQ_TOPICS","value":"${MQ_TOPICS}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-amq"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-amq"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-amq"},"name":"${APPLICATION_NAME}-amq"},"spec":{"containers":[{"env":[{"name":"AMQ_USER","value":"${MQ_USERNAME}"},{"name":"AMQ_PASSWORD","value":"${MQ_PASSWORD}"},{"name":"AMQ_TRANSPORTS","value":"${MQ_PROTOCOL}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","value":"${AMQ_MESH_DISCOVERY_TYPE}"},{"name":"AMQ_MESH_SERVICE_NAME","value":"${APPLICATION_NAME}-amq-mesh"},{"name":"AMQ_MESH_SERVICE_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"AMQ_STORAGE_USAGE_LIMIT","value":"${AMQ_STORAGE_USAGE_LIMIT}"}],"image":"jboss-amq-63","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-amq","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":5672,"name":"amqp","protocol":"TCP"},{"containerPort":5671,"name":"amqp-ssl","protocol":"TCP"},{"containerPort":1883,"name":"mqtt","protocol":"TCP"},{"containerPort":61613,"name":"stomp","protocol":"TCP"},{"containerPort":61612,"name":"stomp-ssl","protocol":"TCP"},{"containerPort":61616,"name":"tcp","protocol":"TCP"},{"containerPort":61617,"name":"tcp-ssl","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/amq/bin/readinessProbe.sh"]}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-amq"],"from":{"kind":"ImageStreamTag","name":"jboss-amq-63:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_JMS_QUEUES_REQUEST","displayName":"KIE
        Server JMS Queues Request","description":"JNDI name of request queue for JMS.","value":"queue/KIE.SERVER.REQUEST"},{"name":"KIE_SERVER_JMS_QUEUES_RESPONSE","displayName":"KIE
        Server JMS Queues Response","description":"JNDI name of response queue for
        JMS.","value":"queue/KIE.SERVER.RESPONSE"},{"name":"KIE_SERVER_EXECUTOR_JMS_QUEUE","displayName":"KIE
        Server Executor JMS Queue","description":"JNDI name of executor queue for
        JMS.","value":"queue/KIE.SERVER.EXECUTOR"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.PostgreSQL82Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"MQ_JNDI","displayName":"JMS
        Connection Factory JNDI Name","description":"JNDI name for connection factory
        used by applications to connect to the broker, e.g. java:/JmsXA","value":"java:/JmsXA"},{"name":"MQ_PROTOCOL","displayName":"A-MQ
        Protocols","description":"Broker protocols to configure, separated by commas.
        Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire`
        is supported by EAP.","value":"openwire"},{"name":"MQ_QUEUES","displayName":"Queues","description":"Queue
        names, separated by commas. These queues will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP.","value":"KIE.SERVER.REQUEST,KIE.SERVER.RESPONSE,KIE.SERVER.EXECUTOR"},{"name":"MQ_TOPICS","displayName":"Topics","description":"Topic
        names, separated by commas. These topics will be automatically created when
        the broker starts. Also, they will be made accessible as JNDI resources in
        EAP."},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"MQ_USERNAME","displayName":"A-MQ Username","description":"User
        name for standard broker user. It is required for connecting to the broker.
        If left empty, it will be generated.","generate":"expression","from":"user[a-zA-Z0-9]{3}"},{"name":"MQ_PASSWORD","displayName":"A-MQ
        Password","description":"Password for standard broker user. It is required
        for connecting to the broker. If left empty, it will be generated.","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"AMQ_MESH_DISCOVERY_TYPE","displayName":"A-MQ
        Mesh Discovery Type","description":"The discovery agent type to use for discovering
        mesh endpoints.  ''dns'' will use OpenShift''s DNS service to resolve endpoints.  ''kube''
        will use Kubernetes REST API to resolve service endpoints.  If using ''kube''
        the service account for the pod must have the ''view'' role, which can be
        added via ''oc policy add-role-to-user view system:serviceaccount:\u003cnamespace\u003e:default''
        where \u003cnamespace\u003e is the project namespace.","value":"dns"},{"name":"AMQ_STORAGE_USAGE_LIMIT","displayName":"A-MQ
        Storage Limit","description":"The A-MQ storage usage limit","value":"100 gb"},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"processserver64-amq-postgresql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"processserver64-basic-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver64-basic-s2i","uid":"1b789790-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687386","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example BPM Suite application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-processserver","openshift.io/display-name":"JBoss
        BPM Suite 6.4 intelligent process server (no https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"processserver,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-bpm-suite/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Business Process Suite
        intelligent process server 6.4 based application, including a build configuration,
        application deployment configuration and insecure communication using http.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new BPMS application has been created in your project. The username/password
        for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.H2Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ Password","description":"HornetQ
        cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"processserver64-basic-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"processserver64-mysql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver64-mysql-persistent-s2i","uid":"1b79cc83-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687387","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example BPM Suite application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-processserver","openshift.io/display-name":"JBoss
        BPM Suite 6.4 intelligent process server + MySQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"processserver,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-bpm-suite/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Business Process Suite
        intelligent process server 6.4 based application, including a build configuration,
        application deployment configuration, database deployment configuration for
        MySQL using persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent BPMS application (using MySQL) has been created in your project.
        The username/password for accessing the KIE Server REST or JMS interface is
        ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please
        be sure to create the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB,${APPLICATION_NAME}-mysql=QUARTZ"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JNDI","value":"${DB_JNDI}NotManaged"},{"name":"QUARTZ_USERNAME","value":"${DB_USERNAME}"},{"name":"QUARTZ_PASSWORD","value":"${DB_PASSWORD}"},{"name":"QUARTZ_DATABASE","value":"${DB_DATABASE}"},{"name":"QUARTZ_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"QUARTZ_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"QUARTZ_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JTA","value":"false"},{"name":"QUARTZ_NONXA","value":"true"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.MySQL5Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"processserver64-mysql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"processserver64-mysql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver64-mysql-s2i","uid":"1b7b0f60-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687388","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example BPM Suite application with a MySQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-processserver","openshift.io/display-name":"JBoss
        BPM Suite 6.4 intelligent process server + MySQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"processserver,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-bpm-suite/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Business Process Suite
        intelligent process server 6.4 based application, including a build configuration,
        application deployment configuration, database deployment configuration for
        MySQL using ephemeral (temporary) storage and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new BPMS application (using MySQL) has been created in your project. The username/password
        for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}.
        For accessing the MySQL database \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the secret named \"${HTTPS_SECRET}\" containing the
        ${HTTPS_KEYSTORE} file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.MySQL5Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"processserver64-mysql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"processserver64-postgresql-persistent-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver64-postgresql-persistent-s2i","uid":"1b7c4df6-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687389","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example BPM Suite application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-processserver","openshift.io/display-name":"JBoss
        BPM Suite 6.4 intelligent process server + PostgreSQL (with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"processserver,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-bpm-suite/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Business Process Suite
        intelligent process server 6.4 based application, including a build configuration,
        application deployment configuration, database deployment configuration for
        PostgreSQL using persistence and secure communication using https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent BPMS application (using PostgreSQL) has been created in your
        project. The username/password for accessing the KIE Server REST or JMS interface
        is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please
        be sure to create the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB,${APPLICATION_NAME}-postgresql=QUARTZ"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JNDI","value":"${DB_JNDI}NotManaged"},{"name":"QUARTZ_USERNAME","value":"${DB_USERNAME}"},{"name":"QUARTZ_PASSWORD","value":"${DB_PASSWORD}"},{"name":"QUARTZ_DATABASE","value":"${DB_DATABASE}"},{"name":"QUARTZ_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"QUARTZ_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"QUARTZ_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"QUARTZ_JTA","value":"false"},{"name":"QUARTZ_NONXA","value":"true"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.PostgreSQL82Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"processserver64-postgresql-persistent-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"processserver64-postgresql-s2i","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/processserver64-postgresql-s2i","uid":"1b7d97f4-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687390","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example BPM Suite application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-processserver","openshift.io/display-name":"JBoss
        BPM Suite 6.4 intelligent process server + PostgreSQL (Ephemeral with https)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"processserver,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-jboss-bpm-suite/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Business Process Suite
        intelligent process server 6.4 based application, including a build configuration,
        application deployment configuration, database deployment configuration for
        PostgreSQL using ephemeral (temporary) storage and secure communication using
        https.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new BPMS application (using PostgreSQL) has been created in your project.
        The username/password for accessing the KIE Server REST or JMS interface is
        ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. For accessing the MySQL database
        \"${DB_DATABASE}\" use the credentials ${DB_USERNAME}/${DB_PASSWORD}. Please
        be sure to create the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APPLICATION_NAME}:latest"}},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"MAVEN_MIRROR_URL","value":"${MAVEN_MIRROR_URL}"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"jboss-processserver64-openshift:1.2","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"Source"},"triggers":[{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${GENERIC_WEBHOOK_SECRET}"},"type":"Generic"},{"imageChange":{},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"KIE_CONTAINER_DEPLOYMENT","value":"${KIE_CONTAINER_DEPLOYMENT}"},{"name":"KIE_SERVER_PROTOCOL","value":"${KIE_SERVER_PROTOCOL}"},{"name":"KIE_SERVER_PORT","value":"${KIE_SERVER_PORT}"},{"name":"KIE_SERVER_USER","value":"${KIE_SERVER_USER}"},{"name":"KIE_SERVER_PASSWORD","value":"${KIE_SERVER_PASSWORD}"},{"name":"KIE_SERVER_DOMAIN","value":"${KIE_SERVER_DOMAIN}"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","value":"${KIE_SERVER_PERSISTENCE_DIALECT}"},{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/processserver-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"HORNETQ_CLUSTER_PASSWORD","value":"${HORNETQ_CLUSTER_PASSWORD}"},{"name":"HORNETQ_QUEUES","value":"${HORNETQ_QUEUES}"},{"name":"HORNETQ_TOPICS","value":"${HORNETQ_TOPICS}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/processserver-secret-volume","name":"processserver-keystore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"processserver-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStream","name":"${APPLICATION_NAME}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"KIE_CONTAINER_DEPLOYMENT","displayName":"KIE
        Container Deployment","description":"The KIE Container deployment configuration
        in format: containerId=groupId:artifactId:version|c2=g2:a2:v2","value":"processserver-library=org.openshift.quickstarts:processserver-library:1.3.0.Final"},{"name":"KIE_SERVER_PROTOCOL","displayName":"KIE
        Server Protocol","description":"The protocol to access the KIE Server REST
        interface.","value":"https"},{"name":"KIE_SERVER_PORT","displayName":"KIE
        Server Port","description":"The port to access the KIE Server REST interface.","value":"8443"},{"name":"KIE_SERVER_USER","displayName":"KIE
        Server Username","description":"The user name to access the KIE Server REST
        or JMS interface.","value":"kieserver"},{"name":"KIE_SERVER_PASSWORD","displayName":"KIE
        Server Password","description":"The password to access the KIE Server REST
        or JMS interface. Must be different than username; must not be root, admin,
        or administrator; must contain at least 8 characters, 1 alphabetic character(s),
        1 digit(s), and 1 non-alphanumeric symbol(s).","generate":"expression","from":"[a-zA-Z]{6}[0-9]{1}!"},{"name":"KIE_SERVER_DOMAIN","displayName":"KIE
        Server Domain","description":"JAAS LoginContext domain that shall be used
        to authenticate users when using JMS.","value":"other"},{"name":"KIE_SERVER_PERSISTENCE_DIALECT","displayName":"KIE
        Server Persistence Dialect","description":"Hibernate persistence dialect.","value":"org.hibernate.dialect.PostgreSQL82Dialect"},{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"kie-app","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: secure-\u003capplication-name\u003e-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"Git source URI for application","value":"https://github.com/jboss-openshift/openshift-quickstarts","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Git branch/tag reference","value":"1.3"},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Path within Git project to build; empty for root
        project directory.","value":"processserver/library"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/ExampleDS","value":"java:jboss/datasources/ExampleDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HORNETQ_QUEUES","displayName":"Queues","description":"Queue
        names"},{"name":"HORNETQ_TOPICS","displayName":"Topics","description":"Topic
        names"},{"name":"HTTPS_SECRET","displayName":"Server Keystore Secret Name","description":"The
        name of the secret containing the keystore file","value":"processserver-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate","value":"jboss"},{"name":"HTTPS_PASSWORD","displayName":"Server
        Keystore Password","description":"The password for the keystore and certificate","value":"mykeystorepass"},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"HORNETQ_CLUSTER_PASSWORD","displayName":"HornetQ
        Password","description":"HornetQ cluster admin password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"Github
        Webhook Secret","description":"GitHub trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"GENERIC_WEBHOOK_SECRET","displayName":"Generic
        Webhook Secret","description":"Generic build trigger secret","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"MAVEN_MIRROR_URL","displayName":"Maven
        mirror URL","description":"Maven mirror to use for S2I builds"},{"name":"ARTIFACT_DIR","description":"List
        of directories from which archives will be copied into the deployment folder.
        If unspecified, all archives in /target will be copied."},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"processserver64-postgresql-s2i","xpaas":"1.4.8"}},{"metadata":{"name":"rails-pgsql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/rails-pgsql-persistent","uid":"19a7454f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687391","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example Rails application with a PostgreSQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/rails-ex/blob/master/README.md.","iconClass":"icon-ruby","openshift.io/display-name":"Rails
        + PostgreSQL","openshift.io/documentation-url":"https://github.com/openshift/rails-ex","openshift.io/long-description":"This
        template defines resources needed to develop a Rails application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.","openshift.io/provider-display-name":"Red Hat,
        Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,ruby,rails","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/rails-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"application-password":"${APPLICATION_PASSWORD}","application-user":"${APPLICATION_USER}","database-password":"${DATABASE_PASSWORD}","database-user":"${DATABASE_USER}","keybase":"${SECRET_KEY_BASE}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{"script":"bundle
        exec rake test"},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"RUBYGEM_MIRROR","value":"${RUBYGEM_MIRROR}"}],"from":{"kind":"ImageStreamTag","name":"ruby:2.3","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"recreateParams":{"pre":{"execNewPod":{"command":["./migrate-database.sh"],"containerName":"${NAME}"},"failurePolicy":"Abort"}},"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"SECRET_KEY_BASE","valueFrom":{"secretKeyRef":{"key":"keybase","name":"${NAME}"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"},{"name":"APPLICATION_DOMAIN","value":"${APPLICATION_DOMAIN}"},{"name":"APPLICATION_USER","valueFrom":{"secretKeyRef":{"key":"application-user","name":"${NAME}"}}},{"name":"APPLICATION_PASSWORD","valueFrom":{"secretKeyRef":{"key":"application-password","name":"${NAME}"}}},{"name":"RAILS_ENV","value":"${RAILS_ENV}"}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/articles","port":8080},"initialDelaySeconds":10,"timeoutSeconds":3},"name":"${NAME}","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/articles","port":8080},"initialDelaySeconds":5,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${NAME}"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","port":5432,"targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":5432},"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_POSTGRESQL_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:9.5","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"rails-pgsql-persistent","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the Rails container can use.","value":"512Mi","required":true},{"name":"MEMORY_POSTGRESQL_LIMIT","displayName":"Memory
        Limit (PostgreSQL)","description":"Maximum amount of memory the PostgreSQL
        container can use.","value":"512Mi","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi","value":"1Gi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/rails-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the Rails
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"SECRET_KEY_BASE","displayName":"Secret
        Key","description":"Your secret key for verifying the integrity of signed
        cookies.","generate":"expression","from":"[a-z0-9]{127}"},{"name":"APPLICATION_USER","displayName":"Application
        Username","description":"The application user that is used within the sample
        application to authorize access on pages.","value":"openshift","required":true},{"name":"APPLICATION_PASSWORD","displayName":"Application
        Password","description":"The application password that is used within the
        sample application to authorize access on pages.","value":"secret","required":true},{"name":"RAILS_ENV","displayName":"Rails
        Environment","description":"Environment under which the sample application
        will run. Could be set to production, development or test.","value":"production","required":true},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"postgresql","required":true},{"name":"DATABASE_USER","displayName":"Database
        Username","generate":"expression","from":"user[A-Z0-9]{3}"},{"name":"DATABASE_PASSWORD","displayName":"Database
        Password","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"root","required":true},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"Maximum
        Database Connections","value":"100"},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"Shared
        Buffer Amount","value":"12MB"},{"name":"RUBYGEM_MIRROR","displayName":"Custom
        RubyGems Mirror URL","description":"The custom RubyGems mirror URL"}],"labels":{"app":"rails-pgsql-persistent","template":"rails-pgsql-persistent"}},{"metadata":{"name":"rails-postgresql-example","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/rails-postgresql-example","uid":"19a85548-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687392","creationTimestamp":"2018-02-08T20:46:13Z","annotations":{"description":"An
        example Rails application with a PostgreSQL database. For more information
        about using this template, including OpenShift considerations, see https://github.com/openshift/rails-ex/blob/master/README.md.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing.","iconClass":"icon-ruby","openshift.io/display-name":"Rails +
        PostgreSQL (Ephemeral)","openshift.io/documentation-url":"https://github.com/openshift/rails-ex","openshift.io/long-description":"This
        template defines resources needed to develop a Rails application, including
        a build configuration, application deployment configuration, and database
        deployment configuration.  The database is stored in non-persistent storage,
        so this configuration should be used for experimental purposes only.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"quickstart,ruby,rails","template.openshift.io/bindable":"false"}},"message":"The
        following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/openshift/rails-ex/blob/master/README.md.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"name":"${NAME}"},"stringData":{"application-password":"${APPLICATION_PASSWORD}","application-user":"${APPLICATION_USER}","database-password":"${DATABASE_PASSWORD}","database-user":"${DATABASE_USER}","keybase":"${SECRET_KEY_BASE}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        and load balances the application pods","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"},"name":"${NAME}"},"spec":{"ports":[{"name":"web","port":8080,"targetPort":8080}],"selector":{"name":"${NAME}"}}},{"apiVersion":"v1","kind":"Route","metadata":{"name":"${NAME}"},"spec":{"host":"${APPLICATION_DOMAIN}","to":{"kind":"Service","name":"${NAME}"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Keeps
        track of changes in the application image"},"name":"${NAME}"}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"annotations":{"description":"Defines
        how to build the application","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"postCommit":{"script":"bundle
        exec rake test"},"source":{"contextDir":"${CONTEXT_DIR}","git":{"ref":"${SOURCE_REPOSITORY_REF}","uri":"${SOURCE_REPOSITORY_URL}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"RUBYGEM_MIRROR","value":"${RUBYGEM_MIRROR}"}],"from":{"kind":"ImageStreamTag","name":"ruby:2.3","namespace":"${NAMESPACE}"}},"type":"Source"},"triggers":[{"type":"ImageChange"},{"type":"ConfigChange"},{"github":{"secret":"${GITHUB_WEBHOOK_SECRET}"},"type":"GitHub"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the application server","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${NAME}"},"spec":{"replicas":1,"selector":{"name":"${NAME}"},"strategy":{"recreateParams":{"pre":{"execNewPod":{"command":["./migrate-database.sh"],"containerName":"${NAME}"},"failurePolicy":"Abort"}},"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${NAME}"},"name":"${NAME}"},"spec":{"containers":[{"env":[{"name":"DATABASE_SERVICE_NAME","value":"${DATABASE_SERVICE_NAME}"},{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"SECRET_KEY_BASE","valueFrom":{"secretKeyRef":{"key":"keybase","name":"${NAME}"}}},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"},{"name":"APPLICATION_DOMAIN","value":"${APPLICATION_DOMAIN}"},{"name":"APPLICATION_USER","valueFrom":{"secretKeyRef":{"key":"application-user","name":"${NAME}"}}},{"name":"APPLICATION_PASSWORD","valueFrom":{"secretKeyRef":{"key":"application-password","name":"${NAME}"}}},{"name":"RAILS_ENV","value":"${RAILS_ENV}"}],"image":"
        ","livenessProbe":{"httpGet":{"path":"/articles","port":8080},"initialDelaySeconds":10,"timeoutSeconds":3},"name":"${NAME}","ports":[{"containerPort":8080}],"readinessProbe":{"httpGet":{"path":"/articles","port":8080},"initialDelaySeconds":5,"timeoutSeconds":3},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${NAME}"],"from":{"kind":"ImageStreamTag","name":"${NAME}:latest"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"Exposes
        the database server"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"postgresql","port":5432,"targetPort":5432}],"selector":{"name":"${DATABASE_SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"description":"Defines
        how to deploy the database","template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","valueFrom":{"secretKeyRef":{"key":"database-user","name":"${NAME}"}}},{"name":"POSTGRESQL_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${NAME}"}}},{"name":"POSTGRESQL_DATABASE","value":"${DATABASE_NAME}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"
        ","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":5432},"timeoutSeconds":1},"name":"postgresql","ports":[{"containerPort":5432}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","psql
        -h 127.0.0.1 -U ${POSTGRESQL_USER} -q -d ${POSTGRESQL_DATABASE} -c ''SELECT
        1''"]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_POSTGRESQL_LIMIT}"}},"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"data"}]}],"volumes":[{"emptyDir":{},"name":"data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:9.5","namespace":"${NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"NAME","displayName":"Name","description":"The
        name assigned to all of the frontend objects defined in this template.","value":"rails-postgresql-example","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the Rails container can use.","value":"512Mi","required":true},{"name":"MEMORY_POSTGRESQL_LIMIT","displayName":"Memory
        Limit (PostgreSQL)","description":"Maximum amount of memory the PostgreSQL
        container can use.","value":"512Mi","required":true},{"name":"SOURCE_REPOSITORY_URL","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/openshift/rails-ex.git","required":true},{"name":"SOURCE_REPOSITORY_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch."},{"name":"CONTEXT_DIR","displayName":"Context
        Directory","description":"Set this to the relative path to your project if
        it is not in the root of your repository."},{"name":"APPLICATION_DOMAIN","displayName":"Application
        Hostname","description":"The exposed hostname that will route to the Rails
        service, if left blank a value will be defaulted."},{"name":"GITHUB_WEBHOOK_SECRET","displayName":"GitHub
        Webhook Secret","description":"Github trigger secret.  A difficult to guess
        string encoded as part of the webhook URL.  Not encrypted.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"SECRET_KEY_BASE","displayName":"Secret
        Key","description":"Your secret key for verifying the integrity of signed
        cookies.","generate":"expression","from":"[a-z0-9]{127}"},{"name":"APPLICATION_USER","displayName":"Application
        Username","description":"The application user that is used within the sample
        application to authorize access on pages.","value":"openshift","required":true},{"name":"APPLICATION_PASSWORD","displayName":"Application
        Password","description":"The application password that is used within the
        sample application to authorize access on pages.","value":"secret","required":true},{"name":"RAILS_ENV","displayName":"Rails
        Environment","description":"Environment under which the sample application
        will run. Could be set to production, development or test.","value":"production","required":true},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","value":"postgresql","required":true},{"name":"DATABASE_USER","displayName":"Database
        Username","generate":"expression","from":"user[A-Z0-9]{3}"},{"name":"DATABASE_PASSWORD","displayName":"Database
        Password","generate":"expression","from":"[a-zA-Z0-9]{8}"},{"name":"DATABASE_NAME","displayName":"Database
        Name","value":"root","required":true},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"Maximum
        Database Connections","value":"100"},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"Shared
        Buffer Amount","value":"12MB"},{"name":"RUBYGEM_MIRROR","displayName":"Custom
        RubyGems Mirror URL","description":"The custom RubyGems mirror URL"}],"labels":{"app":"rails-postgresql-example","template":"rails-postgresql-example"}},{"metadata":{"name":"redis-ephemeral","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/redis-ephemeral","uid":"17570317-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687393","creationTimestamp":"2018-02-08T20:46:09Z","annotations":{"description":"Redis
        in-memory data structure store, without persistent storage. For more information
        about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/3.2.\n\nWARNING:
        Any data stored will be lost upon pod destruction. Only use this template
        for testing","iconClass":"icon-redis","openshift.io/display-name":"Redis (Ephemeral)","openshift.io/documentation-url":"https://github.com/sclorg/redis-container/tree/master/3.2","openshift.io/long-description":"This
        template provides a standalone Redis server.  The data is not stored on persistent
        storage, so any restart of the service will result in all data being lost.","openshift.io/provider-display-name":"Red
        Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"database,redis"}},"message":"The
        following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Password:
        ${REDIS_PASSWORD}\n Connection URL: redis://${DATABASE_SERVICE_NAME}:6379/\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/sclorg/redis-container/blob/master/3.2.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-password":"{.data[''database-password'']}"},"name":"${DATABASE_SERVICE_NAME}"},"stringData":{"database-password":"${REDIS_PASSWORD}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"template.openshift.io/expose-uri":"redis://{.spec.clusterIP}:{.spec.ports[?(.name==\"redis\")].port}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"redis","nodePort":0,"port":6379,"protocol":"TCP","targetPort":6379}],"selector":{"name":"${DATABASE_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"}},"spec":{"containers":[{"capabilities":{},"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${DATABASE_SERVICE_NAME}"}}}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":6379},"timeoutSeconds":1},"name":"redis","ports":[{"containerPort":6379,"protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","test
        \"$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)\" == \"PONG\""]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"securityContext":{"capabilities":{},"privileged":false},"terminationMessagePath":"/dev/termination-log","volumeMounts":[{"mountPath":"/var/lib/redis/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","volumes":[{"emptyDir":{"medium":""},"name":"${DATABASE_SERVICE_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["redis"],"from":{"kind":"ImageStreamTag","name":"redis:${REDIS_VERSION}","namespace":"${NAMESPACE}"},"lastTriggeredImage":""},"type":"ImageChange"},{"type":"ConfigChange"}]},"status":{}}],"parameters":[{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","description":"The name of the OpenShift Service exposed for
        the database.","value":"redis","required":true},{"name":"REDIS_PASSWORD","displayName":"Redis
        Connection Password","description":"Password for the Redis connection user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"REDIS_VERSION","displayName":"Version
        of Redis Image","description":"Version of Redis image to be used (3.2 or latest).","value":"3.2","required":true}],"labels":{"template":"redis-ephemeral-template"}},{"metadata":{"name":"redis-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/redis-persistent","uid":"1757d0cd-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687394","creationTimestamp":"2018-02-08T20:46:09Z","annotations":{"description":"Redis
        in-memory data structure store, with persistent storage. For more information
        about using this template, including OpenShift considerations, see https://github.com/sclorg/redis-container/blob/master/3.2.\n\nNOTE:
        You must have persistent volumes available in your cluster to use this template.","iconClass":"icon-redis","openshift.io/display-name":"Redis","openshift.io/documentation-url":"https://github.com/sclorg/redis-container/tree/master/3.2","openshift.io/long-description":"This
        template provides a standalone Redis server.  The data is stored on persistent
        storage.","openshift.io/provider-display-name":"Red Hat, Inc.","openshift.io/support-url":"https://access.redhat.com","tags":"database,redis"}},"message":"The
        following service(s) have been created in your project: ${DATABASE_SERVICE_NAME}.\n\n       Password:
        ${REDIS_PASSWORD}\n Connection URL: redis://${DATABASE_SERVICE_NAME}:6379/\n\nFor
        more information about using this template, including OpenShift considerations,
        see https://github.com/sclorg/redis-container/blob/master/3.2.","objects":[{"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{"template.openshift.io/expose-password":"{.data[''database-password'']}"},"name":"${DATABASE_SERVICE_NAME}"},"stringData":{"database-password":"${REDIS_PASSWORD}"}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"template.openshift.io/expose-uri":"redis://{.spec.clusterIP}:{.spec.ports[?(.name==\"redis\")].port}"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"ports":[{"name":"redis","nodePort":0,"port":6379,"protocol":"TCP","targetPort":6379}],"selector":{"name":"${DATABASE_SERVICE_NAME}"},"sessionAffinity":"None","type":"ClusterIP"},"status":{"loadBalancer":{}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"${DATABASE_SERVICE_NAME}"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"annotations":{"template.alpha.openshift.io/wait-for-ready":"true"},"name":"${DATABASE_SERVICE_NAME}"},"spec":{"replicas":1,"selector":{"name":"${DATABASE_SERVICE_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"${DATABASE_SERVICE_NAME}"}},"spec":{"containers":[{"capabilities":{},"env":[{"name":"REDIS_PASSWORD","valueFrom":{"secretKeyRef":{"key":"database-password","name":"${DATABASE_SERVICE_NAME}"}}}],"image":"
        ","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":30,"tcpSocket":{"port":6379},"timeoutSeconds":1},"name":"redis","ports":[{"containerPort":6379,"protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","test
        \"$(redis-cli -h 127.0.0.1 -a $REDIS_PASSWORD ping)\" == \"PONG\""]},"initialDelaySeconds":5,"timeoutSeconds":1},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"securityContext":{"capabilities":{},"privileged":false},"terminationMessagePath":"/dev/termination-log","volumeMounts":[{"mountPath":"/var/lib/redis/data","name":"${DATABASE_SERVICE_NAME}-data"}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","volumes":[{"name":"${DATABASE_SERVICE_NAME}-data","persistentVolumeClaim":{"claimName":"${DATABASE_SERVICE_NAME}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["redis"],"from":{"kind":"ImageStreamTag","name":"redis:${REDIS_VERSION}","namespace":"${NAMESPACE}"},"lastTriggeredImage":""},"type":"ImageChange"},{"type":"ConfigChange"}]},"status":{}}],"parameters":[{"name":"MEMORY_LIMIT","displayName":"Memory
        Limit","description":"Maximum amount of memory the container can use.","value":"512Mi","required":true},{"name":"NAMESPACE","displayName":"Namespace","description":"The
        OpenShift Namespace where the ImageStream resides.","value":"openshift"},{"name":"DATABASE_SERVICE_NAME","displayName":"Database
        Service Name","description":"The name of the OpenShift Service exposed for
        the database.","value":"redis","required":true},{"name":"REDIS_PASSWORD","displayName":"Redis
        Connection Password","description":"Password for the Redis connection user.","generate":"expression","from":"[a-zA-Z0-9]{16}","required":true},{"name":"VOLUME_CAPACITY","displayName":"Volume
        Capacity","description":"Volume space available for data, e.g. 512Mi, 2Gi.","value":"1Gi","required":true},{"name":"REDIS_VERSION","displayName":"Version
        of Redis Image","description":"Version of Redis image to be used (3.2 or latest).","value":"3.2","required":true}],"labels":{"template":"redis-persistent-template"}},{"metadata":{"name":"registry-console","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/registry-console","uid":"1ec7ab69-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689647","creationTimestamp":"2018-02-08T20:46:21Z","annotations":{"description":"Template
        for deploying registry web console. Requires cluster-admin.","tags":"infrastructure"}},"objects":[{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"name":"registry-console"},"name":"registry-console"},"spec":{"replicas":1,"selector":{"name":"registry-console"},"template":{"metadata":{"labels":{"name":"registry-console"}},"spec":{"containers":[{"env":[{"name":"OPENSHIFT_OAUTH_PROVIDER_URL","value":"${OPENSHIFT_OAUTH_PROVIDER_URL}"},{"name":"OPENSHIFT_OAUTH_CLIENT_ID","value":"${OPENSHIFT_OAUTH_CLIENT_ID}"},{"name":"KUBERNETES_INSECURE","value":"false"},{"name":"COCKPIT_KUBE_INSECURE","value":"false"},{"name":"REGISTRY_ONLY","value":"true"},{"name":"REGISTRY_HOST","value":"${REGISTRY_HOST}"}],"image":"${IMAGE_PREFIX}${IMAGE_BASENAME}:${IMAGE_VERSION}","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/ping","port":9090,"scheme":"HTTP"},"initialDelaySeconds":10,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5},"name":"registry-console","ports":[{"containerPort":9090,"protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/ping","port":9090,"scheme":"HTTP"},"periodSeconds":10,"successThreshold":1,"timeoutSeconds":5}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"labels":{"name":"registry-console"},"name":"registry-console"},"spec":{"ports":[{"name":"registry-console","port":9000,"protocol":"TCP","targetPort":9090}],"selector":{"name":"registry-console"},"type":"ClusterIP"}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"annotations":{"description":"Atomic
        Registry console"},"name":"registry-console"},"spec":{"tags":[{"annotations":null,"from":{"kind":"DockerImage","name":"${IMAGE_PREFIX}${IMAGE_BASENAME}:${IMAGE_VERSION}"},"name":"${IMAGE_VERSION}"}]}},{"apiVersion":"v1","kind":"OAuthClient","metadata":{"name":"${OPENSHIFT_OAUTH_CLIENT_ID}","respondWithChallenges":false},"redirectURIs":["${COCKPIT_KUBE_URL}"],"secret":"${OPENSHIFT_OAUTH_CLIENT_SECRET}"}],"parameters":[{"name":"IMAGE_PREFIX","description":"Specify
        \"registry/repository\" prefix for container image; e.g. for \"registry.access.redhat.com/openshift3/registry-console:latest\",
        set prefix \"registry.access.redhat.com/openshift3/\"","value":"registry.access.redhat.com/openshift3/"},{"name":"IMAGE_BASENAME","description":"Specify
        component name for container image; e.g. for \"registry.access.redhat.com/openshift3/registry-console:latest\",
        use base name \"registry-console\"","value":"registry-console"},{"name":"IMAGE_VERSION","description":"Specify
        image version; e.g. for \"registry.access.redhat.com/openshift3/registry-console:v3.9\",
        set version \"v3.9\"","value":"v3.9"},{"name":"OPENSHIFT_OAUTH_PROVIDER_URL","description":"The
        public URL for the Openshift OAuth Provider, e.g. https://openshift.example.com:8443","required":true},{"name":"COCKPIT_KUBE_URL","description":"The
        registry console URL. This should be created beforehand using ''oc create
        route passthrough --service registry-console --port registry-console -n default'',
        e.g. https://registry-console-default.example.com","required":true},{"name":"OPENSHIFT_OAUTH_CLIENT_SECRET","description":"Oauth
        client secret","generate":"expression","from":"user[a-zA-Z0-9]{64}"},{"name":"OPENSHIFT_OAUTH_CLIENT_ID","description":"Oauth
        client id","value":"cockpit-oauth-client"},{"name":"REGISTRY_HOST","description":"The
        integrated registry hostname exposed via route, e.g. registry.example.com","required":true}],"labels":{"createdBy":"registry-console-template"}},{"metadata":{"name":"s2i-karaf2-camel-amq","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-karaf2-camel-amq","uid":"1b619a6b-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689623","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Camel
        route using ActiveMQ in Karaf container. This quickstart shows how to use
        Camel in a Karaf Container using Blueprint to connect to the A-MQ xPaaS message
        broker on OpenShift that should already be installed, one simple way to run
        a A-MQ service is following the documentation of the A-MQ xPaaS image for
        OpenShift related to the amq63-basic template.","iconClass":"icon-jboss","tags":"quickstart,java,karaf,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-karaf-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","container":"karaf","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"ACTIVEMQ_SERVICE_NAME","value":"${ACTIVEMQ_SERVICE_NAME}"},{"name":"ACTIVEMQ_USERNAME","value":"${ACTIVEMQ_USERNAME}"},{"name":"ACTIVEMQ_PASSWORD","value":"${ACTIVEMQ_PASSWORD}"}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health-check","port":8181},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8181,"name":"http"},{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/readiness-check","port":8181},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}","memory":"${MEMORY_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}","memory":"${MEMORY_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-karaf2-camel-amq","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/karaf2-camel-amq.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"karaf2-camel-amq-1.0.0.redhat-000022"},{"name":"SERVICE_NAME","displayName":"Service
        Name","description":"Exposed Service name.","value":"s2i-karaf2-camel-amq"},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000022"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"install
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"ACTIVEMQ_SERVICE_NAME","displayName":"ActiveMQ
        Broker Service","description":"Set this to the name of the TCP service of
        the ActiveMQ broker. You may need to create a broker first.","value":"broker-amq-tcp","required":true},{"name":"ACTIVEMQ_USERNAME","displayName":"ActiveMQ
        Broker Username","description":"The username used to authenticate with the
        ActiveMQ broker. Leave it empty if authentication is disabled."},{"name":"ACTIVEMQ_PASSWORD","displayName":"ActiveMQ
        Broker Password","description":"The password used to authenticate with the
        ActiveMQ broker. Leave it empty if authentication is disabled."},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"MEMORY_REQUEST","displayName":"Memory
        request","description":"The amount of memory required for the container to
        run.","value":"1.5G","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        limit","description":"The amount of memory the container is limited to use.","value":"2G","required":true}],"labels":{"template":"s2i-karaf2-camel-amq"}},{"metadata":{"name":"s2i-karaf2-camel-log","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-karaf2-camel-log","uid":"1b62801e-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689624","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"A
        simple Camel route in Karaf container. This quickstart shows a simple Apache
        Camel application that logs a message to the server log every 5th second.","iconClass":"icon-jboss","tags":"quickstart,java,karaf,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-karaf-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","container":"karaf","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health-check","port":8181},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8181,"name":"http"},{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/readiness-check","port":8181},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}","memory":"${MEMORY_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}","memory":"${MEMORY_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-karaf2-camel-log","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/karaf2-camel-log.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"karaf2-camel-log-1.0.0.redhat-000022"},{"name":"SERVICE_NAME","displayName":"Service
        Name","description":"Exposed Service name.","value":"s2i-karaf2-camel-log"},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000022"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"install
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"MEMORY_REQUEST","displayName":"Memory
        request","description":"The amount of memory required for the container to
        run.","value":"1.5G","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        limit","description":"The amount of memory the container is limited to use.","value":"2G","required":true}],"labels":{"template":"s2i-karaf2-camel-log"}},{"metadata":{"name":"s2i-karaf2-camel-rest-sql","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-karaf2-camel-rest-sql","uid":"1b636395-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689625","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"Camel
        example using Rest DSL with SQL Database in Karaf container.  This example
        demonstrates how to use SQL via JDBC along with Camel''s REST DSL to expose
        a RESTful API. The OpenShift MySQL container image should already be installed
        and running on your OpenShift installation, one simple way to run a MySQL
        service is following the documentation of the Openshift MySQL container image
        related to the mysql-ephemeral template..","iconClass":"icon-jboss","tags":"quickstart,java,karaf,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${SERVICE_NAME}-route"},"spec":{"to":{"kind":"Service","name":"${SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${SERVICE_NAME}"},"spec":{"clusterIP":"None","deprecatedPublicIPs":[],"ports":[{"port":9411,"protocol":"TCP","targetPort":8181}],"selector":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-karaf-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","container":"karaf","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"MYSQL_SERVICE_NAME","value":"${MYSQL_SERVICE_NAME}"},{"name":"MYSQL_SERVICE_DATABASE","value":"${MYSQL_SERVICE_DATABASE}"},{"name":"MYSQL_SERVICE_USERNAME","value":"${MYSQL_SERVICE_USERNAME}"},{"name":"MYSQL_SERVICE_PASSWORD","value":"${MYSQL_SERVICE_PASSWORD}"}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health-check","port":8181},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8181,"name":"http"},{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/readiness-check","port":8181},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}","memory":"${MEMORY_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}","memory":"${MEMORY_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-karaf2-camel-rest-sql","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/karaf2-camel-rest-sql.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"karaf2-camel-rest-sql-1.0.0.redhat-000022"},{"name":"SERVICE_NAME","displayName":"Service
        Name","description":"Exposed Service name.","value":"s2i-karaf2-camel-rest"},{"name":"MYSQL_SERVICE_NAME","displayName":"MySQL
        Server Service","description":"Set this to the name of the TCP service of
        the MySQL server. You may need to create a server first.","value":"mysql","required":true},{"name":"MYSQL_SERVICE_DATABASE","displayName":"MySQL
        Server Database","description":"The database hosted by the MySQL server to
        be used by the application.","value":"sampledb","required":true},{"name":"MYSQL_SERVICE_USERNAME","displayName":"MySQL
        Server Username","description":"The username used to authenticate with the
        MySQL server. Leave it empty if authentication is disabled."},{"name":"MYSQL_SERVICE_PASSWORD","displayName":"MySQL
        Server Password","description":"The password used to authenticate with the
        MySQL server. Leave it empty if authentication is disabled."},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000022"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"install
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"MEMORY_REQUEST","displayName":"Memory
        request","description":"The amount of memory required for the container to
        run.","value":"1.5G","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        limit","description":"The amount of memory the container is limited to use.","value":"2G","required":true}],"labels":{"template":"s2i-karaf2-camel-rest-sql"}},{"metadata":{"name":"s2i-karaf2-cxf-rest","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-karaf2-cxf-rest","uid":"1b644c87-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689626","creationTimestamp":"2018-02-08T20:46:15Z","annotations":{"description":"REST
        example using CXF in Karaf container. This quickstart demonstrates how to
        create a RESTful (JAX-RS) web service using CXF and expose it through the
        OSGi HTTP Service","iconClass":"icon-jboss","tags":"quickstart,java,karaf,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"component":"${APP_NAME}","container":"java","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${SERVICE_NAME}-route"},"spec":{"to":{"kind":"Service","name":"${SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${SERVICE_NAME}"},"spec":{"clusterIP":"None","deprecatedPublicIPs":[],"ports":[{"port":9412,"protocol":"TCP","targetPort":8181}],"selector":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-karaf-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","container":"karaf","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","container":"karaf","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health-check","port":8181},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8181,"name":"http"},{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/readiness-check","port":8181},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}","memory":"${MEMORY_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}","memory":"${MEMORY_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-karaf2-cxf-rest","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/karaf2-cxf-rest.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"karaf2-cxf-rest-1.0.0.redhat-000022"},{"name":"SERVICE_NAME","displayName":"Service
        Name","description":"Exposed Service name.","value":"s2i-karaf2-cxf-rest"},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000022"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"install
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"MEMORY_REQUEST","displayName":"Memory
        request","description":"The amount of memory required for the container to
        run.","value":"1.5G","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true},{"name":"MEMORY_LIMIT","displayName":"Memory
        limit","description":"The amount of memory the container is limited to use.","value":"2G","required":true}],"labels":{"template":"s2i-karaf2-cxf-rest"}},{"metadata":{"name":"s2i-spring-boot-camel","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-spring-boot-camel","uid":"1b83bf1e-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689634","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Spring-Boot
        and Camel QuickStart. This example demonstrates how you can use Apache Camel
        with Spring Boot on Openshift. The quickstart uses Spring Boot to configure
        a little application that includes a Camel route that triggeres a message
        every 5th second, and routes the message to a log.","iconClass":"icon-jboss","tags":"quickstart,java,springboot,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-java-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-spring-boot-camel","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/spring-boot-camel.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"spring-boot-camel-1.0.0.redhat-000067"},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000067"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"package
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true}],"labels":{"template":"s2i-spring-boot-camel"}},{"metadata":{"name":"s2i-spring-boot-camel-amq","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-spring-boot-camel-amq","uid":"1b7e878c-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689627","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Spring
        Boot, Camel and ActiveMQ QuickStart. This quickstart demonstrates how to connect
        a Spring-Boot application to an ActiveMQ broker and use JMS messaging between
        two Camel routes using OpenShift. In this example we will use two containers,
        one container to run as a ActiveMQ broker, and another as a client to the
        broker, where the Camel routes are running. This quickstart requires the ActiveMQ
        broker has been deployed and running first, one simple way to run a A-MQ service
        is following the documentation of the A-MQ xPaaS image for OpenShift related
        to the amq63-basic template","iconClass":"icon-jboss","tags":"quickstart,java,springboot,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-java-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"ACTIVEMQ_SERVICE_NAME","value":"${ACTIVEMQ_SERVICE_NAME}"},{"name":"ACTIVEMQ_BROKER_USERNAME","value":"${ACTIVEMQ_BROKER_USERNAME}"},{"name":"ACTIVEMQ_BROKER_PASSWORD","value":"${ACTIVEMQ_BROKER_PASSWORD}"}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-spring-boot-camel-amq","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/spring-boot-camel-amq.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"spring-boot-camel-amq-1.0.0.redhat-000067"},{"name":"ACTIVEMQ_SERVICE_NAME","displayName":"ActiveMQ
        Broker Service","description":"Set this to the name of the TCP service of
        the ActiveMQ broker. You may need to create a broker first.","value":"broker-amq-tcp","required":true},{"name":"ACTIVEMQ_BROKER_USERNAME","displayName":"ActiveMQ
        Broker Username","description":"The username used to authenticate with the
        ActiveMQ broker. Leave it empty if authentication is disabled."},{"name":"ACTIVEMQ_BROKER_PASSWORD","displayName":"ActiveMQ
        Broker Password","description":"The password used to authenticate with the
        ActiveMQ broker. Leave it empty if authentication is disabled."},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000067"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"package
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true}],"labels":{"template":"s2i-spring-boot-camel-amq"}},{"metadata":{"name":"s2i-spring-boot-camel-config","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-spring-boot-camel-config","uid":"1b7f6b53-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689628","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Spring
        Boot and Camel using ConfigMaps and Secrets. This quickstart demonstrates
        how to configure a Spring-Boot application using OpenShift ConfigMaps and
        Secrets. This example requires that a ConfigMap named camel-config and a Secret
        named camel-config are present in the namespace before the application is
        deployed, instruction about how to manually create them can be found here:
        https://github.com/fabric8-quickstarts/spring-boot-camel-config/blob/fis-2.0.x.redhat/README.redhat.md
        ","iconClass":"icon-jboss","tags":"quickstart,java,springboot,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-java-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"SPRING_CLOUD_KUBERNETES_SECRETS_NAME","value":"${SECRET_NAME}"},{"name":"SPRING_CLOUD_KUBERNETES_CONFIG_NAME","value":"${CONFIGMAP_NAME}"}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":10},"resources":{},"volumeMounts":[{"mountPath":"/etc/secrets/camel-config","name":"camel-config","readOnly":true}]}],"serviceAccountName":"${SERVICE_ACCOUNT_NAME}","volumes":[{"name":"camel-config","secret":{"secretName":"${SECRET_NAME}"}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-spring-boot-camel-config","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/spring-boot-camel-config.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"spring-boot-camel-config-1.0.0.redhat-000017"},{"name":"SERVICE_ACCOUNT_NAME","displayName":"Service
        Account","description":"The Service Account that will be used to run the container.
        It must be already present in Openshift and have the view role.","value":"qs-camel-config","required":true},{"name":"SECRET_NAME","displayName":"Secret
        Name","description":"The name of the Openshift Secret that will be used to
        configure the application. It must be already present in Openshift.","value":"camel-config","required":true},{"name":"CONFIGMAP_NAME","displayName":"ConfigMap
        Name","description":"The name of the Openshift ConfigMap that will be used
        to configure the application. It must be already present in Openshift.","value":"camel-config","required":true},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000017"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"package
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"}],"labels":{"template":"s2i-spring-boot-camel-config"}},{"metadata":{"name":"s2i-spring-boot-camel-drools","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-spring-boot-camel-drools","uid":"1b8042e2-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689629","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Spring-Boot,
        Camel and JBoss BRMS QuickStart. This example demonstrates how you can use
        Apache Camel and JBoss BRMS with Spring Boot on OpenShift. DRL files contain
        simple rules which are used to create knowledge session via Spring configuration
        file. Camel routes, defined via Spring as well, are then used to e.g. pass
        (insert) the Body of the message as a POJO to Drools engine for execution.
        A Kie Server should be deployed and configured before running the application,
        more information about how to configure it can be found at https://github.com/fabric8-quickstarts/spring-boot-camel-drools/blob/fis-2.0.x.redhat/README.redhat.md","iconClass":"icon-jboss","tags":"quickstart,java,springboot,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-java-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"KIESERVER_SERVICE","value":"${KIESERVER_SERVICE}"},{"name":"KIESERVER_USERNAME","value":"${KIESERVER_USERNAME}"},{"name":"KIESERVER_PASSWORD","value":"${KIESERVER_PASSWORD}"}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-spring-boot-camel-drools","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/spring-boot-camel-drools.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"spring-boot-camel-drools-1.0.0.redhat-000066"},{"name":"KIESERVER_SERVICE","displayName":"Decision
        Server Name","description":"Set this to the name of the Decision Server. You
        may need to create an instance before.","value":"kie-app","required":true},{"name":"KIESERVER_USERNAME","displayName":"Decision
        Server Username","description":"The username used to authenticate with the
        Decision Server.","value":"kieserver","required":true},{"name":"KIESERVER_PASSWORD","displayName":"Decision
        Server Password","description":"The password used to authenticate with the
        Decision Server.","required":true},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000066"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"package
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true}],"labels":{"template":"s2i-spring-boot-camel-drools"}},{"metadata":{"name":"s2i-spring-boot-camel-infinispan","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-spring-boot-camel-infinispan","uid":"1b81185e-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689630","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Spring
        Boot, Camel and JBoss Data Grid QuickStart. This quickstart demonstrates how
        to connect a Spring-Boot application to a JBoss Data Grid (or Infinispan)
        server using the Hot Rod protocol. It requires that the data grid server (or
        cluster) has been deployed first, one simple way to run a JDG service is following
        the documentation of the JDG xPaaS image for OpenShift related to the datagrid65-basic
        template.","iconClass":"icon-jboss","tags":"quickstart,java,springboot,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-java-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"INFINISPAN_SERVICE","value":"${INFINISPAN_SERVICE}"}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-spring-boot-camel-infinispan","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/spring-boot-camel-infinispan.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"spring-boot-camel-infinispan-1.0.0.redhat-000036"},{"name":"INFINISPAN_SERVICE","displayName":"JBoss
        Data Grid Service (Hot Rod)","description":"Set this to the name of the Hot
        Rod service of the JBoss Data Grid. You may need to create the data grid first.","value":"datagrid-app-hotrod","required":true},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000036"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"package
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true}],"labels":{"template":"s2i-spring-boot-camel-infinispan"}},{"metadata":{"name":"s2i-spring-boot-camel-rest-sql","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-spring-boot-camel-rest-sql","uid":"1b81ff44-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689631","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Spring
        Boot, Camel REST DSL and MySQL QuickStart. This quickstart demonstrates how
        to connect a Spring Boot application to a MySQL database and expose a REST
        API with Camel on OpenShift. In this example we will use two containers, one
        container to run as a MySQL server, and another as a client to the database,
        where the Camel routes are running. This quickstart requires the MySQL server
        to be deployed and started first, one simple way to run a MySQL service is
        following the documentation of the OpenShift MySQL container image related
        to the mysql-ephemeral template.","iconClass":"icon-jboss","tags":"quickstart,java,springboot,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${SERVICE_NAME}-route"},"spec":{"to":{"kind":"Service","name":"${SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${SERVICE_NAME}"},"spec":{"clusterIP":"None","deprecatedPublicIPs":[],"ports":[{"port":9411,"protocol":"TCP","targetPort":8080}],"selector":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-java-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"MYSQL_SERVICE_NAME","value":"${MYSQL_SERVICE_NAME}"},{"name":"MYSQL_SERVICE_DATABASE","value":"${MYSQL_SERVICE_DATABASE}"},{"name":"MYSQL_SERVICE_USERNAME","value":"${MYSQL_SERVICE_USERNAME}"},{"name":"MYSQL_SERVICE_PASSWORD","value":"${MYSQL_SERVICE_PASSWORD}"}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8080,"name":"http"},{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-spring-boot-camel-rest-sql","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/spring-boot-camel-rest-sql.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"spring-boot-camel-rest-sql-1.0.0.redhat-000067"},{"name":"SERVICE_NAME","displayName":"Service
        Name","description":"Exposed service name.","value":"camel-rest-sql"},{"name":"MYSQL_SERVICE_NAME","displayName":"MySQL
        Server Service","description":"Set this to the name of the TCP service of
        the MySQL server. You may need to create a server first.","value":"mysql","required":true},{"name":"MYSQL_SERVICE_DATABASE","displayName":"MySQL
        Server Database","description":"The database hosted by the MySQL server to
        be used by the application.","value":"sampledb"},{"name":"MYSQL_SERVICE_USERNAME","displayName":"MySQL
        Server Username","description":"The username used to authenticate with the
        MySQL server. Leave it empty if authentication is disabled."},{"name":"MYSQL_SERVICE_PASSWORD","displayName":"MySQL
        Server Password","description":"The password used to authenticate with the
        MySQL server. Leave it empty if authentication is disabled."},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000067"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"package
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true}],"labels":{"template":"s2i-spring-boot-camel-rest-sql"}},{"metadata":{"name":"s2i-spring-boot-camel-teiid","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-spring-boot-camel-teiid","uid":"1b82e6e4-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689633","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Spring-Boot,
        Camel and JBoss Data Virtualization QuickStart. This example demonstrates
        how to connect Apache Camel to a remote JBoss Data Virtualization (or Teiid)
        Server using the JDBC protocol. This quickstart assumes that the JDV server
        is already running and configured on OpenShift, more information about to
        setup a JDV server can be found at https://github.com/fabric8-quickstarts/spring-boot-camel-teiid/blob/fis-2.0.x.redhat/README.redhat.md","iconClass":"icon-jboss","tags":"quickstart,java,springboot,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-java-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"TEIID_SERVICE_NAME","value":"${TEIID_SERVICE_NAME}"},{"name":"TEIID_PORT_NAME","value":"${TEIID_PORT_NAME}"},{"name":"TEIID_USERNAME","value":"${TEIID_USERNAME}"},{"name":"TEIID_PASSWORD","value":"${TEIID_PASSWORD}"}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-spring-boot-camel-teiid","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/spring-boot-camel-teiid.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"spring-boot-camel-teiid-1.0.0.redhat-000065"},{"name":"TEIID_SERVICE_NAME","displayName":"JDV
        Server Name","description":"Set this to the name of the JDV Server. You may
        need to create an instance before.","value":"datavirt-app","required":true},{"name":"TEIID_PORT_NAME","displayName":"JDV
        Port Name","description":"Set this to the name of the JDV port to use. Set
        this value if the JDV service contains multiple named ports.","value":"jdbc"},{"name":"TEIID_USERNAME","displayName":"JDV
        Server Username","description":"The username used to authenticate with the
        JDV Server.","required":true},{"name":"TEIID_PASSWORD","displayName":"JDV
        Server Password","description":"The password used to authenticate with the
        JDV Server.","required":true},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000065"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"package
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true}],"labels":{"template":"s2i-spring-boot-camel-teiid"}},{"metadata":{"name":"s2i-spring-boot-camel-xml","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-spring-boot-camel-xml","uid":"1b84d28a-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689635","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Spring-Boot
        and Camel Xml QuickStart. This example demonstrates how you can use Apache
        Camel with Spring Boot on Openshift. The quickstart uses Spring Boot to configure
        a little application that includes a Camel route (in Spring xml) that triggeres
        a message every 5th second, and routes the message to a log.","iconClass":"icon-jboss","tags":"quickstart,java,springboot,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-java-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-spring-boot-camel-xml","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/spring-boot-camel-xml.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"spring-boot-camel-xml-1.0.0.redhat-000067"},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000067"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"package
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true}],"labels":{"template":"s2i-spring-boot-camel-xml"}},{"metadata":{"name":"s2i-spring-boot-cxf-jaxrs","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-spring-boot-cxf-jaxrs","uid":"1b85ae5f-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689636","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Spring-Boot
        and CXF JAXRS QuickStart. This example demonstrates how you can use Apache
        CXF JAXRS with Spring Boot on Openshift. The quickstart uses Spring Boot to
        configure a little application that includes a CXF JAXRS endpoint with Swagger
        enabled.","iconClass":"icon-jboss","tags":"quickstart,java,springboot,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${SERVICE_NAME}-route"},"spec":{"to":{"kind":"Service","name":"${SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${SERVICE_NAME}"},"spec":{"clusterIP":"None","deprecatedPublicIPs":[],"ports":[{"port":9413,"protocol":"TCP","targetPort":8080}],"selector":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-java-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-spring-boot-cxf-jaxrs","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/spring-boot-cxf-jaxrs.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"spring-boot-cxf-jaxrs-1.0.0.redhat-000017"},{"name":"SERVICE_NAME","displayName":"Service
        Name","description":"Exposed service name.","value":"cxf-jaxrs"},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000017"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"package
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true}],"labels":{"template":"s2i-spring-boot-cxf-jaxrs"}},{"metadata":{"name":"s2i-spring-boot-cxf-jaxws","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/s2i-spring-boot-cxf-jaxws","uid":"1b869652-0d11-11e8-906a-d094660d31fb","resourceVersion":"1689637","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Spring-Boot
        and CXF JAXWS QuickStart. This example demonstrates how you can use Apache
        CXF JAXWS with Spring Boot on Openshift. The quickstart uses Spring Boot to
        configure a little application that includes a CXF JAXWS endpoint.","iconClass":"icon-jboss","tags":"quickstart,java,springboot,fis,jboss-fuse","version":"2.0"}},"objects":[{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${SERVICE_NAME}-route"},"spec":{"to":{"kind":"Service","name":"${SERVICE_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${SERVICE_NAME}"},"spec":{"clusterIP":"None","deprecatedPublicIPs":[],"ports":[{"port":9414,"protocol":"TCP","targetPort":8080}],"selector":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i"}}},{"apiVersion":"v1","kind":"ImageStream","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{},"status":{"dockerImageRepository":""}},{"apiVersion":"v1","kind":"BuildConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"output":{"to":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"resources":{},"source":{"git":{"ref":"${GIT_REF}","uri":"${GIT_REPO}"},"type":"Git"},"strategy":{"sourceStrategy":{"env":[{"name":"BUILD_LOGLEVEL","value":"5"},{"name":"ARTIFACT_DIR","value":"${ARTIFACT_DIR}"},{"name":"MAVEN_ARGS","value":"${MAVEN_ARGS}"},{"name":"MAVEN_ARGS_APPEND","value":"${MAVEN_ARGS_APPEND}"}],"forcePull":true,"from":{"kind":"ImageStreamTag","name":"fis-java-openshift:${BUILDER_VERSION}","namespace":"${IMAGE_STREAM_NAMESPACE}"},"incremental":true},"type":"Source"},"triggers":[{"github":{"secret":"${BUILD_SECRET}"},"type":"GitHub"},{"generic":{"secret":"${BUILD_SECRET}"},"type":"Generic"},{"type":"ConfigChange"},{"imageChange":{},"type":"ImageChange"}]},"status":{"lastVersion":0}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"name":"${APP_NAME}"},"spec":{"replicas":1,"selector":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"},"strategy":{"resources":{}},"template":{"metadata":{"creationTimestamp":null,"labels":{"component":"${APP_NAME}","deploymentconfig":"${APP_NAME}","group":"quickstarts","project":"${APP_NAME}","provider":"s2i","version":"${APP_VERSION}"}},"spec":{"containers":[{"env":[{"name":"KUBERNETES_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"library/${APP_NAME}:latest","livenessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":180},"name":"${APP_NAME}","ports":[{"containerPort":8778,"name":"jolokia"}],"readinessProbe":{"httpGet":{"path":"/health","port":8081},"initialDelaySeconds":10},"resources":{"limits":{"cpu":"${CPU_LIMIT}"},"requests":{"cpu":"${CPU_REQUEST}"}}}]}},"triggers":[{"type":"ConfigChange"},{"imageChangeParams":{"automatic":true,"containerNames":["${APP_NAME}"],"from":{"kind":"ImageStreamTag","name":"${APP_NAME}:latest"}},"type":"ImageChange"}]},"status":{}}],"parameters":[{"name":"APP_NAME","displayName":"Application
        Name","description":"The name assigned to the application.","value":"s2i-spring-boot-cxf-jaxws","required":true},{"name":"GIT_REPO","displayName":"Git
        Repository URL","description":"The URL of the repository with your application
        source code.","value":"https://github.com/fabric8-quickstarts/spring-boot-cxf-jaxws.git","required":true},{"name":"GIT_REF","displayName":"Git
        Reference","description":"Set this to a branch name, tag or other ref of your
        repository if you are not using the default branch.","value":"spring-boot-cxf-jaxws-1.0.0.redhat-000017"},{"name":"SERVICE_NAME","displayName":"Service
        Name","description":"Exposed service name.","value":"cxf-jaxws"},{"name":"BUILDER_VERSION","displayName":"Builder
        version","description":"The version of the FIS S2I builder image to use.","value":"2.0"},{"name":"APP_VERSION","displayName":"Application
        Version","description":"The application version.","value":"1.0.0.redhat-000017"},{"name":"MAVEN_ARGS","displayName":"Maven
        Arguments","description":"Arguments passed to mvn in the build.","value":"package
        -DskipTests -Dfabric8.skip -e -B"},{"name":"MAVEN_ARGS_APPEND","displayName":"Extra
        Maven Arguments","description":"Extra arguments passed to mvn, e.g. for multi-module
        builds."},{"name":"ARTIFACT_DIR","displayName":"Maven build directory","description":"Directory
        of the artifact to be built, e.g. for multi-module builds."},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"Image
        Stream Namespace","description":"Namespace in which the Fuse ImageStreams
        are installed. These ImageStreams are normally installed in the openshift
        namespace. You should only need to modify this if you''ve installed the ImageStreams
        in a different namespace/project.","value":"openshift","required":true},{"name":"BUILD_SECRET","displayName":"Git
        Build Secret","description":"The secret needed to trigger a build.","generate":"expression","from":"[a-zA-Z0-9]{40}"},{"name":"CPU_REQUEST","displayName":"CPU
        request","description":"The amount of CPU to requests.","value":"0.2","required":true},{"name":"CPU_LIMIT","displayName":"CPU
        limit","description":"The amount of CPU the container is limited to use.","value":"1.0","required":true}],"labels":{"template":"s2i-spring-boot-cxf-jaxws"}},{"metadata":{"name":"sso70-https","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/sso70-https","uid":"1b87a9db-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687410","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for SSO 7.0","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat Single Sign-On 7.0","tags":"sso,keycloak,jboss,xpaas","version":"1.4.0"}},"message":"A
        new SSO service has been created in your project. The admin username/password
        for accessing the master realm via the SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
        Please be sure to create the \"${SERVICE_ACCOUNT_NAME}\" service account and
        the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications;
        \"${SSO_TRUSTSTORE_SECRET}\" containing the ${SSO_TRUSTSTORE} file used for
        securing SSO requests.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"OPENSHIFT_KUBE_PING_LABELS","value":"application=${APPLICATION_NAME}"},{"name":"OPENSHIFT_KUBE_PING_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"SSO_ADMIN_USERNAME","value":"${SSO_ADMIN_USERNAME}"},{"name":"SSO_ADMIN_PASSWORD","value":"${SSO_ADMIN_PASSWORD}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_SERVICE_USERNAME","value":"${SSO_SERVICE_USERNAME}"},{"name":"SSO_SERVICE_PASSWORD","value":"${SSO_SERVICE_PASSWORD}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","lifecycle":{"preStop":{"exec":{"command":["/opt/eap/bin/jboss-cli.sh","-c",":shutdown(timeout=60)"]}}},"livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"serviceAccountName":"${SERVICE_ACCOUNT_NAME}","terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"redhat-sso70-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"sso","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"SERVICE_ACCOUNT_NAME","displayName":"Service
        Account Name","description":"The name of the service account to use for the
        deployment.  The service account should be configured to allow useage of the
        secret(s) specified by HTTPS_SECRET and JGROUPS_ENCRYPT_SECRET.","value":"sso-service-account","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"sso-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups Secret
        Name","description":"The name of the secret containing the keystore file","value":"sso-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"SSO_ADMIN_USERNAME","displayName":"SSO
        Admin Username","description":"SSO Server admin username","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ADMIN_PASSWORD","displayName":"SSO
        Admin Password","description":"SSO Server admin  password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"Realm to be created in the SSO server (e.g. demo)."},{"name":"SSO_SERVICE_USERNAME","displayName":"SSO
        Service Username","description":"The username used to access the SSO service.  This
        is used by clients to create the appliction client(s) within the specified
        SSO realm."},{"name":"SSO_SERVICE_PASSWORD","displayName":"SSO Service Password","description":"The
        password for the SSO service user."},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"sso-app-secret"}],"labels":{"template":"sso70-https","xpaas":"1.4.0"}},{"metadata":{"name":"sso70-mysql","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/sso70-mysql","uid":"1b8a1d3b-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687411","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for SSO 7.0 MySQL applications","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat Single Sign-On 7.0 + MySQL (Ephemeral)","tags":"sso,keycloak,jboss,xpaas","version":"1.4.0"}},"message":"A
        new SSO service (using MySQL) has been created in your project. The admin
        username/password for accessing the master realm via the SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
        The username/password for accessing the MySQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the \"${SERVICE_ACCOUNT_NAME}\"
        service account and the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications; \"${SSO_TRUSTSTORE_SECRET}\" containing the ${SSO_TRUSTSTORE}
        file used for securing SSO requests.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}","component":"database"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"server","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"OPENSHIFT_KUBE_PING_LABELS","value":"application=${APPLICATION_NAME}"},{"name":"OPENSHIFT_KUBE_PING_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"SSO_ADMIN_USERNAME","value":"${SSO_ADMIN_USERNAME}"},{"name":"SSO_ADMIN_PASSWORD","value":"${SSO_ADMIN_PASSWORD}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_SERVICE_USERNAME","value":"${SSO_SERVICE_USERNAME}"},{"name":"SSO_SERVICE_PASSWORD","value":"${SSO_SERVICE_PASSWORD}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","lifecycle":{"preStop":{"exec":{"command":["/opt/eap/bin/jboss-cli.sh","-c",":shutdown(timeout=60)"]}}},"livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"serviceAccountName":"${SERVICE_ACCOUNT_NAME}","terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"redhat-sso70-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"database"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"database","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"sso","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:jboss/datasources/KeycloakDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"SERVICE_ACCOUNT_NAME","displayName":"Service
        Account Name","description":"The name of the service account to use for the
        deployment.  The service account should be configured to allow useage of the
        secret(s) specified by HTTPS_SECRET and JGROUPS_ENCRYPT_SECRET.","value":"sso-service-account","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"sso-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"sso-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"SSO_ADMIN_USERNAME","displayName":"SSO
        Admin Username","description":"SSO Server admin username","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ADMIN_PASSWORD","displayName":"SSO
        Admin Password","description":"SSO Server admin  password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"Realm to be created in the SSO server (e.g. demo)."},{"name":"SSO_SERVICE_USERNAME","displayName":"SSO
        Service Username","description":"The username used to access the SSO service.  This
        is used by clients to create the appliction client(s) within the specified
        SSO realm."},{"name":"SSO_SERVICE_PASSWORD","displayName":"SSO Service Password","description":"The
        password for the SSO service user."},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"sso-app-secret"},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"sso70-mysql","xpaas":"1.4.0"}},{"metadata":{"name":"sso70-mysql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/sso70-mysql-persistent","uid":"1b88dcce-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687412","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for SSO 7.0 MySQL applications with persistent storage","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat Single Sign-On 7.0 + MySQL (Persistent)","tags":"sso,keycloak,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent SSO service (using MySQL) has been created in your project.
        The admin username/password for accessing the master realm via the SSO console
        is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The username/password for
        accessing the MySQL database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the \"${SERVICE_ACCOUNT_NAME}\" service account and
        the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications;
        \"${SSO_TRUSTSTORE_SECRET}\" containing the ${SSO_TRUSTSTORE} file used for
        securing SSO requests.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"OPENSHIFT_KUBE_PING_LABELS","value":"application=${APPLICATION_NAME}"},{"name":"OPENSHIFT_KUBE_PING_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"SSO_ADMIN_USERNAME","value":"${SSO_ADMIN_USERNAME}"},{"name":"SSO_ADMIN_PASSWORD","value":"${SSO_ADMIN_PASSWORD}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_SERVICE_USERNAME","value":"${SSO_SERVICE_USERNAME}"},{"name":"SSO_SERVICE_PASSWORD","value":"${SSO_SERVICE_PASSWORD}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","lifecycle":{"preStop":{"exec":{"command":["/opt/eap/bin/jboss-cli.sh","-c",":shutdown(timeout=60)"]}}},"livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"serviceAccountName":"${SERVICE_ACCOUNT_NAME}","terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"redhat-sso70-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"sso","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:jboss/datasources/KeycloakDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"SERVICE_ACCOUNT_NAME","displayName":"Service
        Account Name","description":"The name of the service account to use for the
        deployment.  The service account should be configured to allow useage of the
        secret(s) specified by HTTPS_SECRET and JGROUPS_ENCRYPT_SECRET.","value":"sso-service-account","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"sso-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"sso-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"SSO_ADMIN_USERNAME","displayName":"SSO
        Admin Username","description":"SSO Server admin username","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ADMIN_PASSWORD","displayName":"SSO
        Admin Password","description":"SSO Server admin  password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"Realm to be created in the SSO server (e.g. demo)."},{"name":"SSO_SERVICE_USERNAME","displayName":"SSO
        Service Username","description":"The username used to access the SSO service.  This
        is used by clients to create the appliction client(s) within the specified
        SSO realm."},{"name":"SSO_SERVICE_PASSWORD","displayName":"SSO Service Password","description":"The
        password for the SSO service user."},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"sso-app-secret"},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true}],"labels":{"template":"sso70-mysql-persistent","xpaas":"1.4.0"}},{"metadata":{"name":"sso70-postgresql","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/sso70-postgresql","uid":"1b8c9061-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687413","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for SSO 7.0 PostgreSQL applications","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat Single Sign-On 7.0 + PostgreSQL (Ephemeral)","tags":"sso,keycloak,jboss,xpaas","version":"1.4.0"}},"message":"A
        new SSO service (using PostgreSQL) has been created in your project. The admin
        username/password for accessing the master realm via the SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
        The username/password for accessing the PostgreSQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the \"${SERVICE_ACCOUNT_NAME}\"
        service account and the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications; \"${SSO_TRUSTSTORE_SECRET}\" containing the ${SSO_TRUSTSTORE}
        file used for securing SSO requests.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}","component":"database"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"server","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"OPENSHIFT_KUBE_PING_LABELS","value":"application=${APPLICATION_NAME}"},{"name":"OPENSHIFT_KUBE_PING_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"SSO_ADMIN_USERNAME","value":"${SSO_ADMIN_USERNAME}"},{"name":"SSO_ADMIN_PASSWORD","value":"${SSO_ADMIN_PASSWORD}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_SERVICE_USERNAME","value":"${SSO_SERVICE_USERNAME}"},{"name":"SSO_SERVICE_PASSWORD","value":"${SSO_SERVICE_PASSWORD}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","lifecycle":{"preStop":{"exec":{"command":["/opt/eap/bin/jboss-cli.sh","-c",":shutdown(timeout=60)"]}}},"livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"serviceAccountName":"${SERVICE_ACCOUNT_NAME}","terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"redhat-sso70-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"database"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"database","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}]}],"terminationGracePeriodSeconds":60}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"sso","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/KeycloakDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"SERVICE_ACCOUNT_NAME","displayName":"Service
        Account Name","description":"The name of the service account to use for the
        deployment.  The service account should be configured to allow useage of the
        secret(s) specified by HTTPS_SECRET and JGROUPS_ENCRYPT_SECRET.","value":"sso-service-account","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"sso-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"sso-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"SSO_ADMIN_USERNAME","displayName":"SSO
        Admin Username","description":"SSO Server admin username","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ADMIN_PASSWORD","displayName":"SSO
        Admin Password","description":"SSO Server admin  password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"Realm to be created in the SSO server (e.g. demo)."},{"name":"SSO_SERVICE_USERNAME","displayName":"SSO
        Service Username","description":"The username used to access the SSO service.  This
        is used by clients to create the appliction client(s) within the specified
        SSO realm."},{"name":"SSO_SERVICE_PASSWORD","displayName":"SSO Service Password","description":"The
        password for the SSO service user."},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"sso-app-secret"},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"sso70-postgresql","xpaas":"1.4.0"}},{"metadata":{"name":"sso70-postgresql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/sso70-postgresql-persistent","uid":"1b8b58cd-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687414","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"Application
        template for SSO 7.0 PostgreSQL applications with persistent storage","iconClass":"icon-jboss","openshift.io/display-name":"Red
        Hat Single Sign-On 7.0 + PostgreSQL (Persistent)","tags":"sso,keycloak,jboss,xpaas","version":"1.4.0"}},"message":"A
        new persistent SSO service (using PostgreSQL) has been created in your project.
        The admin username/password for accessing the master realm via the SSO console
        is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The username/password for
        accessing the PostgreSQL database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the \"${SERVICE_ACCOUNT_NAME}\" service account and
        the following secrets: \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE}
        file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing
        the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups communications;
        \"${SSO_TRUSTSTORE_SECRET}\" containing the ${SSO_TRUSTSTORE} file used for
        securing SSO requests.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"OPENSHIFT_KUBE_PING_LABELS","value":"application=${APPLICATION_NAME}"},{"name":"OPENSHIFT_KUBE_PING_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"SSO_ADMIN_USERNAME","value":"${SSO_ADMIN_USERNAME}"},{"name":"SSO_ADMIN_PASSWORD","value":"${SSO_ADMIN_PASSWORD}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_SERVICE_USERNAME","value":"${SSO_SERVICE_USERNAME}"},{"name":"SSO_SERVICE_PASSWORD","value":"${SSO_SERVICE_PASSWORD}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","lifecycle":{"preStop":{"exec":{"command":["/opt/eap/bin/jboss-cli.sh","-c",":shutdown(timeout=60)"]}}},"livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]}},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"serviceAccountName":"${SERVICE_ACCOUNT_NAME}","terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"redhat-sso70-openshift:1.4","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"sso","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/KeycloakDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"SERVICE_ACCOUNT_NAME","displayName":"Service
        Account Name","description":"The name of the service account to use for the
        deployment.  The service account should be configured to allow useage of the
        secret(s) specified by HTTPS_SECRET and JGROUPS_ENCRYPT_SECRET.","value":"sso-service-account","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"sso-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"512Mi","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"sso-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"SSO_ADMIN_USERNAME","displayName":"SSO
        Admin Username","description":"SSO Server admin username","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ADMIN_PASSWORD","displayName":"SSO
        Admin Password","description":"SSO Server admin  password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"Realm to be created in the SSO server (e.g. demo)."},{"name":"SSO_SERVICE_USERNAME","displayName":"SSO
        Service Username","description":"The username used to access the SSO service.  This
        is used by clients to create the appliction client(s) within the specified
        SSO realm."},{"name":"SSO_SERVICE_PASSWORD","displayName":"SSO Service Password","description":"The
        password for the SSO service user."},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"sso-app-secret"},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true}],"labels":{"template":"sso70-postgresql-persistent","xpaas":"1.4.0"}},{"metadata":{"name":"sso71-https","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/sso71-https","uid":"1b8dcb19-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687415","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example SSO 7 application. For more information about using this template,
        see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-sso","openshift.io/display-name":"Single
        Sign-On 7.1","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"sso,keycloak,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-single-sign-on/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Single Sign-On 7.1 server
        based deployment.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new SSO service has been created in your project. The admin username/password
        for accessing the master realm via the SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications; \"${SSO_TRUSTSTORE_SECRET}\" containing the ${SSO_TRUSTSTORE}
        file used for securing SSO requests.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"SSO_ADMIN_USERNAME","value":"${SSO_ADMIN_USERNAME}"},{"name":"SSO_ADMIN_PASSWORD","value":"${SSO_ADMIN_PASSWORD}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_SERVICE_USERNAME","value":"${SSO_SERVICE_USERNAME}"},{"name":"SSO_SERVICE_PASSWORD","value":"${SSO_SERVICE_PASSWORD}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"redhat-sso71-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"sso","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"sso-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups Secret
        Name","description":"The name of the secret containing the keystore file","value":"sso-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"SSO_ADMIN_USERNAME","displayName":"SSO
        Admin Username","description":"SSO Server admin username","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ADMIN_PASSWORD","displayName":"SSO
        Admin Password","description":"SSO Server admin  password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"Realm to be created in the SSO server (e.g. demo)."},{"name":"SSO_SERVICE_USERNAME","displayName":"SSO
        Service Username","description":"The username used to access the SSO service.  This
        is used by clients to create the appliction client(s) within the specified
        SSO realm."},{"name":"SSO_SERVICE_PASSWORD","displayName":"SSO Service Password","description":"The
        password for the SSO service user."},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"sso-app-secret"},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"sso71-https","xpaas":"1.4.8"}},{"metadata":{"name":"sso71-mysql","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/sso71-mysql","uid":"1b90587b-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687416","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example SSO 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-sso","openshift.io/display-name":"Single
        Sign-On 7.1 + MySQL (Ephemeral)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"sso,keycloak,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-single-sign-on/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Single Sign-On 7.1 server
        based deployment and deployment configuration for MySQL using ephemeral (temporary)
        storage.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new SSO service (using MySQL) has been created in your project. The admin
        username/password for accessing the master realm via the SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
        The username/password for accessing the MySQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications; \"${SSO_TRUSTSTORE_SECRET}\"
        containing the ${SSO_TRUSTSTORE} file used for securing SSO requests.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}","component":"database"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"server","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"SSO_ADMIN_USERNAME","value":"${SSO_ADMIN_USERNAME}"},{"name":"SSO_ADMIN_PASSWORD","value":"${SSO_ADMIN_PASSWORD}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_SERVICE_USERNAME","value":"${SSO_SERVICE_USERNAME}"},{"name":"SSO_SERVICE_PASSWORD","value":"${SSO_SERVICE_PASSWORD}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"redhat-sso71-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"database"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"database","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"sso","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:jboss/datasources/KeycloakDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"sso-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"sso-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"SSO_ADMIN_USERNAME","displayName":"SSO
        Admin Username","description":"SSO Server admin username","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ADMIN_PASSWORD","displayName":"SSO
        Admin Password","description":"SSO Server admin  password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"Realm to be created in the SSO server (e.g. demo)."},{"name":"SSO_SERVICE_USERNAME","displayName":"SSO
        Service Username","description":"The username used to access the SSO service.  This
        is used by clients to create the appliction client(s) within the specified
        SSO realm."},{"name":"SSO_SERVICE_PASSWORD","displayName":"SSO Service Password","description":"The
        password for the SSO service user."},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"sso-app-secret"},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"sso71-mysql","xpaas":"1.4.8"}},{"metadata":{"name":"sso71-mysql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/sso71-mysql-persistent","uid":"1b8f17dd-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687417","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example SSO 7 application with a MySQL database. For more information about
        using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-sso","openshift.io/display-name":"Single
        Sign-On 7.1 + MySQL","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"sso,keycloak,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-single-sign-on/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Single Sign-On 7.1 server
        based deployment and deployment configuration for MySQL using persistence.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent SSO service (using MySQL) has been created in your project.
        The admin username/password for accessing the master realm via the SSO console
        is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The username/password for
        accessing the MySQL database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications; \"${SSO_TRUSTSTORE_SECRET}\" containing the ${SSO_TRUSTSTORE}
        file used for securing SSO requests.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-mysql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"ports":[{"port":3306,"targetPort":3306}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-mysql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"SSO_ADMIN_USERNAME","value":"${SSO_ADMIN_USERNAME}"},{"name":"SSO_ADMIN_PASSWORD","value":"${SSO_ADMIN_PASSWORD}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_SERVICE_USERNAME","value":"${SSO_SERVICE_USERNAME}"},{"name":"SSO_SERVICE_PASSWORD","value":"${SSO_SERVICE_PASSWORD}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"redhat-sso71-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-mysql"},"name":"${APPLICATION_NAME}-mysql"},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${DB_USERNAME}"},{"name":"MYSQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${DB_DATABASE}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"${MYSQL_LOWER_CASE_TABLE_NAMES}"},{"name":"MYSQL_MAX_CONNECTIONS","value":"${MYSQL_MAX_CONNECTIONS}"},{"name":"MYSQL_FT_MIN_WORD_LEN","value":"${MYSQL_FT_MIN_WORD_LEN}"},{"name":"MYSQL_FT_MAX_WORD_LEN","value":"${MYSQL_FT_MAX_WORD_LEN}"},{"name":"MYSQL_AIO","value":"${MYSQL_AIO}"}],"image":"mysql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"${APPLICATION_NAME}-mysql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-mysql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-mysql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-mysql"],"from":{"kind":"ImageStreamTag","name":"mysql:${MYSQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-mysql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"sso","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/mysql","value":"java:jboss/datasources/KeycloakDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"sso-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","displayName":"MySQL
        Lower Case Table Names","description":"Sets how the table names are stored
        and compared."},{"name":"MYSQL_MAX_CONNECTIONS","displayName":"MySQL Maximum
        number of connections","description":"The maximum permitted number of simultaneous
        client connections."},{"name":"MYSQL_FT_MIN_WORD_LEN","displayName":"MySQL
        FullText Minimum Word Length","description":"The minimum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_FT_MAX_WORD_LEN","displayName":"MySQL
        FullText Maximum Word Length","description":"The maximum length of the word
        to be included in a FULLTEXT index."},{"name":"MYSQL_AIO","displayName":"MySQL
        AIO","description":"Controls the innodb_use_native_aio setting value if the
        native AIO is broken."},{"name":"DB_USERNAME","displayName":"Database Username","description":"Database
        user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"sso-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"SSO_ADMIN_USERNAME","displayName":"SSO
        Admin Username","description":"SSO Server admin username","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ADMIN_PASSWORD","displayName":"SSO
        Admin Password","description":"SSO Server admin  password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"Realm to be created in the SSO server (e.g. demo)."},{"name":"SSO_SERVICE_USERNAME","displayName":"SSO
        Service Username","description":"The username used to access the SSO service.  This
        is used by clients to create the appliction client(s) within the specified
        SSO realm."},{"name":"SSO_SERVICE_PASSWORD","displayName":"SSO Service Password","description":"The
        password for the SSO service user."},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"sso-app-secret"},{"name":"MYSQL_IMAGE_STREAM_TAG","displayName":"MySQL
        Image Stream Tag","description":"The tag to use for the \"mysql\" image stream.  Typically,
        this aligns with the major.minor version of MySQL.","value":"5.7","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"sso71-mysql-persistent","xpaas":"1.4.8"}},{"metadata":{"name":"sso71-postgresql","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/sso71-postgresql","uid":"1b9304c4-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687418","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example SSO 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-sso","openshift.io/display-name":"Single
        Sign-On 7.1 + PostgreSQL (Ephemeral)","openshift.io/provider-display-name":"Red
        Hat, Inc.","tags":"sso,keycloak,jboss,hidden","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-single-sign-on/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Single Sign-On 7.1 server
        based deployment and deployment configuration for PostgreSQL using ephemeral
        (temporary) storage.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new SSO service (using PostgreSQL) has been created in your project. The admin
        username/password for accessing the master realm via the SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}.
        The username/password for accessing the PostgreSQL database \"${DB_DATABASE}\"
        is ${DB_USERNAME}/${DB_PASSWORD}. Please be sure to create the following secrets:
        \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving
        secure content; \"${JGROUPS_ENCRYPT_SECRET}\" containing the ${JGROUPS_ENCRYPT_KEYSTORE}
        file used for securing JGroups communications; \"${SSO_TRUSTSTORE_SECRET}\"
        containing the ${SSO_TRUSTSTORE} file used for securing SSO requests.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}","component":"database"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"server"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"server","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"SSO_ADMIN_USERNAME","value":"${SSO_ADMIN_USERNAME}"},{"name":"SSO_ADMIN_PASSWORD","value":"${SSO_ADMIN_PASSWORD}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_SERVICE_USERNAME","value":"${SSO_SERVICE_USERNAME}"},{"name":"SSO_SERVICE_PASSWORD","value":"${SSO_SERVICE_PASSWORD}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"redhat-sso71-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"database"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","component":"database","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-data"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"emptyDir":{"medium":""},"name":"${APPLICATION_NAME}-data"}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"sso","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/KeycloakDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"sso-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"sso-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"SSO_ADMIN_USERNAME","displayName":"SSO
        Admin Username","description":"SSO Server admin username","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ADMIN_PASSWORD","displayName":"SSO
        Admin Password","description":"SSO Server admin  password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"Realm to be created in the SSO server (e.g. demo)."},{"name":"SSO_SERVICE_USERNAME","displayName":"SSO
        Service Username","description":"The username used to access the SSO service.  This
        is used by clients to create the appliction client(s) within the specified
        SSO realm."},{"name":"SSO_SERVICE_PASSWORD","displayName":"SSO Service Password","description":"The
        password for the SSO service user."},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"sso-app-secret"},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"sso71-postgresql","xpaas":"1.4.8"}},{"metadata":{"name":"sso71-postgresql-persistent","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/sso71-postgresql-persistent","uid":"1b9189ec-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687419","creationTimestamp":"2018-02-08T20:46:16Z","annotations":{"description":"An
        example SSO 7 application with a PostgreSQL database. For more information
        about using this template, see https://github.com/jboss-openshift/application-templates.","iconClass":"icon-sso","openshift.io/display-name":"Single
        Sign-On 7.1 + PostgreSQL","openshift.io/provider-display-name":"Red Hat, Inc.","tags":"sso,keycloak,jboss","template.openshift.io/documentation-url":"https://access.redhat.com/documentation/en/red-hat-single-sign-on/","template.openshift.io/long-description":"This
        template defines resources needed to develop Red Hat Single Sign-On 7.1 server
        based deployment and deployment configuration for PostgreSQL using persistence.","template.openshift.io/support-url":"https://access.redhat.com","version":"1.4.8"}},"message":"A
        new persistent SSO service (using PostgreSQL) has been created in your project.
        The admin username/password for accessing the master realm via the SSO console
        is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The username/password for
        accessing the PostgreSQL database \"${DB_DATABASE}\" is ${DB_USERNAME}/${DB_PASSWORD}.
        Please be sure to create the following secrets: \"${HTTPS_SECRET}\" containing
        the ${HTTPS_KEYSTORE} file used for serving secure content; \"${JGROUPS_ENCRYPT_SECRET}\"
        containing the ${JGROUPS_ENCRYPT_KEYSTORE} file used for securing JGroups
        communications; \"${SSO_TRUSTSTORE_SECRET}\" containing the ${SSO_TRUSTSTORE}
        file used for securing SSO requests.","objects":[{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s http port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"ports":[{"port":8080,"targetPort":8080}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        web server''s https port.","service.alpha.openshift.io/dependencies":"[{\"name\":
        \"${APPLICATION_NAME}-postgresql\", \"kind\": \"Service\"}]"},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"ports":[{"port":8443,"targetPort":8443}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        database server''s port."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"ports":[{"port":5432,"targetPort":5432}],"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"description":"The
        JGroups ping port for clustering.","service.alpha.kubernetes.io/tolerate-unready-endpoints":"true"},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-ping"},"spec":{"clusterIP":"None","ports":[{"name":"ping","port":8888}],"selector":{"deploymentConfig":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-http","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s http service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTP}","to":{"name":"${APPLICATION_NAME}"}}},{"apiVersion":"v1","id":"${APPLICATION_NAME}-https","kind":"Route","metadata":{"annotations":{"description":"Route
        for application''s https service."},"labels":{"application":"${APPLICATION_NAME}"},"name":"secure-${APPLICATION_NAME}"},"spec":{"host":"${HOSTNAME_HTTPS}","tls":{"termination":"passthrough"},"to":{"name":"secure-${APPLICATION_NAME}"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}"},"spec":{"containers":[{"env":[{"name":"DB_SERVICE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_JNDI","value":"${DB_JNDI}"},{"name":"DB_USERNAME","value":"${DB_USERNAME}"},{"name":"DB_PASSWORD","value":"${DB_PASSWORD}"},{"name":"DB_DATABASE","value":"${DB_DATABASE}"},{"name":"TX_DATABASE_PREFIX_MAPPING","value":"${APPLICATION_NAME}-postgresql=DB"},{"name":"DB_MIN_POOL_SIZE","value":"${DB_MIN_POOL_SIZE}"},{"name":"DB_MAX_POOL_SIZE","value":"${DB_MAX_POOL_SIZE}"},{"name":"DB_TX_ISOLATION","value":"${DB_TX_ISOLATION}"},{"name":"JGROUPS_PING_PROTOCOL","value":"openshift.DNS_PING"},{"name":"OPENSHIFT_DNS_PING_SERVICE_NAME","value":"${APPLICATION_NAME}-ping"},{"name":"OPENSHIFT_DNS_PING_SERVICE_PORT","value":"8888"},{"name":"HTTPS_KEYSTORE_DIR","value":"/etc/eap-secret-volume"},{"name":"HTTPS_KEYSTORE","value":"${HTTPS_KEYSTORE}"},{"name":"HTTPS_KEYSTORE_TYPE","value":"${HTTPS_KEYSTORE_TYPE}"},{"name":"HTTPS_NAME","value":"${HTTPS_NAME}"},{"name":"HTTPS_PASSWORD","value":"${HTTPS_PASSWORD}"},{"name":"JGROUPS_ENCRYPT_SECRET","value":"${JGROUPS_ENCRYPT_SECRET}"},{"name":"JGROUPS_ENCRYPT_KEYSTORE_DIR","value":"/etc/jgroups-encrypt-secret-volume"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","value":"${JGROUPS_ENCRYPT_KEYSTORE}"},{"name":"JGROUPS_ENCRYPT_NAME","value":"${JGROUPS_ENCRYPT_NAME}"},{"name":"JGROUPS_ENCRYPT_PASSWORD","value":"${JGROUPS_ENCRYPT_PASSWORD}"},{"name":"JGROUPS_CLUSTER_PASSWORD","value":"${JGROUPS_CLUSTER_PASSWORD}"},{"name":"SSO_ADMIN_USERNAME","value":"${SSO_ADMIN_USERNAME}"},{"name":"SSO_ADMIN_PASSWORD","value":"${SSO_ADMIN_PASSWORD}"},{"name":"SSO_REALM","value":"${SSO_REALM}"},{"name":"SSO_SERVICE_USERNAME","value":"${SSO_SERVICE_USERNAME}"},{"name":"SSO_SERVICE_PASSWORD","value":"${SSO_SERVICE_PASSWORD}"},{"name":"SSO_TRUSTSTORE","value":"${SSO_TRUSTSTORE}"},{"name":"SSO_TRUSTSTORE_DIR","value":"/etc/sso-secret-volume"},{"name":"SSO_TRUSTSTORE_PASSWORD","value":"${SSO_TRUSTSTORE_PASSWORD}"}],"image":"${APPLICATION_NAME}","imagePullPolicy":"Always","livenessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/livenessProbe.sh"]},"initialDelaySeconds":60},"name":"${APPLICATION_NAME}","ports":[{"containerPort":8778,"name":"jolokia","protocol":"TCP"},{"containerPort":8080,"name":"http","protocol":"TCP"},{"containerPort":8443,"name":"https","protocol":"TCP"},{"containerPort":8888,"name":"ping","protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/bash","-c","/opt/eap/bin/readinessProbe.sh"]}},"resources":{"limits":{"memory":"${MEMORY_LIMIT}"}},"volumeMounts":[{"mountPath":"/etc/eap-secret-volume","name":"eap-keystore-volume","readOnly":true},{"mountPath":"/etc/jgroups-encrypt-secret-volume","name":"eap-jgroups-keystore-volume","readOnly":true},{"mountPath":"/etc/sso-secret-volume","name":"sso-truststore-volume","readOnly":true}]}],"terminationGracePeriodSeconds":75,"volumes":[{"name":"eap-keystore-volume","secret":{"secretName":"${HTTPS_SECRET}"}},{"name":"eap-jgroups-keystore-volume","secret":{"secretName":"${JGROUPS_ENCRYPT_SECRET}"}},{"name":"sso-truststore-volume","secret":{"secretName":"${SSO_TRUSTSTORE_SECRET}"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}"],"from":{"kind":"ImageStreamTag","name":"redhat-sso71-openshift:1.3","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"replicas":1,"selector":{"deploymentConfig":"${APPLICATION_NAME}-postgresql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"application":"${APPLICATION_NAME}","deploymentConfig":"${APPLICATION_NAME}-postgresql"},"name":"${APPLICATION_NAME}-postgresql"},"spec":{"containers":[{"env":[{"name":"POSTGRESQL_USER","value":"${DB_USERNAME}"},{"name":"POSTGRESQL_PASSWORD","value":"${DB_PASSWORD}"},{"name":"POSTGRESQL_DATABASE","value":"${DB_DATABASE}"},{"name":"POSTGRESQL_MAX_CONNECTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_MAX_PREPARED_TRANSACTIONS","value":"${POSTGRESQL_MAX_CONNECTIONS}"},{"name":"POSTGRESQL_SHARED_BUFFERS","value":"${POSTGRESQL_SHARED_BUFFERS}"}],"image":"postgresql","imagePullPolicy":"Always","name":"${APPLICATION_NAME}-postgresql","ports":[{"containerPort":5432,"protocol":"TCP"}],"volumeMounts":[{"mountPath":"/var/lib/pgsql/data","name":"${APPLICATION_NAME}-postgresql-pvol"}]}],"terminationGracePeriodSeconds":60,"volumes":[{"name":"${APPLICATION_NAME}-postgresql-pvol","persistentVolumeClaim":{"claimName":"${APPLICATION_NAME}-postgresql-claim"}}]}},"triggers":[{"imageChangeParams":{"automatic":true,"containerNames":["${APPLICATION_NAME}-postgresql"],"from":{"kind":"ImageStreamTag","name":"postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}","namespace":"${IMAGE_STREAM_NAMESPACE}"}},"type":"ImageChange"},{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"labels":{"application":"${APPLICATION_NAME}"},"name":"${APPLICATION_NAME}-postgresql-claim"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"${VOLUME_CAPACITY}"}}}}],"parameters":[{"name":"APPLICATION_NAME","displayName":"Application
        Name","description":"The name for the application.","value":"sso","required":true},{"name":"HOSTNAME_HTTP","displayName":"Custom
        http Route Hostname","description":"Custom hostname for http service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"HOSTNAME_HTTPS","displayName":"Custom
        https Route Hostname","description":"Custom hostname for https service route.  Leave
        blank for default hostname, e.g.: \u003capplication-name\u003e.\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"},{"name":"DB_JNDI","displayName":"Database
        JNDI Name","description":"Database JNDI name used by application to resolve
        the datasource, e.g. java:/jboss/datasources/postgresql","value":"java:jboss/datasources/KeycloakDS"},{"name":"DB_DATABASE","displayName":"Database
        Name","description":"Database name","value":"root","required":true},{"name":"HTTPS_SECRET","displayName":"Server
        Keystore Secret Name","description":"The name of the secret containing the
        keystore file","value":"sso-app-secret"},{"name":"HTTPS_KEYSTORE","displayName":"Server
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"keystore.jks"},{"name":"HTTPS_KEYSTORE_TYPE","displayName":"Server
        Keystore Type","description":"The type of the keystore file (JKS or JCEKS)"},{"name":"HTTPS_NAME","displayName":"Server
        Certificate Name","description":"The name associated with the server certificate
        (e.g. jboss)"},{"name":"HTTPS_PASSWORD","displayName":"Server Keystore Password","description":"The
        password for the keystore and certificate (e.g. mykeystorepass)"},{"name":"DB_MIN_POOL_SIZE","displayName":"Datasource
        Minimum Pool Size","description":"Sets xa-pool/min-pool-size for the configured
        datasource."},{"name":"DB_MAX_POOL_SIZE","displayName":"Datasource Maximum
        Pool Size","description":"Sets xa-pool/max-pool-size for the configured datasource."},{"name":"DB_TX_ISOLATION","displayName":"Datasource
        Transaction Isolation","description":"Sets transaction-isolation for the configured
        datasource."},{"name":"POSTGRESQL_MAX_CONNECTIONS","displayName":"PostgreSQL
        Maximum number of connections","description":"The maximum number of client
        connections allowed. This also sets the maximum number of prepared transactions."},{"name":"POSTGRESQL_SHARED_BUFFERS","displayName":"PostgreSQL
        Shared Buffers","description":"Configures how much memory is dedicated to
        PostgreSQL for caching data."},{"name":"DB_USERNAME","displayName":"Database
        Username","description":"Database user name","generate":"expression","from":"user[a-zA-Z0-9]{3}","required":true},{"name":"DB_PASSWORD","displayName":"Database
        Password","description":"Database user password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"VOLUME_CAPACITY","displayName":"Database
        Volume Capacity","description":"Size of persistent storage for database volume.","value":"1Gi","required":true},{"name":"JGROUPS_ENCRYPT_SECRET","displayName":"JGroups
        Secret Name","description":"The name of the secret containing the keystore
        file","value":"sso-app-secret"},{"name":"JGROUPS_ENCRYPT_KEYSTORE","displayName":"JGroups
        Keystore Filename","description":"The name of the keystore file within the
        secret","value":"jgroups.jceks"},{"name":"JGROUPS_ENCRYPT_NAME","displayName":"JGroups
        Certificate Name","description":"The name associated with the server certificate
        (e.g. secret-key)"},{"name":"JGROUPS_ENCRYPT_PASSWORD","displayName":"JGroups
        Keystore Password","description":"The password for the keystore and certificate
        (e.g. password)"},{"name":"JGROUPS_CLUSTER_PASSWORD","displayName":"JGroups
        Cluster Password","description":"JGroups cluster password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"IMAGE_STREAM_NAMESPACE","displayName":"ImageStream
        Namespace","description":"Namespace in which the ImageStreams for Red Hat
        Middleware images are installed. These ImageStreams are normally installed
        in the openshift namespace. You should only need to modify this if you''ve
        installed the ImageStreams in a different namespace/project.","value":"openshift","required":true},{"name":"SSO_ADMIN_USERNAME","displayName":"SSO
        Admin Username","description":"SSO Server admin username","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_ADMIN_PASSWORD","displayName":"SSO
        Admin Password","description":"SSO Server admin  password","generate":"expression","from":"[a-zA-Z0-9]{8}","required":true},{"name":"SSO_REALM","displayName":"SSO
        Realm","description":"Realm to be created in the SSO server (e.g. demo)."},{"name":"SSO_SERVICE_USERNAME","displayName":"SSO
        Service Username","description":"The username used to access the SSO service.  This
        is used by clients to create the appliction client(s) within the specified
        SSO realm."},{"name":"SSO_SERVICE_PASSWORD","displayName":"SSO Service Password","description":"The
        password for the SSO service user."},{"name":"SSO_TRUSTSTORE","displayName":"SSO
        Trust Store","description":"The name of the truststore file within the secret
        (e.g. truststore.jks)"},{"name":"SSO_TRUSTSTORE_PASSWORD","displayName":"SSO
        Trust Store Password","description":"The password for the truststore and certificate
        (e.g. mykeystorepass)"},{"name":"SSO_TRUSTSTORE_SECRET","displayName":"SSO
        Trust Store Secret","description":"The name of the secret containing the truststore
        file (e.g. truststore-secret). Used for volume secretName","value":"sso-app-secret"},{"name":"POSTGRESQL_IMAGE_STREAM_TAG","displayName":"PostgreSQL
        Image Stream Tag","description":"The tag to use for the \"postgresql\" image
        stream.  Typically, this aligns with the major.minor version of PostgreSQL.","value":"9.5","required":true},{"name":"MEMORY_LIMIT","description":"Container
        memory limit","value":"1Gi"}],"labels":{"template":"sso71-postgresql-persistent","xpaas":"1.4.8"}},{"metadata":{"name":"system","namespace":"openshift","selfLink":"/oapi/v1/namespaces/openshift/templates/system","uid":"1995db38-0d11-11e8-906a-d094660d31fb","resourceVersion":"1687420","creationTimestamp":"2018-02-08T20:46:12Z"},"message":"Login
        on https://${TENANT_NAME}-admin.${WILDCARD_DOMAIN} as ${ADMIN_USERNAME}/${ADMIN_PASSWORD}","objects":[{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"system-storage"},"spec":{"accessModes":["ReadWriteMany"],"resources":{"requests":{"storage":"100Mi"}}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"mysql-storage"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"system-redis-storage"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}},{"apiVersion":"v1","kind":"PersistentVolumeClaim","metadata":{"name":"backend-redis-storage"},"spec":{"accessModes":["ReadWriteOnce"],"resources":{"requests":{"storage":"1Gi"}}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"backend-cron"},"spec":{"replicas":1,"selector":{"name":"backend-cron"},"strategy":{"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","timeoutSeconds":600,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"name":"backend-cron"}},"spec":{"containers":[{"args":["backend-cron"],"env":[{"name":"CONFIG_REDIS_PROXY","value":"backend-redis:6379"},{"name":"CONFIG_QUEUES_MASTER_NAME","value":"backend-redis:6379/1"},{"name":"RACK_ENV","value":"production"}],"image":"3scale-amp20/backend:1.0-2","imagePullPolicy":"IfNotPresent","name":"backend-cron"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"backend-redis"},"spec":{"replicas":1,"selector":{"name":"backend-redis"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"backend-redis"}},"spec":{"containers":[{"image":"${REDIS_IMAGE}","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":10,"periodSeconds":10,"tcpSocket":{"port":6379}},"name":"backend-redis","readinessProbe":{"exec":{"command":["container-entrypoint","bash","-c","redis-cli
        set liveness-probe \"`date`\" | grep OK"]},"initialDelaySeconds":10,"periodSeconds":30,"timeoutSeconds":1},"volumeMounts":[{"mountPath":"/var/lib/redis/data","name":"backend-redis-storage"},{"mountPath":"/etc/redis.conf","name":"redis-config","subPath":"redis.conf"}]}],"volumes":[{"name":"backend-redis-storage","persistentVolumeClaim":{"claimName":"backend-redis-storage"}},{"configMap":{"items":[{"key":"redis.conf","path":"redis.conf"}],"name":"redis-config"},"name":"redis-config"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"backend-listener"},"spec":{"replicas":1,"selector":{"name":"backend-listener"},"strategy":{"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","timeoutSeconds":600,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"name":"backend-listener"}},"spec":{"containers":[{"args":["3scale_backend","start","-e","production","-p","3000","-x","/dev/stdout"],"env":[{"name":"CONFIG_REDIS_PROXY","value":"backend-redis:6379"},{"name":"CONFIG_QUEUES_MASTER_NAME","value":"backend-redis:6379/1"},{"name":"RACK_ENV","value":"production"},{"name":"CONFIG_INTERNAL_API_USER","value":"${SYSTEM_BACKEND_USERNAME}"},{"name":"CONFIG_INTERNAL_API_PASSWORD","value":"${SYSTEM_BACKEND_PASSWORD}"}],"image":"3scale-amp20/backend:1.0-2","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":30,"periodSeconds":10,"tcpSocket":{"port":3000}},"name":"backend-listener","ports":[{"containerPort":3000,"protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/status","port":3000},"initialDelaySeconds":30,"timeoutSeconds":5}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"backend-redis"},"spec":{"ports":[{"port":6379,"protocol":"TCP","targetPort":6379}],"selector":{"name":"backend-redis"}}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"backend-listener"},"spec":{"ports":[{"name":"http","port":3000,"protocol":"TCP","targetPort":3000}],"selector":{"name":"backend-listener"}}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"system-provider"},"spec":{"ports":[{"name":"http","port":3000,"protocol":"TCP","targetPort":"provider"}],"selector":{"name":"system-app"}}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"system-developer"},"spec":{"ports":[{"name":"http","port":3000,"protocol":"TCP","targetPort":"developer"}],"selector":{"name":"system-app"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"backend-worker"},"spec":{"replicas":1,"selector":{"name":"backend-worker"},"strategy":{"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","timeoutSeconds":600,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"name":"backend-worker"}},"spec":{"containers":[{"args":["3scale_backend_worker","run"],"env":[{"name":"CONFIG_REDIS_PROXY","value":"backend-redis:6379"},{"name":"CONFIG_QUEUES_MASTER_NAME","value":"backend-redis:6379/1"},{"name":"RACK_ENV","value":"production"},{"name":"CONFIG_EVENTS_HOOK","value":"http://system-provider:3000/master/events/import"},{"name":"CONFIG_EVENTS_HOOK_SHARED_SECRET","value":"${SYSTEM_BACKEND_SHARED_SECRET}"}],"image":"3scale-amp20/backend:1.0-2","imagePullPolicy":"IfNotPresent","name":"backend-worker"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"system-mysql"},"spec":{"ports":[{"name":"system-mysql","nodePort":0,"port":3306,"protocol":"TCP","targetPort":3306}],"selector":{"name":"system-mysql"}}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"system-redis"},"spec":{"ports":[{"name":"redis","port":6379,"protocol":"TCP","targetPort":6379}],"selector":{"name":"system-redis"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"system-redis"},"spec":{"replicas":1,"selector":{"name":"system-redis"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"system-redis"}},"spec":{"containers":[{"args":null,"image":"${REDIS_IMAGE}","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":10,"periodSeconds":5,"tcpSocket":{"port":6379}},"name":"system-redis","readinessProbe":{"exec":{"command":["container-entrypoint","bash","-c","redis-cli
        set liveness-probe \"`date`\" | grep OK"]},"initialDelaySeconds":30,"periodSeconds":10,"timeoutSeconds":5},"terminationMessagePath":"/dev/termination-log","volumeMounts":[{"mountPath":"/var/lib/redis/data","name":"system-redis-storage"},{"mountPath":"/etc/redis.conf","name":"redis-config","subPath":"redis.conf"}]}],"volumes":[{"name":"system-redis-storage","persistentVolumeClaim":{"claimName":"system-redis-storage"}},{"configMap":{"items":[{"key":"redis.conf","path":"redis.conf"}],"name":"redis-config"},"name":"redis-config"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"system-sphinx"},"spec":{"ports":[{"name":"sphinx","port":9306,"protocol":"TCP","targetPort":9306}],"selector":{"name":"system-sphinx"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"system-sphinx"},"spec":{"replicas":1,"selector":{"name":"system-sphinx"},"strategy":{"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","timeoutSeconds":600,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"name":"system-sphinx"}},"spec":{"containers":[{"args":["rake","openshift:thinking_sphinx:start"],"env":[{"name":"RAILS_ENV","value":"production"},{"name":"DATABASE_URL","value":"mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"},{"name":"THINKING_SPHINX_ADDRESS","value":"0.0.0.0"},{"name":"THINKING_SPHINX_CONFIGURATION_FILE","value":"db/sphinx/production.conf"},{"name":"THINKING_SPHINX_PID_FILE","value":"db/sphinx/searchd.pid"},{"name":"DELTA_INDEX_INTERVAL","value":"5"},{"name":"FULL_REINDEX_INTERVAL","value":"60"}],"image":"3scale-amp20/system:1.0-2","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":60,"periodSeconds":10,"tcpSocket":{"port":9306}},"name":"system-sphinx","volumeMounts":[{"mountPath":"/opt/system/db/sphinx","name":"system-sphinx-database"}]}],"volumes":[{"emptyDir":{},"name":"system-sphinx-database"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"system-memcache"},"spec":{"ports":[{"name":"memcache","port":11211,"protocol":"TCP","targetPort":11211}],"selector":{"name":"system-memcache"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"system-memcache"},"spec":{"replicas":1,"selector":{"name":"system-memcache"},"strategy":{"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","timeoutSeconds":600,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"name":"system-memcache"}},"spec":{"containers":[{"args":null,"command":["memcached","-m","64"],"env":null,"image":"3scale-amp20/memcached:1.4.15-7","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":10,"periodSeconds":10,"tcpSocket":{"port":11211}},"name":"memcache","readinessProbe":{"exec":{"command":["sh","-c","echo
        version | nc $HOSTNAME 11211 | grep VERSION"]},"initialDelaySeconds":10,"periodSeconds":30,"timeoutSeconds":5}}],"ports":[{"containerPort":6379,"protocol":"TCP"}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"app":"system-route"},"name":"system-provider-admin-route"},"spec":{"host":"${TENANT_NAME}-admin.${WILDCARD_DOMAIN}","port":{"targetPort":"http"},"tls":{"insecureEdgeTerminationPolicy":"Allow","termination":"edge"},"to":{"kind":"Service","name":"system-provider"}}},{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"app":"system-route"},"name":"backend-route"},"spec":{"host":"backend-${TENANT_NAME}.${WILDCARD_DOMAIN}","port":{"targetPort":"http"},"tls":{"insecureEdgeTerminationPolicy":"Allow","termination":"edge"},"to":{"kind":"Service","name":"backend-listener"}}},{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"app":"system-route"},"name":"system-developer-route"},"spec":{"host":"${TENANT_NAME}.${WILDCARD_DOMAIN}","port":{"targetPort":"http"},"tls":{"insecureEdgeTerminationPolicy":"Allow","termination":"edge"},"to":{"kind":"Service","name":"system-developer"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"apicast-staging"},"spec":{"replicas":1,"selector":{"deploymentconfig":"apicast-staging"},"strategy":{"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","timeoutSeconds":1800,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"deploymentconfig":"apicast-staging"}},"spec":{"containers":[{"env":[{"name":"THREESCALE_PORTAL_ENDPOINT","value":"http://${APICAST_ACCESS_TOKEN}@system-provider:3000"},{"name":"APICAST_CONFIGURATION_LOADER","value":"lazy"},{"name":"APICAST_CONFIGURATION_CACHE","value":"0"},{"name":"THREESCALE_DEPLOYMENT_ENV","value":"sandbox"},{"name":"APICAST_MANAGEMENT_API","value":"${APICAST_MANAGEMENT_API}"},{"name":"BACKEND_ENDPOINT_OVERRIDE","value":"http://backend-listener:3000"},{"name":"OPENSSL_VERIFY","value":"${APICAST_OPENSSL_VERIFY}"},{"name":"APICAST_RESPONSE_CODES","value":"${APICAST_RESPONSE_CODES}"},{"name":"REDIS_URL","value":"redis://system-redis:6379/2"}],"image":"3scale-amp20/apicast-gateway:1.0-3","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/status/live","port":8090},"initialDelaySeconds":10,"periodSeconds":10,"timeoutSeconds":5},"name":"apicast-staging","ports":[{"containerPort":8080,"protocol":"TCP"},{"containerPort":8090,"protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/status/ready","port":8090},"initialDelaySeconds":15,"periodSeconds":30,"timeoutSeconds":5}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"apicast-staging"},"spec":{"ports":[{"name":"gateway","port":8080,"protocol":"TCP","targetPort":8080},{"name":"management","port":8090,"protocol":"TCP","targetPort":8090}],"selector":{"deploymentconfig":"apicast-staging"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"apicast-production"},"spec":{"replicas":1,"selector":{"deploymentconfig":"apicast-production"},"strategy":{"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","timeoutSeconds":1800,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"deploymentconfig":"apicast-production"}},"spec":{"containers":[{"env":[{"name":"THREESCALE_PORTAL_ENDPOINT","value":"http://${APICAST_ACCESS_TOKEN}@system-provider:3000"},{"name":"APICAST_CONFIGURATION_LOADER","value":"boot"},{"name":"APICAST_CONFIGURATION_CACHE","value":"300"},{"name":"THREESCALE_DEPLOYMENT_ENV","value":"production"},{"name":"APICAST_MANAGEMENT_API","value":"${APICAST_MANAGEMENT_API}"},{"name":"BACKEND_ENDPOINT_OVERRIDE","value":"http://backend-listener:3000"},{"name":"OPENSSL_VERIFY","value":"${APICAST_OPENSSL_VERIFY}"},{"name":"APICAST_RESPONSE_CODES","value":"${APICAST_RESPONSE_CODES}"},{"name":"REDIS_URL","value":"redis://system-redis:6379/1"}],"image":"3scale-amp20/apicast-gateway:1.0-3","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/status/live","port":8090},"initialDelaySeconds":10,"periodSeconds":10,"timeoutSeconds":5},"name":"apicast-production","ports":[{"containerPort":8080,"protocol":"TCP"},{"containerPort":8090,"protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/status/ready","port":8090},"initialDelaySeconds":15,"periodSeconds":30,"timeoutSeconds":5}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"Service","metadata":{"name":"apicast-production"},"spec":{"ports":[{"name":"gateway","port":8080,"protocol":"TCP","targetPort":8080},{"name":"management","port":8090,"protocol":"TCP","targetPort":8090}],"selector":{"deploymentconfig":"apicast-production"}}},{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"app":"apicast-staging"},"name":"api-apicast-staging-route"},"spec":{"host":"api-${TENANT_NAME}-apicast-staging.${WILDCARD_DOMAIN}","port":{"targetPort":"gateway"},"tls":{"insecureEdgeTerminationPolicy":"Allow","termination":"edge"},"to":{"kind":"Service","name":"apicast-staging"}}},{"apiVersion":"v1","kind":"Route","metadata":{"labels":{"app":"apicast-production"},"name":"api-apicast-production-route"},"spec":{"host":"api-${TENANT_NAME}-apicast-production.${WILDCARD_DOMAIN}","port":{"targetPort":"gateway"},"tls":{"insecureEdgeTerminationPolicy":"Allow","termination":"edge"},"to":{"kind":"Service","name":"apicast-production"}}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"system-app"},"spec":{"replicas":1,"selector":{"name":"system-app"},"strategy":{"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","post":{"execNewPod":{"command":["bash","-c","bundle
        exec rake boot openshift:post_deploy"],"containerName":"system-provider"},"failurePolicy":"Abort"},"pre":{"execNewPod":{"command":["bash","-c","bundle
        exec rake boot openshift:deploy"],"containerName":"system-provider","env":[{"name":"RAILS_ENV","value":"production"},{"name":"DATABASE_URL","value":"mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"},{"name":"FORCE_SSL","value":"true"},{"name":"THREESCALE_SUPERDOMAIN","value":"${WILDCARD_DOMAIN}"},{"name":"TENANT_NAME","value":"${TENANT_NAME}"},{"name":"APICAST_ACCESS_TOKEN","value":"${APICAST_ACCESS_TOKEN}"},{"name":"ADMIN_ACCESS_TOKEN","value":"${ADMIN_ACCESS_TOKEN}"},{"name":"PROVIDER_PLAN","value":"enterprise"},{"name":"USER_LOGIN","value":"${ADMIN_USERNAME}"},{"name":"USER_PASSWORD","value":"${ADMIN_PASSWORD}"},{"name":"RAILS_LOG_TO_STDOUT","value":"true"},{"name":"RAILS_LOG_LEVEL","value":"info"},{"name":"THINKING_SPHINX_ADDRESS","value":"system-sphinx"},{"name":"THINKING_SPHINX_PORT","value":"9306"},{"name":"THINKING_SPHINX_CONFIGURATION_FILE","value":"/tmp/sphinx.conf"},{"name":"EVENTS_SHARED_SECRET","value":"${SYSTEM_BACKEND_SHARED_SECRET}"},{"name":"THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE","value":"VERIFY_NONE"},{"name":"APICAST_BACKEND_ROOT_ENDPOINT","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"},{"name":"CONFIG_INTERNAL_API_USER","value":"${SYSTEM_BACKEND_USERNAME}"},{"name":"CONFIG_INTERNAL_API_PASSWORD","value":"${SYSTEM_BACKEND_PASSWORD}"},{"name":"SECRET_KEY_BASE","value":"${SYSTEM_APP_SECRET_KEY_BASE}"},{"name":"AMP_RELEASE","value":"${AMP_RELEASE}"},{"name":"SMTP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"address","name":"smtp"}}},{"name":"SMTP_USER_NAME","valueFrom":{"configMapKeyRef":{"key":"username","name":"smtp"}}},{"name":"SMTP_PASSWORD","valueFrom":{"configMapKeyRef":{"key":"password","name":"smtp"}}},{"name":"SMTP_DOMAIN","valueFrom":{"configMapKeyRef":{"key":"domain","name":"smtp"}}},{"name":"SMTP_PORT","valueFrom":{"configMapKeyRef":{"key":"port","name":"smtp"}}},{"name":"SMTP_AUTHENTICATION","valueFrom":{"configMapKeyRef":{"key":"authentication","name":"smtp"}}},{"name":"SMTP_OPENSSL_VERIFY_MODE","valueFrom":{"configMapKeyRef":{"key":"openssl.verify.mode","name":"smtp"}}},{"name":"BACKEND_ROUTE","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"}],"volumes":["system-storage"]},"failurePolicy":"Retry"},"timeoutSeconds":600,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"name":"system-app"}},"spec":{"containers":[{"args":null,"command":["env","TENANT_MODE=provider","PORT=3000","container-entrypoint","bundle","exec","unicorn","-c","config/unicorn.rb"],"env":[{"name":"RAILS_ENV","value":"production"},{"name":"DATABASE_URL","value":"mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"},{"name":"FORCE_SSL","value":"true"},{"name":"THREESCALE_SUPERDOMAIN","value":"${WILDCARD_DOMAIN}"},{"name":"TENANT_NAME","value":"${TENANT_NAME}"},{"name":"APICAST_ACCESS_TOKEN","value":"${APICAST_ACCESS_TOKEN}"},{"name":"ADMIN_ACCESS_TOKEN","value":"${ADMIN_ACCESS_TOKEN}"},{"name":"PROVIDER_PLAN","value":"enterprise"},{"name":"USER_LOGIN","value":"${ADMIN_USERNAME}"},{"name":"USER_PASSWORD","value":"${ADMIN_PASSWORD}"},{"name":"RAILS_LOG_TO_STDOUT","value":"true"},{"name":"RAILS_LOG_LEVEL","value":"info"},{"name":"THINKING_SPHINX_ADDRESS","value":"system-sphinx"},{"name":"THINKING_SPHINX_PORT","value":"9306"},{"name":"THINKING_SPHINX_CONFIGURATION_FILE","value":"/tmp/sphinx.conf"},{"name":"EVENTS_SHARED_SECRET","value":"${SYSTEM_BACKEND_SHARED_SECRET}"},{"name":"THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE","value":"VERIFY_NONE"},{"name":"APICAST_BACKEND_ROOT_ENDPOINT","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"},{"name":"CONFIG_INTERNAL_API_USER","value":"${SYSTEM_BACKEND_USERNAME}"},{"name":"CONFIG_INTERNAL_API_PASSWORD","value":"${SYSTEM_BACKEND_PASSWORD}"},{"name":"SECRET_KEY_BASE","value":"${SYSTEM_APP_SECRET_KEY_BASE}"},{"name":"AMP_RELEASE","value":"${AMP_RELEASE}"},{"name":"SMTP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"address","name":"smtp"}}},{"name":"SMTP_USER_NAME","valueFrom":{"configMapKeyRef":{"key":"username","name":"smtp"}}},{"name":"SMTP_PASSWORD","valueFrom":{"configMapKeyRef":{"key":"password","name":"smtp"}}},{"name":"SMTP_DOMAIN","valueFrom":{"configMapKeyRef":{"key":"domain","name":"smtp"}}},{"name":"SMTP_PORT","valueFrom":{"configMapKeyRef":{"key":"port","name":"smtp"}}},{"name":"SMTP_AUTHENTICATION","valueFrom":{"configMapKeyRef":{"key":"authentication","name":"smtp"}}},{"name":"SMTP_OPENSSL_VERIFY_MODE","valueFrom":{"configMapKeyRef":{"key":"openssl.verify.mode","name":"smtp"}}},{"name":"BACKEND_ROUTE","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"}],"image":"3scale-amp20/system:1.0-2","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":20,"periodSeconds":10,"tcpSocket":{"port":"provider"},"timeoutSeconds":10},"name":"system-provider","ports":[{"containerPort":3000,"name":"provider","protocol":"TCP"}],"readinessProbe":{"httpGet":{"httpHeaders":[{"name":"X-Forwarded-Proto","value":"https"}],"path":"/check.txt","port":"provider","scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":10},"volumeMounts":[{"mountPath":"/opt/system/public/system","name":"system-storage"}]},{"args":null,"command":["env","TENANT_MODE=developer","PORT=3001","container-entrypoint","bundle","exec","unicorn","-c","config/unicorn.rb"],"env":[{"name":"RAILS_ENV","value":"production"},{"name":"DATABASE_URL","value":"mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"},{"name":"FORCE_SSL","value":"true"},{"name":"THREESCALE_SUPERDOMAIN","value":"${WILDCARD_DOMAIN}"},{"name":"TENANT_NAME","value":"${TENANT_NAME}"},{"name":"APICAST_ACCESS_TOKEN","value":"${APICAST_ACCESS_TOKEN}"},{"name":"ADMIN_ACCESS_TOKEN","value":"${ADMIN_ACCESS_TOKEN}"},{"name":"PROVIDER_PLAN","value":"enterprise"},{"name":"USER_LOGIN","value":"${ADMIN_USERNAME}"},{"name":"USER_PASSWORD","value":"${ADMIN_PASSWORD}"},{"name":"RAILS_LOG_TO_STDOUT","value":"true"},{"name":"RAILS_LOG_LEVEL","value":"info"},{"name":"THINKING_SPHINX_ADDRESS","value":"system-sphinx"},{"name":"THINKING_SPHINX_PORT","value":"9306"},{"name":"THINKING_SPHINX_CONFIGURATION_FILE","value":"/tmp/sphinx.conf"},{"name":"EVENTS_SHARED_SECRET","value":"${SYSTEM_BACKEND_SHARED_SECRET}"},{"name":"THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE","value":"VERIFY_NONE"},{"name":"APICAST_BACKEND_ROOT_ENDPOINT","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"},{"name":"CONFIG_INTERNAL_API_USER","value":"${SYSTEM_BACKEND_USERNAME}"},{"name":"CONFIG_INTERNAL_API_PASSWORD","value":"${SYSTEM_BACKEND_PASSWORD}"},{"name":"SECRET_KEY_BASE","value":"${SYSTEM_APP_SECRET_KEY_BASE}"},{"name":"AMP_RELEASE","value":"${AMP_RELEASE}"},{"name":"SMTP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"address","name":"smtp"}}},{"name":"SMTP_USER_NAME","valueFrom":{"configMapKeyRef":{"key":"username","name":"smtp"}}},{"name":"SMTP_PASSWORD","valueFrom":{"configMapKeyRef":{"key":"password","name":"smtp"}}},{"name":"SMTP_DOMAIN","valueFrom":{"configMapKeyRef":{"key":"domain","name":"smtp"}}},{"name":"SMTP_PORT","valueFrom":{"configMapKeyRef":{"key":"port","name":"smtp"}}},{"name":"SMTP_AUTHENTICATION","valueFrom":{"configMapKeyRef":{"key":"authentication","name":"smtp"}}},{"name":"SMTP_OPENSSL_VERIFY_MODE","valueFrom":{"configMapKeyRef":{"key":"openssl.verify.mode","name":"smtp"}}},{"name":"BACKEND_ROUTE","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"}],"image":"3scale-amp20/system:1.0-2","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":20,"periodSeconds":10,"tcpSocket":{"port":"developer"},"timeoutSeconds":10},"name":"system-developer","ports":[{"containerPort":3001,"name":"developer","protocol":"TCP"}],"readinessProbe":{"httpGet":{"httpHeaders":[{"name":"X-Forwarded-Proto","value":"https"}],"path":"/check.txt","port":"developer","scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":10},"volumeMounts":[{"mountPath":"/opt/system/public/system","name":"system-storage","readOnly":true}]}],"volumes":[{"name":"system-storage","persistentVolumeClaim":{"claimName":"system-storage"}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"system-resque"},"spec":{"replicas":1,"selector":{"name":"system-resque"},"strategy":{"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","timeoutSeconds":600,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"name":"system-resque"}},"spec":{"containers":[{"args":["rake","resque:work","QUEUE=*"],"env":[{"name":"RAILS_ENV","value":"production"},{"name":"DATABASE_URL","value":"mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"},{"name":"FORCE_SSL","value":"true"},{"name":"THREESCALE_SUPERDOMAIN","value":"${WILDCARD_DOMAIN}"},{"name":"TENANT_NAME","value":"${TENANT_NAME}"},{"name":"APICAST_ACCESS_TOKEN","value":"${APICAST_ACCESS_TOKEN}"},{"name":"ADMIN_ACCESS_TOKEN","value":"${ADMIN_ACCESS_TOKEN}"},{"name":"PROVIDER_PLAN","value":"enterprise"},{"name":"USER_LOGIN","value":"${ADMIN_USERNAME}"},{"name":"USER_PASSWORD","value":"${ADMIN_PASSWORD}"},{"name":"RAILS_LOG_TO_STDOUT","value":"true"},{"name":"RAILS_LOG_LEVEL","value":"info"},{"name":"THINKING_SPHINX_ADDRESS","value":"system-sphinx"},{"name":"THINKING_SPHINX_PORT","value":"9306"},{"name":"THINKING_SPHINX_CONFIGURATION_FILE","value":"/tmp/sphinx.conf"},{"name":"EVENTS_SHARED_SECRET","value":"${SYSTEM_BACKEND_SHARED_SECRET}"},{"name":"THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE","value":"VERIFY_NONE"},{"name":"APICAST_BACKEND_ROOT_ENDPOINT","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"},{"name":"CONFIG_INTERNAL_API_USER","value":"${SYSTEM_BACKEND_USERNAME}"},{"name":"CONFIG_INTERNAL_API_PASSWORD","value":"${SYSTEM_BACKEND_PASSWORD}"},{"name":"SECRET_KEY_BASE","value":"${SYSTEM_APP_SECRET_KEY_BASE}"},{"name":"AMP_RELEASE","value":"${AMP_RELEASE}"},{"name":"SMTP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"address","name":"smtp"}}},{"name":"SMTP_USER_NAME","valueFrom":{"configMapKeyRef":{"key":"username","name":"smtp"}}},{"name":"SMTP_PASSWORD","valueFrom":{"configMapKeyRef":{"key":"password","name":"smtp"}}},{"name":"SMTP_DOMAIN","valueFrom":{"configMapKeyRef":{"key":"domain","name":"smtp"}}},{"name":"SMTP_PORT","valueFrom":{"configMapKeyRef":{"key":"port","name":"smtp"}}},{"name":"SMTP_AUTHENTICATION","valueFrom":{"configMapKeyRef":{"key":"authentication","name":"smtp"}}},{"name":"SMTP_OPENSSL_VERIFY_MODE","valueFrom":{"configMapKeyRef":{"key":"openssl.verify.mode","name":"smtp"}}},{"name":"BACKEND_ROUTE","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"}],"image":"3scale-amp20/system:1.0-2","imagePullPolicy":"IfNotPresent","name":"system-resque","volumeMounts":[{"mountPath":"/opt/system/public/system","name":"system-storage"}]},{"args":["rake","resque:scheduler","QUEUE=*"],"env":[{"name":"RAILS_ENV","value":"production"},{"name":"DATABASE_URL","value":"mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"},{"name":"FORCE_SSL","value":"true"},{"name":"THREESCALE_SUPERDOMAIN","value":"${WILDCARD_DOMAIN}"},{"name":"TENANT_NAME","value":"${TENANT_NAME}"},{"name":"APICAST_ACCESS_TOKEN","value":"${APICAST_ACCESS_TOKEN}"},{"name":"ADMIN_ACCESS_TOKEN","value":"${ADMIN_ACCESS_TOKEN}"},{"name":"PROVIDER_PLAN","value":"enterprise"},{"name":"USER_LOGIN","value":"${ADMIN_USERNAME}"},{"name":"USER_PASSWORD","value":"${ADMIN_PASSWORD}"},{"name":"RAILS_LOG_TO_STDOUT","value":"true"},{"name":"RAILS_LOG_LEVEL","value":"info"},{"name":"THINKING_SPHINX_ADDRESS","value":"system-sphinx"},{"name":"THINKING_SPHINX_PORT","value":"9306"},{"name":"THINKING_SPHINX_CONFIGURATION_FILE","value":"/tmp/sphinx.conf"},{"name":"EVENTS_SHARED_SECRET","value":"${SYSTEM_BACKEND_SHARED_SECRET}"},{"name":"THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE","value":"VERIFY_NONE"},{"name":"APICAST_BACKEND_ROOT_ENDPOINT","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"},{"name":"CONFIG_INTERNAL_API_USER","value":"${SYSTEM_BACKEND_USERNAME}"},{"name":"CONFIG_INTERNAL_API_PASSWORD","value":"${SYSTEM_BACKEND_PASSWORD}"},{"name":"SECRET_KEY_BASE","value":"${SYSTEM_APP_SECRET_KEY_BASE}"},{"name":"AMP_RELEASE","value":"${AMP_RELEASE}"},{"name":"SMTP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"address","name":"smtp"}}},{"name":"SMTP_USER_NAME","valueFrom":{"configMapKeyRef":{"key":"username","name":"smtp"}}},{"name":"SMTP_PASSWORD","valueFrom":{"configMapKeyRef":{"key":"password","name":"smtp"}}},{"name":"SMTP_DOMAIN","valueFrom":{"configMapKeyRef":{"key":"domain","name":"smtp"}}},{"name":"SMTP_PORT","valueFrom":{"configMapKeyRef":{"key":"port","name":"smtp"}}},{"name":"SMTP_AUTHENTICATION","valueFrom":{"configMapKeyRef":{"key":"authentication","name":"smtp"}}},{"name":"SMTP_OPENSSL_VERIFY_MODE","valueFrom":{"configMapKeyRef":{"key":"openssl.verify.mode","name":"smtp"}}},{"name":"BACKEND_ROUTE","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"}],"image":"3scale-amp20/system:1.0-2","imagePullPolicy":"IfNotPresent","name":"system-scheduler"}],"volumes":[{"name":"system-storage","persistentVolumeClaim":{"claimName":"system-storage"}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"system-sidekiq"},"spec":{"replicas":1,"selector":{"name":"system-sidekiq"},"strategy":{"rollingParams":{"intervalSeconds":1,"maxSurge":"25%","maxUnavailable":"25%","timeoutSeconds":600,"updatePeriodSeconds":1},"type":"Rolling"},"template":{"metadata":{"labels":{"name":"system-sidekiq"}},"spec":{"containers":[{"args":["rake","sidekiq:worker"],"env":[{"name":"RAILS_ENV","value":"production"},{"name":"DATABASE_URL","value":"mysql2://root:${MYSQL_ROOT_PASSWORD}@system-mysql/${MYSQL_DATABASE}"},{"name":"FORCE_SSL","value":"true"},{"name":"THREESCALE_SUPERDOMAIN","value":"${WILDCARD_DOMAIN}"},{"name":"TENANT_NAME","value":"${TENANT_NAME}"},{"name":"APICAST_ACCESS_TOKEN","value":"${APICAST_ACCESS_TOKEN}"},{"name":"ADMIN_ACCESS_TOKEN","value":"${ADMIN_ACCESS_TOKEN}"},{"name":"PROVIDER_PLAN","value":"enterprise"},{"name":"USER_LOGIN","value":"${ADMIN_USERNAME}"},{"name":"USER_PASSWORD","value":"${ADMIN_PASSWORD}"},{"name":"RAILS_LOG_TO_STDOUT","value":"true"},{"name":"RAILS_LOG_LEVEL","value":"info"},{"name":"THINKING_SPHINX_ADDRESS","value":"system-sphinx"},{"name":"THINKING_SPHINX_PORT","value":"9306"},{"name":"THINKING_SPHINX_CONFIGURATION_FILE","value":"/tmp/sphinx.conf"},{"name":"EVENTS_SHARED_SECRET","value":"${SYSTEM_BACKEND_SHARED_SECRET}"},{"name":"THREESCALE_SANDBOX_PROXY_OPENSSL_VERIFY_MODE","value":"VERIFY_NONE"},{"name":"APICAST_BACKEND_ROOT_ENDPOINT","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"},{"name":"CONFIG_INTERNAL_API_USER","value":"${SYSTEM_BACKEND_USERNAME}"},{"name":"CONFIG_INTERNAL_API_PASSWORD","value":"${SYSTEM_BACKEND_PASSWORD}"},{"name":"SECRET_KEY_BASE","value":"${SYSTEM_APP_SECRET_KEY_BASE}"},{"name":"AMP_RELEASE","value":"${AMP_RELEASE}"},{"name":"SMTP_ADDRESS","valueFrom":{"configMapKeyRef":{"key":"address","name":"smtp"}}},{"name":"SMTP_USER_NAME","valueFrom":{"configMapKeyRef":{"key":"username","name":"smtp"}}},{"name":"SMTP_PASSWORD","valueFrom":{"configMapKeyRef":{"key":"password","name":"smtp"}}},{"name":"SMTP_DOMAIN","valueFrom":{"configMapKeyRef":{"key":"domain","name":"smtp"}}},{"name":"SMTP_PORT","valueFrom":{"configMapKeyRef":{"key":"port","name":"smtp"}}},{"name":"SMTP_AUTHENTICATION","valueFrom":{"configMapKeyRef":{"key":"authentication","name":"smtp"}}},{"name":"SMTP_OPENSSL_VERIFY_MODE","valueFrom":{"configMapKeyRef":{"key":"openssl.verify.mode","name":"smtp"}}},{"name":"BACKEND_ROUTE","value":"https://backend-${TENANT_NAME}.${WILDCARD_DOMAIN}"}],"image":"3scale-amp20/system:1.0-2","imagePullPolicy":"IfNotPresent","name":"system-sidekiq","volumeMounts":[{"mountPath":"/opt/system/public/system","name":"system-storage"}]}],"volumes":[{"name":"system-storage","persistentVolumeClaim":{"claimName":"system-storage"}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","kind":"DeploymentConfig","metadata":{"name":"system-mysql"},"spec":{"replicas":1,"selector":{"name":"system-mysql"},"strategy":{"type":"Recreate"},"template":{"metadata":{"labels":{"name":"system-mysql"}},"spec":{"containers":[{"env":[{"name":"MYSQL_USER","value":"${MYSQL_USER}"},{"name":"MYSQL_PASSWORD","value":"${MYSQL_PASSWORD}"},{"name":"MYSQL_DATABASE","value":"${MYSQL_DATABASE}"},{"name":"MYSQL_ROOT_PASSWORD","value":"${MYSQL_ROOT_PASSWORD}"},{"name":"MYSQL_LOWER_CASE_TABLE_NAMES","value":"1"}],"image":"${MYSQL_IMAGE}","imagePullPolicy":"IfNotPresent","livenessProbe":{"initialDelaySeconds":30,"periodSeconds":10,"tcpSocket":{"port":3306}},"name":"system-mysql","ports":[{"containerPort":3306,"protocol":"TCP"}],"readinessProbe":{"exec":{"command":["/bin/sh","-i","-c","MYSQL_PWD=\"$MYSQL_PASSWORD\"
        mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE -e ''SELECT 1''"]},"initialDelaySeconds":10,"periodSeconds":30,"timeoutSeconds":5},"resources":{"limits":{"memory":"2Gi"},"requests":{"cpu":"1","memory":"1Gi"}},"volumeMounts":[{"mountPath":"/var/lib/mysql/data","name":"mysql-storage"}]}],"volumes":[{"name":"mysql-storage","persistentVolumeClaim":{"claimName":"mysql-storage"}}]}},"triggers":[{"type":"ConfigChange"}]}},{"apiVersion":"v1","data":{"redis.conf":"protected-mode
        no\n\nport 6379\n\ntimeout 0\ntcp-keepalive 300\n\ndaemonize no\nsupervised
        no\n\nloglevel notice\n\ndatabases 16\n\nsave 900 1\nsave 300 10\nsave 60
        10000\n\nstop-writes-on-bgsave-error yes\n\nrdbcompression yes\nrdbchecksum
        yes\n\ndbfilename dump.rdb\n\nslave-serve-stale-data yes\nslave-read-only
        yes\n\nrepl-diskless-sync no\nrepl-disable-tcp-nodelay no\n\nappendonly yes\nappendfilename
        \"appendonly.aof\"\nappendfsync everysec\nno-appendfsync-on-rewrite no\nauto-aof-rewrite-percentage
        100\nauto-aof-rewrite-min-size 64mb\naof-load-truncated yes\n\nlua-time-limit
        5000\n\nactiverehashing no\n\naof-rewrite-incremental-fsync yes\ndir /var/lib/redis/data\n"},"kind":"ConfigMap","metadata":{"name":"redis-config"}},{"apiVersion":"v1","data":{"address":"","authentication":"","domain":"","openssl.verify.mode":"","password":"","port":"","username":""},"kind":"ConfigMap","metadata":{"name":"smtp"}}],"parameters":[{"name":"AMP_RELEASE","description":"AMP
        release tag.","value":"2.0.0-CR2-redhat-1","required":true},{"name":"ADMIN_PASSWORD","generate":"expression","from":"[a-z0-9]{8}","required":true},{"name":"ADMIN_USERNAME","value":"admin","required":true},{"name":"APICAST_ACCESS_TOKEN","description":"Read
        Only Access Token that is APIcast going to use to download its configuration.","generate":"expression","from":"[a-z0-9]{8}","required":true},{"name":"ADMIN_ACCESS_TOKEN","description":"Admin
        Access Token with all scopes and write permissions for API access.","generate":"expression","from":"[a-z0-9]{16}"},{"name":"WILDCARD_DOMAIN","description":"Root
        domain for the wildcard routes. Eg. example.com will generate 3scale-admin.example.com.","required":true},{"name":"TENANT_NAME","description":"Tenant
        name under the root that Admin UI will be available with -admin suffix.","value":"3scale","required":true},{"name":"MYSQL_USER","displayName":"MySQL
        User","description":"Username for MySQL user that will be used for accessing
        the database.","value":"mysql","required":true},{"name":"MYSQL_PASSWORD","displayName":"MySQL
        Password","description":"Password for the MySQL user.","generate":"expression","from":"[a-z0-9]{8}","required":true},{"name":"MYSQL_DATABASE","displayName":"MySQL
        Database Name","description":"Name of the MySQL database accessed.","value":"system","required":true},{"name":"MYSQL_ROOT_PASSWORD","displayName":"MySQL
        Root password.","description":"Password for Root user.","generate":"expression","from":"[a-z0-9]{8}","required":true},{"name":"SYSTEM_BACKEND_USERNAME","description":"Internal
        3scale API username for internal 3scale api auth.","value":"3scale_api_user","required":true},{"name":"SYSTEM_BACKEND_PASSWORD","description":"Internal
        3scale API password for internal 3scale api auth.","generate":"expression","from":"[a-z0-9]{8}","required":true},{"name":"REDIS_IMAGE","description":"Redis
        image to use","value":"rhscl/redis-32-rhel7:3.2-5.7","required":true},{"name":"MYSQL_IMAGE","description":"Mysql
        image to use","value":"rhscl/mysql-56-rhel7:5.6-13.14","required":true},{"name":"SYSTEM_BACKEND_SHARED_SECRET","description":"Shared
        secret to import events from backend to system.","generate":"expression","from":"[a-z0-9]{8}","required":true},{"name":"SYSTEM_APP_SECRET_KEY_BASE","description":"System
        application secret key base","generate":"expression","from":"[a-f0-9]{128}","required":true},{"name":"APICAST_MANAGEMENT_API","description":"Scope
        of the APIcast Management API. Can be disabled, status or debug. At least
        status required for health checks.","value":"status"},{"name":"APICAST_OPENSSL_VERIFY","description":"Turn
        on/off the OpenSSL peer verification when downloading the configuration. Can
        be set to true/false.","value":"false"},{"name":"APICAST_RESPONSE_CODES","description":"Enable
        logging response codes in APIcast.","value":"true"}]}]}

        '
    http_version:
  recorded_at: Thu, 23 Aug 2018 06:21:42 GMT
recorded_with: VCR 3.0.3
